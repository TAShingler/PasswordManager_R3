<UserControl x:Class="PasswordManager_R3.Views.AppSettings_View"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PasswordManager_R3.Views"
             xmlns:convert="clr-namespace:PasswordManager_R3.Converters"
             xmlns:enum="clr-namespace:PasswordManager_R3.Enums"
             mc:Ignorable="d"
             d:DesignHeight="900"
             d:DesignWidth="1000">

    <UserControl.Resources>
        <!--#region //  Converters  //-->
        <convert:BooleanToEnabledConverter x:Key="BooleanToEnabledConverter" />
        <!--#endregion //  Converters  //-->
        <!--#region //  ScrollBar Styles  //-->
        <Style x:Key="ScrollBarLineButton"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrow"
                                                              Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                         Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrow"
                                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="border"
                                Margin="1"
                                CornerRadius="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                            <Path x:Name="arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="{Binding Content,
                                                 RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb"
               TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="border"
                                CornerRadius="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                         Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<ControlTemplate x:Key="VerticalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid x:Name="bounds"
                  Width="14"
                  Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineUpButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="4" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineUpButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="6" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineDownButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="4" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineDownButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                               Storyboard.TargetProperty="Visibility"
                                                               BeginTime="0:0:0.35">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                            Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineUpButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineUpButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineDownButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineDownButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                               Storyboard.TargetProperty="Visibility"
                                                               BeginTime="0:0:0.25">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                            Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled" />
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid" />
                        <VisualState x:Name="InvalidFocused" />
                        <VisualState x:Name="InvalidUnfocused" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                
                <Border x:Name="border"
                        Grid.Column="1"
                        Grid.RowSpan="3"
                        CornerRadius="2"
                        Background="#333"
                        Visibility="Hidden"/>
                <RepeatButton x:Name="scrollBarLineUpButton"
                              Grid.Column="1"
                              Grid.Row="0"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="0"
                              Height="4"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineUpCommand"
                              Content="M 0 4 L 8 4 L 4 0 Z"/>
                <Track x:Name="PART_Track"
                       Grid.Column="1"
                       Grid.Row="1"
                       Width="6"
                       IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Background="{StaticResource solidColorBrush-theme-foreground}"
                               BorderBrush="#333"
                               BorderThickness="0"
                               Style="{StaticResource ScrollBarThumb}"
                               Margin="2 0" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton x:Name="scrollBarLineDownButton"
                              Grid.Row="2"
                              Grid.Column="1"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="0"
                              Height="18"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineDownCommand"
                              Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>-->
        <!--<ControlTemplate x:Key="HorizontalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid x:Name="bounds"
                  Height="14"
                  Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineLeftButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="4" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineLeftButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="6" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineRightButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="4" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineRightButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                               Storyboard.TargetProperty="Visibility"
                                                               BeginTime="0:0:0.35">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                            Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineLeftButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineLeftButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineRightButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineRightButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                               Storyboard.TargetProperty="Visibility"
                                                               BeginTime="0:0:0.25">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                            Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled" />
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid" />
                        <VisualState x:Name="InvalidFocused" />
                        <VisualState x:Name="InvalidUnfocused" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                
                <Border x:Name="border"
                        Grid.Row="1"
                        Grid.ColumnSpan="3"
                        CornerRadius="2"
                        Background="#333"
                        Visibility="Hidden"/>
                <RepeatButton x:Name="scrollBarLineLeftButton"
                              Grid.Column="0"
                              Grid.Row="1"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="4"
                              Height="0"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineLeftCommand"
                              Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track x:Name="PART_Track"
                       Grid.Column="1"
                       Grid.Row="1"
                       Height="6"
                       IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Background="{StaticResource solidColorBrush-theme-foreground}"
                               BorderBrush="#333"
                               BorderThickness="0"
                               Style="{StaticResource ScrollBarThumb}"
                               Margin="0 2" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton x:Name="scrollBarLineRightButton"
                              Grid.Column="2"
                              Grid.Row="1"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="4"
                              Height="0"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineRightCommand"
                              Content="M 0 0 L 4 4 L 0 8 Z" />
            </Grid>
        </ControlTemplate>-->
        <ControlTemplate x:Key="VerticalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid x:Name="bounds"
                  Width="14"
                  Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border x:Name="border"
                        Grid.RowSpan="3"
                        CornerRadius="0"
                        Background="#333"
                        Visibility="Visible"/>
                <RepeatButton x:Name="scrollBarLineUpButton"
                              Grid.Row="0"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="14"
                              Height="14"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineUpCommand"
                              Content="M 0 4 L 8 4 L 4 0 Z"/>
                <Track x:Name="PART_Track"
                       Grid.Column="1"
                       Grid.Row="1"
                       Width="14"
                       IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="trackThumb"
                               Background="{StaticResource solidColorBrush-theme-foreground}"
                               BorderBrush="#333"
                               BorderThickness="0"
                               Style="{StaticResource ScrollBarThumb}"
                               Margin="2 0" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton x:Name="scrollBarLineDownButton"
                              Grid.Row="2"
                              Grid.Column="1"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="14"
                              Height="14"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineDownCommand"
                              Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid x:Name="bounds"
                  Height="14"
                  Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver" />
                        <VisualState x:Name="Disabled" />
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid" />
                        <VisualState x:Name="InvalidFocused" />
                        <VisualState x:Name="InvalidUnfocused" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <Border x:Name="border"
                        Grid.ColumnSpan="3"
                        CornerRadius="0"
                        Background="#333"
                        Visibility="Visible"/>
                <RepeatButton x:Name="scrollBarLineLeftButton"
                              Grid.Column="0"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="14"
                              Height="14"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineLeftCommand"
                              Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track x:Name="PART_Track"
                       Grid.Column="1"
                       Height="14"
                       IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Background="{StaticResource solidColorBrush-theme-foreground}"
                               BorderBrush="#333"
                               BorderThickness="0"
                               Style="{StaticResource ScrollBarThumb}"
                               Margin="0 2" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton x:Name="scrollBarLineRightButton"
                              Grid.Column="2"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="14"
                              Height="14"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineRightCommand"
                              Content="M 0 0 L 4 4 L 0 8 Z" />
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}"
               TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation"
                         Value="Horizontal">
                    <Setter Property="Width"
                            Value="Auto" />
                    <Setter Property="Height"
                            Value="Auto" />
                    <Setter Property="Template"
                            Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation"
                         Value="Vertical">
                    <Setter Property="Width"
                            Value="Auto" />
                    <Setter Property="Height"
                            Value="Auto" />
                    <Setter Property="Template"
                            Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
                <!--<MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Orientation"
                                   Value="Horizontal" />
                        <Condition Property="IsMouseOver"
                                   Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Width"
                                Value="Auto" />
                        <Setter Property="Height"
                                Value="18" />
                        <Setter Property="Template"
                                Value="{StaticResource HorizontalScrollBar}" />
                    </MultiTrigger.Setters>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Orientation"
                                   Value="Vertical" />
                        <Condition Property="IsMouseOver"
                                   Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Width"
                                Value="18" />
                        <Setter Property="Height"
                                Value="Auto" />
                        <Setter Property="Template"
                                Value="{StaticResource VerticalScrollBar}" />
                    </MultiTrigger.Setters>
                </MultiTrigger>-->
            </Style.Triggers>
        </Style>
        <!--#endregion //  ScrollBar Styles  //-->
        <!--#region //  ListView Styles  // -->
        <Style x:Key="BackupSettingsListViewItem"
               TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="bounds"
                                Width="96"
                                Height="96"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="2">

                            <Grid VerticalAlignment="Center"
                                  HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Width="36"
                                         Height="36"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center">
                                    <Canvas Width="24"
                                            Height="24">
                                        <!--<Path x:Name="listViewItemGlyph"
                                              Fill="Gainsboro"
                                              Data="M12,3A9,9 0 0,0 3,12H0L4,16L8,12H5A7,7 0 0,1 12,5A7,7 0 0,1 19,12A7,7 0 0,1 12,19C10.5,19 9.09,18.5 7.94,17.7L6.5,19.14C8.04,20.3 9.94,21 12,21A9,9 0 0,0 21,12A9,9 0 0,0 12,3
                                                    M14,12A2,2 0 0,0 12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12Z" />-->
                                        <Path x:Name="listViewItemGlyph"
                                              Fill="Gainsboro"
                                              Data="M 12 3.5 C 7.3115066 3.5 3.5 7.3115066 3.5 12 L 1 12 L 4 15 L 7 12 L 4.5 12 C 4.5 7.8519462 7.8519462 4.5 12 4.5 C 16.148054 4.5 19.5 7.8519462 19.5 12 C 19.5 16.148054 16.148054 19.5 12 19.5 C 10.345213 19.5 8.8183449 18.965785 7.5800781 18.060547 L 6.8710938 18.769531 C 8.297378 19.853462 10.073396 20.5 12 20.5 C 16.688493 20.5 20.5 16.688493 20.5 12 C 20.5 7.3115066 16.688493 3.5 12 3.5 z
                                                    M 12 10.5 A 1.5 1.5 0 0 0 10.5 12 A 1.5 1.5 0 0 0 12 13.5 A 1.5 1.5 0 0 0 13.5 12 A 1.5 1.5 0 0 0 12 10.5 z " />
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter x:Name="cPresenter"
                                                  Grid.Row="1"
                                                  TextBlock.Foreground="Gainsboro"
                                                  Content="{TemplateBinding Content}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DeepSkyblue" />
                                <Setter TargetName="listViewItemGlyph"
                                        Property="Fill"
                                        Value="DeepSkyBlue" />
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="DeepSkyBlue" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DodgerBlue" />
                                <Setter TargetName="listViewItemGlyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="DodgerBlue" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DatabaseSettingsListViewItem"
               TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="bounds"
                                Width="96"
                                Height="96"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="2">

                            <Grid VerticalAlignment="Center"
                                  HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Width="36"
                                         Height="36"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center">
                                    <Canvas Width="24"
                                            Height="24">
                                        <!--<Path x:Name="listViewItemGlyph"
                                              Fill="Gainsboro"
                                              Data="M12,3C7.58,3 4,4.79 4,7C4,9.21 7.58,11 12,11C16.42,11 20,9.21 20,7C20,4.79 16.42,3 12,3
                                                    M4,9V12C4,14.21 7.58,16 12,16C16.42,16 20,14.21 20,12V9C20,11.21 16.42,13 12,13C7.58,13 4,11.21 4,9
                                                    M4,14V17C4,19.21 7.58,21 12,21C16.42,21 20,19.21 20,17V14C20,16.21 16.42,18 12,18C7.58,18 4,16.21 4,14Z" />-->
                                        <!--<Path x:Name="listViewItemGlyph"
                                              Fill="Gainsboro"
                                              Data="M 12,3 C 7.58,3 4,4.79 4,7 v 10 c 0,2.21 3.59,4 8,4 4.41,0 8,-1.79 8,-4 V 7 C 20,4.79 16.42,3 12,3
                                                    m 6,14 c 0,0.5 -2.13,2 -6,2 -3.87,0 -6,-1.5 -6,-2 v -2.23 c 1.61,0.78 3.72,1.23 6,1.23 2.28,0 4.39,-0.45 6,-1.23 V 17
                                                    m 0,-4.55 C 16.7,13.4 14.42,14 12,14 9.58,14 7.3,13.4 6,12.45 V 9.64 c 1.47,0.83 3.61,1.36 6,1.36 2.39,0 4.53,-0.53 6,-1.36 v 2.81
                                                    M 12,9 C 8.13,9 6,7.5 6,7 6,6.5 8.13,5 12,5 c 3.87,0 6,1.5 6,2 0,0.5 -2.13,2 -6,2 z" />-->
                                        <Path x:Name="listViewItemGlyph"
                                              Fill="Gainsboro"
                                              Data="M 12 3.5 C 10.009101 3.5 8.2049028 3.8407559 6.8535156 4.4199219 C 6.177822 4.7095049 5.6115488 5.0567355 5.1933594 5.4804688 C 4.7751699 5.904202 4.5 6.4281586 4.5 7 L 4.5 17 C 4.5 17.571841 4.7751699 18.095798 5.1933594 18.519531 C 5.6115488 18.943264 6.177822 19.290495 6.8535156 19.580078 C 8.2049028 20.159244 10.009101 20.5 12 20.5 C 13.990899 20.5 15.795097 20.159244 17.146484 19.580078 C 17.822178 19.290495 18.388451 18.943264 18.806641 18.519531 C 19.22483 18.095798 19.5 17.571841 19.5 17 L 19.5 12 L 19.5 7 C 19.5 6.4281586 19.22483 5.904202 18.806641 5.4804688 C 18.388451 5.0567355 17.822178 4.7095049 17.146484 4.4199219 C 15.795097 3.8407559 13.990899 3.5 12 3.5 z
                                                    M 12 4.5 C 13.87509 4.5 15.569841 4.8312712 16.751953 5.3378906 C 17.343009 5.5912003 17.803502 5.8894976 18.09375 6.1835938 C 18.383998 6.47769 18.5 6.7434151 18.5 7 C 18.5 7.2565849 18.383998 7.5223101 18.09375 7.8164062 C 17.803502 8.1105024 17.343009 8.4087997 16.751953 8.6621094 C 15.569841 9.1687288 13.87509 9.5 12 9.5 C 10.12491 9.5 8.4301588 9.1687288 7.2480469 8.6621094 C 6.6569909 8.4087997 6.1964984 8.1105024 5.90625 7.8164062 C 5.6160016 7.5223102 5.5 7.2565849 5.5 7 C 5.5 6.7434151 5.6160016 6.4776899 5.90625 6.1835938 C 6.1964984 5.8894977 6.6569909 5.5912003 7.2480469 5.3378906 C 8.4301588 4.8312712 10.12491 4.5 12 4.5 z
                                                    M 5.5 8.796875 C 5.8737877 9.0985083 6.330956 9.356124 6.8535156 9.5800781 C 8.2049028 10.159244 10.009101 10.5 12 10.5 C 13.990899 10.5 15.795097 10.159244 17.146484 9.5800781 C 17.669044 9.356124 18.126212 9.0985083 18.5 8.796875 L 18.5 12 C 18.5 12.256585 18.383998 12.52231 18.09375 12.816406 C 17.803502 13.110502 17.343009 13.4088 16.751953 13.662109 C 15.569841 14.168729 13.87509 14.5 12 14.5 C 10.12491 14.5 8.4301588 14.168729 7.2480469 13.662109 C 6.6569909 13.4088 6.1964984 13.110502 5.90625 12.816406 C 5.6160016 12.52231 5.5 12.256585 5.5 12 L 5.5 8.796875 z
                                                    M 5.5 13.796875 C 5.8737877 14.098508 6.330956 14.356124 6.8535156 14.580078 C 8.2049028 15.159244 10.009101 15.5 12 15.5 C 13.990899 15.5 15.795097 15.159244 17.146484 14.580078 C 17.669044 14.356124 18.126212 14.098508 18.5 13.796875 L 18.5 17 C 18.5 17.256585 18.383998 17.52231 18.09375 17.816406 C 17.803502 18.110502 17.343009 18.4088 16.751953 18.662109 C 15.569841 19.168729 13.87509 19.5 12 19.5 C 10.12491 19.5 8.4301588 19.168729 7.2480469 18.662109 C 6.6569909 18.4088 6.1964984 18.110502 5.90625 17.816406 C 5.6160016 17.52231 5.5 17.256585 5.5 17 L 5.5 13.796875 z " />
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter x:Name="cPresenter"
                                                  Grid.Row="1"
                                                  TextBlock.Foreground="Gainsboro"
                                                  Content="{TemplateBinding Content}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DeepSkyblue" />
                                <Setter TargetName="listViewItemGlyph"
                                        Property="Fill"
                                        Value="DeepSkyBlue" />
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="DeepSkyBlue" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DodgerBlue" />
                                <Setter TargetName="listViewItemGlyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="DodgerBlue" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DisplaySettingsListViewItem"
               TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="bounds"
                                Width="96"
                                Height="96"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="2">

                            <Grid VerticalAlignment="Center"
                                  HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Width="36"
                                         Height="36"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center">
                                    <Canvas Width="24"
                                            Height="24">
                                        <!--<Path x:Name="listViewItemGlyph"
                                              Fill="Gainsboro"
                                              Data="M21,16V4H3V16H21
                                                    M21,2A2,2 0 0,1 23,4V16A2,2 0 0,1 21,18H14V20H16V22H8V20H10V18H3C1.89,18 1,17.1 1,16V4C1,2.89 1.89,2 3,2H21
                                                    M5,6H14V11H5V6
                                                    M15,6H19V8H15V6
                                                    M19,9V14H15V9H19
                                                    M5,12H9V14H5V12
                                                    M10,12H14V14H10V12Z" />-->
                                        <Path x:Name="listViewItemGlyph"
                                              Fill="Gainsboro"
                                              Data="M 3,2 C 1.9006497,2 1,2.9006497 1,4 v 12 c 0,1.09935 0.9006497,2 2,2 h 7 v 2 H 9 C 8.6952623,20 8.476819,20.140368 8.3085938,20.308594 8.1403683,20.476819 8,20.695262 8,21 v 1 h 8 V 21 C 16,20.695262 15.859632,20.476819 15.691406,20.308594 15.523181,20.140368 15.304738,20 15,20 h -1 v -2 h 7 c 1.09935,0 2,-0.90065 2,-2 V 4 C 23,2.9006497 22.09935,2 21,2 Z
                                                    m 0,1 h 18 c 0.562648,0 1,0.4373519 1,1 v 12 c 0,0.562648 -0.437352,1 -1,1 H 3 C 2.4373519,17 2,16.562648 2,16 V 4 C 2,3.4373519 2.4373519,3 3,3 Z
                                                    M 6,6 C 5.4546492,6 5,6.4546492 5,7 v 3 c 0,0.545351 0.4546492,1 1,1 h 7 c 0.545351,0 1,-0.454649 1,-1 V 7 C 14,6.4546492 13.545351,6 13,6 Z
                                                    m 10,0 c -0.545351,0 -1,0.4546492 -1,1 0,0.5453508 0.454649,1 1,1 h 2 C 18.545351,8 19,7.5453508 19,7 19,6.4546492 18.545351,6 18,6 Z
                                                    M 6,7 h 7 v 3 H 6 Z
                                                    m 10,2 c -0.545351,0 -1,0.4546492 -1,1 v 3 c 0,0.545351 0.454649,1 1,1 h 2 c 0.545351,0 1,-0.454649 1,-1 V 10 C 19,9.4546492 18.545351,9 18,9 Z
                                                    m 0,1 h 2 v 3 H 16 Z
                                                    M 6,12 c -0.5453508,0 -1,0.454649 -1,1 0,0.545351 0.4546492,1 1,1 H 8 C 8.5453508,14 9,13.545351 9,13 9,12.454649 8.5453508,12 8,12 Z
                                                    m 5,0 c -0.545351,0 -1,0.454649 -1,1 0,0.545351 0.454649,1 1,1 h 2 c 0.545351,0 1,-0.454649 1,-1 0,-0.545351 -0.454649,-1 -1,-1 z
                                                    m 0,6 h 2 v 2 c 0,0.304738 0.140368,0.523181 0.308594,0.691406 C 13.476819,20.859632 13.695262,21 14,21 H 9.9824219 C 10.283073,21 10.502061,20.867182 10.675781,20.701172 10.849502,20.535162 11,20.312914 11,20 Z" />
                                        <!--<Path x:Name="listViewItemGlyph"
                                              Fill="Gainsboro"
                                              Data="M21,16H3V4H21
                                                    M21,2H3C1.89,2 1,2.89 1,4V16A2,2 0 0,0 3,18H10V20H8V22H16V20H14V18H21A2,2 0 0,0 23,16V4C23,2.89 22.1,2 21,2Z" />-->
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter x:Name="cPresenter"
                                                  Grid.Row="1"
                                                  TextBlock.Foreground="Gainsboro"
                                                  Content="{TemplateBinding Content}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DeepSkyblue" />
                                <Setter TargetName="listViewItemGlyph"
                                        Property="Fill"
                                        Value="DeepSkyBlue" />
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="DeepSkyBlue" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DodgerBlue" />
                                <Setter TargetName="listViewItemGlyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="DodgerBlue" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListViewUpButtonStyle"
               TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bounds"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2 2 0 0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                              Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
                                                                         Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrowGlyph"
                                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                              Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
                                                                         Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrowGlyph"
                                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Canvas Height="12"
                                    Width="12">
                                <Path x:Name="arrowGlyph"
                                      Fill="{TemplateBinding Foreground}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Data="M 0 9 L 12 9 L 6 3 Z" />
                            </Canvas>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListViewDownButtonStyle"
               TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bounds"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0 0 2 2">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                              Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
                                                                         Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrowGlyph"
                                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                              Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
                                                                         Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrowGlyph"
                                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Canvas Height="12"
                                    Width="12">
                                <Path x:Name="arrowGlyph"
                                      Fill="{TemplateBinding Foreground}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Data="M 0 3 L 12 3 L 6 9 Z" />
                            </Canvas>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion //  ListView Styles  // -->
        <!--#region //  NumericUpDown Styles  //-->
        <!--#region / Buttons /-->
        <Style x:Key="NumericUpDownIncrementButtonStyle"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrowGlyph"
                                                                          Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrowGlyph"
                                                                          Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            
                            <Border x:Name="bounds"
                                    Background="{StaticResource solidColorBrush-theme-midground}"
                                    BorderBrush="{StaticResource solidColorBrush-theme-midground}"
                                    BorderThickness="1"
                                    CornerRadius="0 2 0 0"/>
                            <Canvas Width="8"
                                    Height="4">
                                <Path x:Name="arrowGlyph"
                                      Fill="Gainsboro"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Data="M 0 4 4 0 8 4 Z" />
                            </Canvas>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NumericUpDownDecrementButtonStyle"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrowGlyph"
                                                                          Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrowGlyph"
                                                                          Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            
                            <Border x:Name="bounds"
                                    Background="{StaticResource solidColorBrush-theme-midground}"
                                    BorderBrush="{StaticResource solidColorBrush-theme-midground}"
                                    BorderThickness="1"
                                    CornerRadius="0 0 2 0"/>
                            <Canvas Width="8"
                                    Height="4">
                                <Path x:Name="arrowGlyph"
                                      Fill="Gainsboro"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Data="M 0 0 4 4 8 0 Z" />
                            </Canvas>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion / Buttons /-->
        <!--#region / TextBox /-->
        <Style x:Key="NumericUpDownTextBoxStyle"
               TargetType="{x:Type TextBox}">
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Hidden" />
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Hidden" />
            <Setter Property="Foreground"
                    Value="Gainsboro" />
            <Setter Property="CaretBrush"
                    Value="Gainsboro" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Grid>
                            <Border x:Name="bounds"
                                    Background="{StaticResource solidColorBrush-theme-midground}"
                                    BorderBrush="{StaticResource solidColorBrush-theme-midground}"
                                    BorderThickness="1"
                                    CornerRadius="2 0 0 2">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Margin="0"
                                              VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                              HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion / TextBox /-->
        <!--#endregion //  NumberUpDown Styles  //-->
        <!--#region //  Generic Control Styles  //-->
        <!--#region / TextBox /-->
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Height"
                    Value="24" />
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Hidden" />
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Hidden" />
            <Setter Property="Foreground"
                    Value="Gainsboro" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Background="{StaticResource solidColorBrush-theme-midground}"
                                BorderBrush="{StaticResource solidColorBrush-theme-midground}"
                                BorderThickness="1"
                                CornerRadius="2">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Margin="0"
                                          Padding="2 0"
                                          VerticalAlignment="Center"
                                          VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                          HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion / TextBox /-->
        <!--#region / Button /-->
        <Style TargetType="{x:Type Button}">
                <!--<Setter Property="Background"
                        Value="{Binding Background}" />
                <Setter Property="Foreground"
                        Value="{Binding Foreground}" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bounds"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}"
                                CornerRadius="2">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                            Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                        Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="contents"
                                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                        Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                            Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                        Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="contents"
                                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                        Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                            Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                        Value="#333" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                        Value="#222" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="contents"
                                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                        Value="#333" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <ContentPresenter Name="contents"
                                              TextBlock.Foreground="Gainsboro"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--$endregion / Button /-->
        <!--#endregion //  Generic Control Styles  //-->
        <!--#region / CheckBox /-->
        <Style TargetType="{x:Type CheckBox}">
            <!--<Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="bounds"
                                    Grid.Column="0"
                                    Height="14"
                                    Width="14"
                                    Background="{DynamicResource solidColorBrush-theme-midground}"
                                    BorderBrush="{DynamicResource solidColorBrush-theme-midground}"
                                    BorderThickness="0"
                                    CornerRadius="2"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">
                                <Viewbox Width="12"
                                         Height="12">
                                    <Canvas Width="24"
                                            Height="24">
                                        <Path x:Name="checkGlyph"
                                              Fill="Gainsboro"
                                              Data="M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z" />
                                    </Canvas>
                                </Viewbox>
                            </Border>
                            <Label Grid.Column="1"
                                   Foreground="{TemplateBinding Foreground}"
                                   Content="{TemplateBinding Content}" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                                     Value="False">
                                <Setter TargetName="checkGlyph"
                                        Property="Visibility"
                                        Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsChecked"
                                     Value="True">
                                <Setter TargetName="checkGlyph"
                                        Property="Visibility"
                                        Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="deepskyblue" />
                                <Setter TargetName="bounds"
                                        Property="BorderThickness"
                                        Value="1" />
                                <Setter TargetName="checkGlyph"
                                        Property="Fill"
                                        Value="deepskyblue" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="dodgerblue" />
                                <Setter TargetName="bounds"
                                        Property="BorderThickness"
                                        Value="1" />
                                <Setter TargetName="checkGlyph"
                                        Property="Fill"
                                        Value="dodgerblue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion / CheckBox /-->
        <!--#region / RadioButton /-->
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="true" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="FocusVisualStyle"
                    Value="{DynamicResource RadioButtonFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="12"
                                      Height="12">
                                    <Ellipse x:Name="Border"
                                             Fill="{DynamicResource solidColorBrush-theme-midground}"
                                             Stroke="#555"
                                             StrokeThickness="1" />
                                    <Ellipse x:Name="CheckMark"
                                             Margin="3"
                                             Fill="{DynamicResource solidColorBrush-theme-foreground}"
                                             Visibility="Collapsed" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="CheckMark"
                                                                          Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="cPresenter"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="Stroke.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="CheckMark"
                                                                          Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="cPresenter"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="cPresenter"
                                              Margin="4,0,0,0"
                                              TextBlock.Foreground="{TemplateBinding Foreground}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion / RadioButton /-->
        <!--#endregion //  Generic Control Styles  //-->
    </UserControl.Resources>

    <DockPanel LastChildFill="True">
        <!--#region //  Top Panel  //-->
        <Border DockPanel.Dock="Top"
                Height="42"
                Background="#333"
                CornerRadius="2 2 0 0">
            <TextBlock FontSize="12"
                       Padding="12"
                       Foreground="Gainsboro"
                       Text="Application Settings" />
        </Border>
        <!--#endregion //  Top Panel  //-->
        <!--#region //  Bottom Panel  //-->
        <Border DockPanel.Dock="Bottom"
                Height="42"
                Background="#333"
                CornerRadius="0 0 2 2">
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Right">
                <Button Height="30"
                        Width="100"
                        Margin="5"
                        Foreground="Gainsboro"
                        Background="#222"
                        BorderBrush="#222"
                        BorderThickness="0"
                        Content="OK"
                        Command="{Binding ConfirmButtonCommand}"/>
                <Button Height="30"
                        Width="100"
                        Margin="5"
                        Foreground="Gainsboro"
                        Background="#222"
                        BorderBrush="#222"
                        BorderThickness="0"
                        Content="Cancel"
                        Command="{Binding CancelButtonCommand}"/>
            </StackPanel>
        </Border>
        <!--#endregion //  Bottom Panel  //-->
        <!--#region //  Left Panel  //-->
        <Border DockPanel.Dock="Left"
                Width="Auto"
                Background="#262626"
                Padding="12 6">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Button x:Name="listViewTabDecrementButton"
                                Grid.Row="0"
                                Height="16"
                                Foreground="Gainsboro"
                                Background="#333"
                                BorderBrush="#666"
                                BorderThickness="0"
                                Style="{StaticResource ListViewUpButtonStyle}"
                                Click="listViewTabDecrementButton_Click"/>
                <!--//  Eventually need to make ListView width Auto and scale with ListViewItem contents  //-->
                <ListView x:Name="listViewTabSelector"
                                  Grid.Row="1"
                                  Width="100"
                                  Foreground="Gainsboro"
                                  Background="#333"
                                  BorderBrush="#666"
                                  BorderThickness="0"
                                  ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  SelectedIndex="0">
                    <ListViewItem Content="Backup"
                                          Style="{StaticResource BackupSettingsListViewItem}" />
                    <ListViewItem Content="Database"
                                          Style="{StaticResource DatabaseSettingsListViewItem}" />
                    <ListViewItem Content="Display"
                                          Style="{StaticResource DisplaySettingsListViewItem}" />
                </ListView>
                <Button x:Name="listViewTabIncrementButton"
                                Grid.Row="2"
                                Height="16"
                                Foreground="Gainsboro"
                                Background="#333"
                                BorderBrush="#666"
                                BorderThickness="0"
                                Style="{StaticResource ListViewDownButtonStyle}"
                                Click="listViewTabIncrementButton_Click"/>
            </Grid>
        </Border>
        <!--#endregion //  Left Panel  //-->

        <!--#region //  Right Panel  //-->
        <TabControl Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="0"
                    SelectedIndex="{Binding ElementName=listViewTabSelector,
                                            Path=SelectedIndex}">
            <!--#region Backup Options-->
            <TabItem Visibility="Collapsed">
                <Border Margin="0 5"
                        Padding="4"
                        Background="Transparent"
                        CornerRadius="2">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Foreground="Gainsboro"
                                   Text="Backup Options"
                                   HorizontalAlignment="Left" />
                        <Separator Margin="0 5"
                                   Background="#777"/>
                        <Grid Margin="12 0 0 0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="1*" />
                                <!-- Height="28" />-->
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="180"
                                                  Width="Auto" />
                                <ColumnDefinition MinWidth="420"
                                                  Width="Auto" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>

                            <!--#region  Allow Backups -->
                            <!--<CheckBox x:Name="checkBoxAllowAutoBackups"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Grid.ColumnSpan="3"
                                      Margin="0 4"
                                      IsChecked="{Binding AllowAutoBackups}"
                                      Foreground="Gainsboro"
                                      VerticalContentAlignment="Center"
                                      Content="Allow automatic backups" />-->
                            <!--#endregion Allow Backups -->

                            <!--#region Backup Count -->
                            <Label Grid.Row="1"
                                   Grid.Column="0"
                                   Padding="0"
                                   Margin="0 4"
                                   VerticalContentAlignment="Center"
                                   Foreground="Gainsboro"
                                   Content="Auto backup count:" />
                            <Grid Grid.Row="1"
                                  Grid.Column="1"
                                  Margin="0 4">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="30"
                                                      Width="Auto" />
                                    <ColumnDefinition MinWidth="20"
                                                      Width="Auto" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="txtBoxAutoBackupCount"
                                         Grid.Row="0"
                                         Grid.RowSpan="2"
                                         Grid.Column="0"
                                         MinHeight="20"
                                         IsEnabled="{Binding ElementName=checkBoxAllowAutoBackups,
                                                             Path=IsChecked}"
                                         Text="{Binding AutoBackupCount}"
                                         VerticalContentAlignment="Center"
                                         HorizontalContentAlignment="Right"
                                         Style="{StaticResource NumericUpDownTextBoxStyle}"
                                         PreviewKeyDown="NumericUpDownTextBox_PreviewKeyDown"/>
                                <RepeatButton x:Name="rptBtnIncrementAutoBackupCount"
                                              Grid.Row="0"
                                              Grid.Column="1"
                                              IsEnabled="{Binding ElementName=checkBoxAllowAutoBackups,
                                                                  Path=IsChecked}"
                                              Command="{Binding IncrementAutoBackupCountCommand}"
                                              Style="{DynamicResource NumericUpDownIncrementButtonStyle}" />
                                <RepeatButton x:Name="rptBtnDecrementAutoBackupCount"
                                              Grid.Row="1"
                                              Grid.Column="1"
                                              IsEnabled="{Binding ElementName=checkBoxAllowAutoBackups,
                                                                  Path=IsChecked}"
                                              Command="{Binding DecrementAutoBackupCountCommand}"
                                              Style="{StaticResource NumericUpDownDecrementButtonStyle}" />
                            </Grid>
                            <!--#endregion Backup Count -->

                            <!--#region Backup Location -->
                            <Label Grid.Row="2"
                                   Grid.Column="0"
                                   Padding="0"
                                   Margin="0 4"
                                   VerticalContentAlignment="Center"
                                   Foreground="Gainsboro"
                                   Content="Backup location:" />
                            <Grid Grid.Row="2"
                                  Grid.Column="1"
                                  Margin="0 4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="4" />
                                    <ColumnDefinition Width="75" />
                                </Grid.ColumnDefinitions>

                                <TextBox Grid.Column="0"
                                         MinHeight="20"
                                         VerticalContentAlignment="Center"
                                         Text="{Binding BackupLocation}"/>
                                <Button Grid.Column="2"
                                        Content="Browse..."
                                        Background="#505050"
                                        BorderBrush="#505050"
                                        Command="{Binding BackupLocationButtonCommand}"/>
                            </Grid>
                            <!-- might need to add button to select path -->
                            <!--#endregion Backup Location -->

                            <!--#region Backup Frequency -->
                            <!--<Label Grid.Row="3"
                                       Grid.Column="0"
                                       Padding="0"
                                       Margin="0"
                                       VerticalContentAlignment="Center"
                                       Foreground="Gainsboro"
                                       Content="Backup frequency:"/>-->
                            <!--<ComboBox Grid.Row="3"
                                          Grid.Column="1"
                                          Margin="0 2">
                                    <ComboBoxItem Content="Item 1" />
                                    <ComboBoxItem Content="Item 2" />
                                    <ComboBoxItem Content="Item 3" />
                                    <ComboBoxItem Content="Item 3" />
                                    <ComboBoxItem Content="Item 4" />
                                </ComboBox>-->
                            <!--#endregion Backup Frequency -->
                        </Grid>
                    </StackPanel>
                </Border>
            </TabItem>
            <!--#endregion Backup Options-->

            <!--#region Database Options-->
            <TabItem Visibility="Collapsed">
                <Border Margin="0 5"
                        Padding="4"
                        Background="Transparent"
                        CornerRadius="2">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Foreground="Gainsboro"
                                   Text="Database Options"
                                   HorizontalAlignment="Left"/>
                        <Separator Margin="0 5"
                                   Background="#777"/>
                        <Grid Margin="12 0 0 0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="180"
                                                  Width="Auto"/>
                                <ColumnDefinition MinWidth="420"
                                                  Width="Auto"/>
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>

                            <!--#region Erase Database -->
                            <CheckBox x:Name="checkBoxEnableEraseAttempts"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Grid.ColumnSpan="3"
                                      Margin="0 4"
                                      IsChecked="{Binding EraseDatabaseAfterSetAmountAttempts}"
                                      VerticalContentAlignment="Center"
                                      Foreground="Gainsboro"
                                      Content="Erase database after set amount of attempts" />

                            <Label Grid.Row="1"
                                   Grid.Column="0"
                                   Padding="0"
                                   Margin="0 4"
                                   VerticalContentAlignment="Center"
                                   Foreground="Gainsboro"
                                   Content="Attempts before erasing:" />
                            <Grid Grid.Row="1"
                                      Grid.Column="1"
                                      Margin="0 4"
                                      HorizontalAlignment="Left">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="txtBoxUnlockAttempts"
                                         Grid.Row="0"
                                         Grid.RowSpan="2"
                                         Grid.Column="0"
                                         MinHeight="20"
                                         IsEnabled="{Binding ElementName=checkBoxEnableEraseAttempts,
                                                             Path=IsChecked}"
                                         Text="{Binding UnlockAttempts}"
                                         VerticalContentAlignment="Center"
                                         HorizontalContentAlignment="Right"
                                         Style="{StaticResource NumericUpDownTextBoxStyle}"
                                         PreviewKeyDown="NumericUpDownTextBox_PreviewKeyDown"/>
                                <RepeatButton Grid.Row="0"
                                              Grid.Column="1"
                                              IsEnabled="{Binding ElementName=checkBoxEnableEraseAttempts,
                                                                  Path=IsChecked}"
                                              Style="{StaticResource NumericUpDownIncrementButtonStyle}"
                                              Command="{Binding IncrementUnlockAttemptsCommand}">
                                    <Canvas Width="8"
                                            Height="4">
                                        <Path Fill="Black"
                                              Data="M 0 4 H 8 L 4 0 Z" />
                                    </Canvas>
                                </RepeatButton>
                                <RepeatButton Grid.Row="1"
                                              Grid.Column="1"
                                              IsEnabled="{Binding ElementName=checkBoxEnableEraseAttempts,
                                                                  Path=IsChecked}"
                                              Style="{StaticResource NumericUpDownDecrementButtonStyle}"
                                              Command="{Binding DecrementUnlockAttemptsCommand}">
                                    <Canvas Width="8"
                                            Height="4">
                                        <Path Fill="Black"
                                              Data="M 0 0 H 8 L 4 4 Z" />
                                    </Canvas>
                                </RepeatButton>
                            </Grid>
                            <!--#endregion -->
                            
                            <Separator Grid.Row="2"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Margin="0 5"/>
                            
                            <!--#region Database Lockout-->
                            <Label Grid.Row="3"
                                   Grid.Column="0"
                                   Padding="0"
                                   Margin="0 4"
                                   VerticalContentAlignment="Center"
                                   Foreground="Gainsboro"
                                   Content="Security timeout (in minutes):" />
                            <Grid Grid.Row="3"
                                      Grid.Column="1"
                                      Margin="0 4"
                                      HorizontalAlignment="Left">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="30"
                                                      Width="Auto" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="txtBoxTimeoutMinutes"
                                         Grid.Row="0"
                                         Grid.RowSpan="2"
                                         Grid.Column="0"
                                         MinHeight="20"
                                         Text="{Binding TimeoutMinutes}"
                                         VerticalContentAlignment="Center"
                                         HorizontalContentAlignment="Right"
                                         Style="{StaticResource NumericUpDownTextBoxStyle}"
                                         PreviewKeyDown="NumericUpDownTextBox_PreviewKeyDown"/>
                                <RepeatButton Grid.Row="0"
                                              Grid.Column="1"
                                              Style="{StaticResource NumericUpDownIncrementButtonStyle}"
                                              Command="{Binding IncrementTimeoutMinutesCommand}">
                                    <Canvas Width="8"
                                            Height="4">
                                        <Path Fill="Black"
                                              Data="M 0 4 H 8 L 4 0 Z" />
                                    </Canvas>
                                </RepeatButton>
                                <RepeatButton Grid.Row="1"
                                              Grid.Column="1"
                                              Style="{StaticResource NumericUpDownDecrementButtonStyle}"
                                              Command="{Binding DecrementTimeoutMinutesCommand}">
                                    <Canvas Width="8"
                                                Height="4">
                                        <Path Fill="Black"
                                                  Data="M 0 0 H 8 L 4 4 Z" />
                                    </Canvas>
                                </RepeatButton>
                            </Grid>

                            <!--<CheckBox Grid.Row="4"
                                      Grid.Column="0"
                                      Margin="0 4"
                                      IsChecked="{Binding LogDeletedItems}"
                                      Foreground="Gainsboro"
                                      VerticalContentAlignment="Center"
                                      Content="Log deleted items" />-->
                            <!--#endregion Database Lockout -->
                        </Grid>
                    </StackPanel>
                </Border>
            </TabItem>
            <!--#endregion Database Options-->

            <!--#region Display Options-->
            <TabItem Visibility="Collapsed">
                <Border Margin="0 5"
                        Padding="4"
                        Background="Transparent"
                        CornerRadius="2">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Foreground="Gainsboro"
                                       Text="Display Options"
                                       HorizontalAlignment="Left" />
                        <Separator Margin="0 5"
                                       Background="#777" />
                        <Grid Margin="12 0 0 0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="180"
                                                  Width="Auto" />
                                <ColumnDefinition MinWidth="420"
                                                  Width="Auto" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>

                            <!--#region TreeView Options -->
                            <!--<StackPanel Grid.Row="0"
                                            Grid.Column="0"
                                            Orientation="Horizontal">-->
                            <!--<Label Grid.Row="0"
                                       Grid.Column="0"
                                       Padding="0"
                                       Margin="0 4"
                                       VerticalContentAlignment="Top"
                                       Foreground="Gainsboro"
                                       Content="Default tree display:" />
                            <StackPanel Grid.Row="0"
                                            Grid.Column="1"
                                            Orientation="Vertical"
                                            Margin="0 5">
                                <RadioButton IsChecked="{Binding ExpandAllRadioButtonIsChecked}"
                                                 Foreground="Gainsboro"
                                                 Content="Expand all"
                                                 VerticalContentAlignment="Center"
                                                 Command="{Binding DefaultTreeDisplayCommand}"
                                                 CommandParameter="{x:Static enum:TreeDisplayType.ExpandAll}" />
                                <RadioButton IsChecked="{Binding CollapseAllRadioButtonIsChecked}"
                                                 Foreground="Gainsboro"
                                                 Content="Collapse all"
                                                 VerticalContentAlignment="Center"
                                                 Command="{Binding DefaultTreeDisplayCommand}"
                                                 CommandParameter="{x:Static enum:TreeDisplayType.CollapseAll}" />
                                <RadioButton IsChecked="{Binding RememberLastRadioButtonIsChecked}" Foreground="Gainsboro"
                                                 Content="Remember last"
                                                 VerticalContentAlignment="Center"
                                                 Command="{Binding DefaultTreeDisplayCommand}"
                                                 CommandParameter="{x:Static enum:TreeDisplayType.RememberLast}" />
                            </StackPanel>-->
                            <!--</StackPanel>-->

                            <Label Grid.Row="1"
                                       Grid.Column="0"
                                       Padding="0"
                                       Margin="0 4"
                                       VerticalContentAlignment="Top"
                                       Foreground="Gainsboro"
                                       Content="Expand/Collapse buttons:"/>
                            <StackPanel Grid.Row="1"
                                            Grid.Column="1"
                                            Orientation="Vertical"
                                            Margin="0 5">
                                <RadioButton IsChecked="{Binding PlusMinusSignsRadioButtonIsChecked}"
                                                 Foreground="Gainsboro"
                                                 Content="Plus/Minus signs"
                                                 VerticalContentAlignment="Center"
                                                 Command="{Binding ExpandCollapseButtonsCommand}"
                                                 CommandParameter="{x:Static enum:TreeExpandCollapseButtonStyle.PlusMinusSigns}" />
                                <RadioButton IsChecked="{Binding ArrowsRadioButtonIsChecked}"
                                                 Foreground="Gainsboro"
                                                 Content="Arrows"
                                                 VerticalContentAlignment="Center"
                                                 Command="{Binding ExpandCollapseButtonsCommand}"
                                                 CommandParameter="{x:Static enum:TreeExpandCollapseButtonStyle.Arrows}" />
                                <RadioButton IsChecked="{Binding FoldersRadioButtonIsChecked}"
                                                 Foreground="Gainsboro"
                                                 Content="Folders"
                                                 VerticalContentAlignment="Center"
                                                 Command="{Binding ExpandCollapseButtonsCommand}"
                                                 CommandParameter="{x:Static enum:TreeExpandCollapseButtonStyle.Folders}" />
                            </StackPanel>
                            <!--#endregion TreeView Options -->

                            <Separator Grid.Row="2"
                                           Grid.Column="0"
                                           Grid.ColumnSpan="3"
                                           Margin="0 5"/>

                            <!--#region DataGrid Options -->
                            <!--<CheckBox Grid.Row="3"
                                      Grid.Column="0"
                                      Margin="0 4"
                                      IsChecked="{Binding DisplayTreeView}"
                                      Foreground="Gainsboro"
                                      VerticalContentAlignment="Center"
                                      Content="Display Groups Tree?" />
                            <CheckBox Grid.Row="4"
                                      Grid.Column="0"
                                      Margin="0 4"
                                      IsChecked="{Binding DisplyInfoPane}"
                                      Foreground="Gainsboro"
                                      VerticalContentAlignment="Center"
                                      Content="Display information pane?" />-->
                            <!--#endregion DataGrid Options -->

                            <!--<Separator Grid.Row="5"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="3"
                                       Margin="0 5" />-->

                            <!--#region Quick Access icon size options-->
                            <Label Grid.Row="6"
                                       Grid.Column="0"
                                       Padding="0"
                                       Margin="0 4"
                                       VerticalContentAlignment="Top"
                                       Foreground="Gainsboro"
                                       Content="Quick access icon size:" />
                            <StackPanel Grid.Row="6"
                                            Grid.Column="1"
                                            Orientation="Vertical"
                                            Margin="0 5">
                                <RadioButton IsChecked="{Binding QuickAccessSmallRadioButtonIsChecked}"
                                                 Foreground="Gainsboro"
                                                 Content="Small"
                                                 VerticalContentAlignment="Center"
                                                 Command="{Binding QuickAccessIconSizeCommand}"
                                                 CommandParameter="{x:Static enum:QuickAccessIconSize.Small}" />
                                <RadioButton IsChecked="{Binding QuickAccessMediumRadioButtonIsChecked}"
                                                 Foreground="Gainsboro"
                                                 Content="Medium"
                                                 VerticalContentAlignment="Center"
                                                 Command="{Binding QuickAccessIconSizeCommand}"
                                                 CommandParameter="{x:Static enum:QuickAccessIconSize.Medium}" />
                                <RadioButton IsChecked="{Binding QuickAccessLargeRadioButtonIsChecked}"
                                                 Foreground="Gainsboro"
                                                 Content="Large"
                                                 VerticalContentAlignment="Center"
                                                 Command="{Binding QuickAccessIconSizeCommand}"
                                                 CommandParameter="{x:Static enum:QuickAccessIconSize.Large}" />
                            </StackPanel>
                            <!--#endregion Quick Access icon size options-->
                        </Grid>
                    </StackPanel>
                </Border>
            </TabItem>
            <!--#endregion Display Options-->
        </TabControl>
        <!--#endregion //  Right Panel  //-->
    </DockPanel>
</UserControl>
