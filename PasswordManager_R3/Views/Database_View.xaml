<UserControl x:Name="DatabaseViewUserControl"
             x:Class="PasswordManager_R3.Views.Database_View"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:PasswordManager_R3.Views"
             xmlns:proj="clr-namespace:PasswordManager_R3"
             xmlns:m="clr-namespace:PasswordManager_R3.Models"
             xmlns:c="clr-namespace:PasswordManager_R3.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450"
             d:DesignWidth="800"
             SnapsToDevicePixels="True">

    <UserControl.Resources>
        <!--#region//  Converters  //-->
        <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
        <c:MutliplyDoubleConverter x:Key="MultiplyDoubleConverter" />
        <c:ActualSizeToMaxSizeConverter x:Key="ActualSizeToMaxSizeConverter" />
        <c:CheckedToGeometryConverter x:Key="CheckedToGeometryConverter" />
        <c:SelectedRecordPropertyMaskedConverter x:Key="SelectedRecordPropertyMaskedConverter" />
        <c:IntToDrawingImageConverter x:Key="IntToDrawingImageConverter" />
        <c:SelectedIndexToGridLengthConverter x:Key="SelectedIndexToGridLengthConverter" />
        <!--#endregion//  Converters  //-->
        
        <!--<PathGeometry x:Key="DownArrowGlyphGeometry" Figures="M 3,4 8,9 13,4 15,6 8,13 1,6 Z" />
        <PathGeometry x:Key="RightArrowGlyphGeometry" Figures="M 6,1 13,8 6,15 4,13 9,8 4,3 Z" />-->
        <PathGeometry x:Key="DownArrowGlyphGeometry" Figures="M 5,6 4,7 8,11 12,7 11,6 8,9 Z" />
        <PathGeometry x:Key="RightArrowGlyphGeometry" Figures="M 6,11 7,12 11,8 7,4 6,5 9,8 Z" />
        <PathGeometry x:Key="PlusSignGlyphGeometry" Figures="m 4,4 v 9 h 9 V 4 Z m 1,1 h 7 v 7 H 5 Z
                                                             M 8,6 V 8 H 6 v 1 h 2 v 2 H 9 V 9 h 2 V 8 H 9 V 6 Z" />
        <PathGeometry x:Key="MinusSignGlyphGeometry" Figures="m 4,4 v 9 h 9 V 4 Z m 1,1 h 7 v 7 H 5 Z
                                                              m 6,8 v 1 h 5 V 8 Z" />
        <PathGeometry x:Key="OpenFolderGlyphGeometry" Figures="m 2,3 h 4 l 1,1 h 6 c 0.554,0 1,0.446 1,1 H 2 v 7 L 3,6 h 12 l -1,6 c -0.09108,0.546462 -0.446,1 -1,1 H 2 C 1.446,13 1,12.554 1,12 V 4 C 1,3.446 1.446,3 2,3 Z" />
        <PathGeometry x:Key="ClosedFolderGlyphGeometry" Figures="m 2,3 h 4 l 1,1 h 6 c 0.554,0 1,0.446 1,1 v 7 c -0.09108,0.546462 -0.446,1 -1,1 H 2 C 1.446,13 1,12.554 1,12 V 4 C 1,3.446 1.446,3 2,3 Z" />
        <PathGeometry x:Key="TreeViewItemToggleButtonCheckedGlyphGeometry" Figures="{Binding TreeExpandCollapseButtonStyle,
                                                                                             Converter={StaticResource TreeExpandCollapseButtonStyleToFiguresConverter},
                                                                                             ConverterParameter='checked'}" />
        <PathGeometry x:Key="TreeViewItemToggleButtonUncheckedGlyphGeometry" Figures="{Binding TreeExpandCollapseButtonStyle,
                                                                                               Converter={StaticResource TreeExpandCollapseButtonStyleToFiguresConverter},
                                                                                               ConverterParameter='unchecked'}" />

        <!--//  ContextMenu Styles  //-->
        <!--#region ContextMenu Styles-->
        <!--#region Styles -->
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid>
                            <ContentPresenter x:Name="cPresenter"
                                              Margin="12 4 24 4"
                                              Content="{TemplateBinding Header}" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="#646464" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="True">
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="{StaticResource solidColorBrush-theme-foreground}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="LightSkyBlue" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="DodgerBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="Grid.IsSharedSizeScope"
                    Value="False" />
            <Setter Property="HasDropShadow"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border"
                                Background="#333"
                                BorderThickness="1"
                                CornerRadius="4">
                            <!--Background="{StaticResource MenuPopupBrush}"-->
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource color-theme-midground}" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow"
                                     Value="true">
                                <!--<Setter TargetName="Border"
                                        Property="Padding"
                                        Value="0,3,0,3" />
                                <Setter TargetName="Border"
                                        Property="CornerRadius"
                                        Value="4" />-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion Styles -->
        <!--#region ContextMenu -->
        <!--<ContextMenu x:Key="TreeViewItemContextMenu"
                     HorizontalOffset="4"
                     Loaded="TreeViewItemContextMenu_Loaded">
            <MenuItem Header="cMenuAddGroup"
                      IsEnabled="{Binding CanCreateNewGroup}"
                      Command="{Binding CreateGroupCommand}"
                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}},
                                                 Path=PlacementTarget.TemplatedParent.Header}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                                PropertyName="Visibility"
                                                Value="Collapsed" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
            <MenuItem Header="cMenuEditGroup"
                      IsEnabled="{Binding CanEditSelectedGroup}"
                      Command="{Binding UpdateGroupCommand}"
                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}},
                                                 Path=PlacementTarget.TemplatedParent.Header}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                                PropertyName="Visibility"
                                                Value="Collapsed" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
            <MenuItem x:Name="CtMenuDeleteSelectedGroup"
                      Header="cMenuDeleteGroup"
                      IsEnabled="{Binding CanDeleteSelectedGroup}"
                      Command="{Binding DeleteGroupCommand}"
                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}},
                                                 Path=PlacementTarget.TemplatedParent.Header}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                                PropertyName="Visibility"
                                                Value="Collapsed" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
        </ContextMenu>-->
        <ContextMenu x:Key="TreeViewItemContextMenu"
                     HorizontalOffset="4"
                     Loaded="TreeViewItemContextMenu_Loaded">
            <MenuItem Header="CtMenuItemAddGroup"
                      Click="CtMenuItemAddGroup_Click">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <!--<i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                                PropertyName="Height"
                                                Value="0" />
                        <i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                                PropertyName="Width"
                                                Value="0" />-->
                        <i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                                PropertyName="Visibility"
                                                Value="Collapsed" />
                        <!-- Might need to add click event handler in code-behind for all ContextMenu events to handle visuals -->
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
            <!-- CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}" />-->
            <MenuItem Header="CtMenuItemEditGroup"
                      Click="CtMenuItemEditGroup_Click">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <!--<i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                                PropertyName="Height"
                                                Value="0" />
                        <i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                                PropertyName="Width"
                                                Value="0" />-->
                        <i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                                PropertyName="Visibility"
                                                Value="Collapsed" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
            <!-- CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}" />-->
            <MenuItem Header="CtMenuItemDeleteGroup"
                      Click="CtMenuItemDeleteGroup_Click">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <!--<i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                                PropertyName="Height"
                                                Value="0" />
                        <i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                                PropertyName="Width"
                                                Value="0" />-->
                        <i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                                PropertyName="Visibility"
                                                Value="Collapsed" />
                        <!--<i:CallMethodAction MethodName="CtMenuDeleteSelectedGroup_Click" />-->
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
            <!-- CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}" />-->
        </ContextMenu>
        <!--#endregion ContextMenu -->
        <!--#endregion ContextMenu Styles-->
        
        <!--//  TreeView Styles  //-->
        <!--#region TreeView Styles-->
        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                             EndPoint="0.5,1"
                             StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                          Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                          Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                          Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                             StartPoint="0,0"
                             EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                                  Offset="0" />
                    <GradientStop Color="#600000FF"
                                  Offset="0.4" />
                    <GradientStop Color="#600000FF"
                                  Offset="0.6" />
                    <GradientStop Color="#000000FF"
                                  Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        
        <Style x:Key="{x:Type TreeView}"
               TargetType="TreeView">

            <!--<EventSetter Event="PreviewMouseDoubleClick"
                         Handler="TreeView_PreviewMouseDoubleClick" />-->

            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeView">
                        <Border Name="Border"
                                Background="#464646"
                                CornerRadius="1"
                                Padding="0">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <!--<Border.Background>
                                <SolidColorBrush Color="Transparent" />-->
                            <!-- Color="{DynamicResource ControlLightColor}" />-->
                            <!--
                            </Border.Background>-->
                            <ScrollViewer Focusable="False"
                                          CanContentScroll="False"
                                          Padding="4">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1*" />
                                                <!--<ColumnDefinition Width="18" />-->
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="1*" />
                                                <!--<RowDefinition Height="18" />-->
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                    Grid.Column="0"
                                                                    Grid.Row="0"
                                                                    Margin="2"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}" />
                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                                       Grid.Column="1"
                                                       Grid.Row="0"
                                                       Orientation="Vertical"
                                                       Value="{Binding VerticalOffset,
                                                                       Mode=OneWay,
                                                                       RelativeSource={RelativeSource TemplatedParent}}"
                                                       Maximum="{TemplateBinding ScrollableHeight}"
                                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Grid.Column="0"
                                                       Grid.Row="1"
                                                       Orientation="Horizontal"
                                                       Value="{Binding HorizontalOffset,
                                                                       Mode=OneWay,
                                                                       RelativeSource={RelativeSource TemplatedParent}}"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                            <!--<ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                    Grid.Column="0"
                                                                    Grid.ColumnSpan="2"
                                                                    Grid.Row="0"
                                                                    Grid.RowSpan="2"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}" />-->
                                            <!--<ScrollBar x:Name="PART_VerticalScrollBar"
                                                       Grid.Column="1"
                                                       Grid.ColumnSpan="2"
                                                       Grid.Row="0"
                                                       Grid.RowSpan="2"
                                                       Orientation="Vertical"
                                                       Value="{TemplateBinding VerticalOffset}"
                                                       Maximum="{TemplateBinding ScrollableHeight}"
                                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>-->
                                            <!--<ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Grid.Column="0"
                                                       Grid.ColumnSpan="2"
                                                       Grid.Row="1"
                                                       Grid.RowSpan="2"
                                                       Orientation="Horizontal"
                                                       Value="{TemplateBinding HorizontalOffset}"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>-->
                                            <Border Grid.Row="1"
                                                    Grid.Column="1"
                                                    Background="#333" />
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>

                                <ItemsPresenter x:Name="iPresenter"
                                                Grid.Column="0"
                                                Grid.Row="0"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="TreeViewItemMenuButtonStyle"
               TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="Foreground"
                    Value="{StaticResource solidColorBrush-theme-foreground}" />
            <Setter Property="Width"
                    Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},
                                    Path=Width}" />
            <Setter Property="Height"
                    Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},
                                    Path=Height}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse x:Name="bounds"
                                     Width="{TemplateBinding Width}"
                                     Height="{TemplateBinding Height}"
                                     Fill="Transparent"
                                     StrokeThickness="0"
                                     Stroke="Transparent" />
                            <Border Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    BorderThickness="0"
                                    BorderBrush="Transparent"
                                    Background="Transparent">
                                <!--<Viewbox Width="{Binding ElementName=PART_Header,
                                                         Path=ActualHeight}"
                                         Height="{Binding ElementName=PART_Header,
                                                          Path=ActualHeight}">-->
                                <Viewbox Width="{TemplateBinding Width}"
                                         Height="{TemplateBinding Height}" Stretch="UniformToFill">
                                    <Canvas Width="16"
                                            Height="16">
                                        <Ellipse Canvas.Left="1"
                                                 Canvas.Top="6"
                                                 Width="4"
                                                 Height="4"
                                                 Fill="{TemplateBinding Foreground}" />
                                        <Ellipse Canvas.Left="6"
                                                 Canvas.Top="6"
                                                 Width="4"
                                                 Height="4"
                                                 Fill="{TemplateBinding Foreground}" />
                                        <Ellipse Canvas.Left="11"
                                                 Canvas.Top="6"
                                                 Width="4"
                                                 Height="4"
                                                 Fill="{TemplateBinding Foreground}" />
                                    </Canvas>
                                </Viewbox>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="Fill"
                                        Value="#ff00bfff" />
                                <Setter Property="Foreground"
                                        Value="#FF121212" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="Fill"
                                        Value="#ff1e90ff" />
                                <Setter Property="Foreground"
                                        Value="#FF121212" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemMenuToggleButtonStyle"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="Foreground"
                    Value="{StaticResource solidColorBrush-theme-foreground}" />
            <Setter Property="Width"
                    Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},
                                    Path=Width}" />
            <Setter Property="Height"
                    Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},
                                    Path=Height}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Ellipse x:Name="bounds"
                                     Width="{TemplateBinding Width}"
                                     Height="{TemplateBinding Height}"
                                     Fill="Transparent"
                                     StrokeThickness="0"
                                     Stroke="Transparent" />
                            <Border Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    BorderThickness="0"
                                    BorderBrush="Transparent"
                                    Background="Transparent">
                                <Viewbox Width="{TemplateBinding Width}"
                                         Height="{TemplateBinding Height}" Stretch="UniformToFill">
                                    <Canvas Width="16"
                                            Height="16">
                                        <Ellipse Canvas.Left="1"
                                                 Canvas.Top="6"
                                                 Width="4"
                                                 Height="4"
                                                 Fill="{TemplateBinding Foreground}" />
                                        <Ellipse Canvas.Left="6"
                                                 Canvas.Top="6"
                                                 Width="4"
                                                 Height="4"
                                                 Fill="{TemplateBinding Foreground}" />
                                        <Ellipse Canvas.Left="11"
                                                 Canvas.Top="6"
                                                 Width="4"
                                                 Height="4"
                                                 Fill="{TemplateBinding Foreground}" />
                                    </Canvas>
                                </Viewbox>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="Fill"
                                        Value="#ff00bfff" />
                                <Setter Property="Foreground"
                                        Value="#FF121212" />
                            </Trigger>
                            <Trigger Property="IsChecked"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="Fill"
                                        Value="#ff1e90ff" />
                                <Setter Property="Foreground"
                                        Value="#FF121212" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExpandCollapseToggleStyle"
               TargetType="ToggleButton">
            <Setter Property="Focusable"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15"
                              Height="13"
                              Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="Collapsed">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="Expanded">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="Collapsed"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Margin="1,1,1,1"
                                  Data="M 4 0 L 8 4 L 4 8 Z">
                                <Path.Fill>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                </Path.Fill>
                            </Path>
                            <Path x:Name="Expanded"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Margin="1,1,1,1"
                                  Data="M 0 4 L 8 4 L 4 8 Z"
                                  Visibility="Hidden">
                                <Path.Fill>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                </Path.Fill>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,0,0"
                                       StrokeThickness="5"
                                       Stroke="Black"
                                       StrokeDashArray="1 2"
                                       Opacity="0" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style x:Key="{x:Type TreeViewItem}"
       TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background"
          Value="Transparent" />
            <Setter Property="HorizontalContentAlignment"
          Value="{Binding Path=HorizontalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment"
          Value="{Binding Path=VerticalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding"
          Value="1,0,0,0" />
            <Setter Property="Foreground"
          Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="FocusVisualStyle"
          Value="{StaticResource TreeViewItemFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19"
                              Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)"
                                                >
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource SelectedBackgroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="SelectedInactive">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource SelectedUnfocusedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpansionStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ItemsHost">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="Expander"
                        Style="{StaticResource ExpandCollapseToggleStyle}"
                        ClickMode="Press"
                        IsChecked="{Binding IsExpanded, 
            RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Border x:Name="Bd"
                  Grid.Column="1"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header"
                              ContentSource="Header"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"
                          Grid.Row="1"
                          Grid.Column="1"
                          Grid.ColumnSpan="2"
                          Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems"
                   Value="false">
                                <Setter TargetName="Expander"
                    Property="Visibility"
                    Value="Hidden" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader"
                         Value="false" />
                                    <Condition Property="Width"
                         Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header"
                    Property="MinWidth"
                    Value="75" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader"
                         Value="false" />
                                    <Condition Property="Height"
                         Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header"
                    Property="MinHeight"
                    Value="19" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <Style x:Key="TreeViewItemToggleButtonStyle"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled" />
                                    <VisualState x:Name="MouseOver" >
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="tButtonGlyph"
                                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="tButtonGlyph"
                                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <!--<Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="tButtonGlyph"
                                                                           Storyboard.TargetProperty="(Path.Data)">
                                                <DiscreteObjectKeyFrame x:Name="checkedVisualStateKeyFrame"
                                                                        KeyTime="0"
                                                                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}},
                                                                                        Path=IsChecked,
                                                                                        Converter={StaticResource IsCheckedToGeometryConverter}}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>-->
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <!--<Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="tButtonGlyph"
                                                                           Storyboard.TargetProperty="(Path.Data)">
                                                <DiscreteObjectKeyFrame x:Name="uncheckedVisualStateKeyFrame"
                                                                        KeyTime="0"
                                                                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}},
                                                                                        Path=IsChecked,
                                                                                        Converter={StaticResource IsCheckedToGeometryConverter}}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>-->
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Viewbox Height="16"
                                     Width="16">
                                <Canvas Height="16"
                                        Width="16">
                                    <Path x:Name="tButtonGlyph"
                                          Fill="#999"
                                          Data="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}},
                                                         Path=IsChecked,
                                                         Converter={StaticResource CheckedToGeometryConverter}}" />
                                </Canvas>
                            </Viewbox>
                        </Border>

                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                                     Value="False">
                                <Setter TargetName="tButtonGlyph"
                                        Property="Data"
                                        Value=""
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#region Old TreeViewItem Style-->
        <!--<Style TargetType="{x:Type TreeViewItem}">

            <Style.Resources>
                <HierarchicalDataTemplate DataType="{x:Type m:Group}"
                                          ItemsSource="{Binding ChildrenGroups,
                                                                Mode=OneWay}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Title}"
                                   Margin="4 0" />
                    </StackPanel>
                </HierarchicalDataTemplate>
            </Style.Resources>

            <Setter Property="Margin"
                    Value="0" />
            <Setter Property="IsExpanded"
                    Value="{Binding IsExpanded,
                                    Mode=TwoWay,
                                    UpdateSourceTrigger=PropertyChanged}" />
            <Setter Property="IsSelected"
                    Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <ToggleButton x:Name="expander"
                                          Grid.Column="0"
                                          Grid.Row="0"
                                          Width="16"
                                          Height="16"
                                          IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}},
                                                              Path=IsExpanded}"
                                          Style="{StaticResource TreeViewItemToggleButtonStyle}"
                                          DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}},
                                                                Path=DataContext}"
                                          Command="{Binding UpdateGroupExpandedState}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                     Path=IsChecked}"/>
                            <Border x:Name="cPresenterBorder"
                                    Grid.Column="1"
                                    Grid.Row="0"
                                    Margin="0 1"
                                    Padding="0 2"
                                    Background="Transparent">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter x:Name="PART_Header"
                                                      Grid.Column="0"
                                                      TextBlock.FontWeight="Normal"
                                                      TextBlock.Foreground="{StaticResource solidColorBrush-theme-foreground}"
                                                      Content="{TemplateBinding Header}" />
                                    <Button x:Name="buttonTreeViewDisplayContextMenu"
                                            Grid.Column="1"
                                            Height="16"
                                            Width="16"
                                            Background="Transparent"
                                            BorderBrush="Transparent"
                                            BorderThickness="0"
                                            Style="{StaticResource TreeViewItemMenuButtonStyle}"
                                            Click="buttonTreeViewDisplayContextMenu_Click"/>
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="itemsHost"
                                            Grid.Column="1"
                                            Grid.ColumnSpan="2"
                                            Grid.Row="1"
                                            Visibility="Collapsed"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="PART_Header"
                                        Property="TextBlock.Foreground"
                                        Value="{StaticResource solidColorBrush-theme-orange}" />
                                <Setter TargetName="PART_Header"
                                        Property="TextBlock.FontWeight"
                                        Value="Bold" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="PART_Header"
                                        Property="TextBlock.Foreground"
                                        Value="DeepSkyBlue"/>
                            </Trigger>
                            <Trigger SourceName="expander"
                                     Property="IsChecked"
                                     Value="True">
                                <Setter TargetName="itemsHost"
                                        Property="Visibility"
                                        Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <EventSetter Event="RequestBringIntoView"
                         Handler="TreeViewItem_RequestBringIntoView"/>
        </Style>-->
        <!--#endregion Old TreeViewItem Style-->
        <Style TargetType="{x:Type TreeViewItem}">

            <Style.Resources>
                <HierarchicalDataTemplate DataType="{x:Type m:Group}"
                                          ItemsSource="{Binding ChildrenGroups,
                                                                Mode=OneWay}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Title}"
                                   Margin="4 0" />
                    </StackPanel>
                </HierarchicalDataTemplate>
            </Style.Resources>

            <Setter Property="Margin"
                    Value="0" />
            <Setter Property="IsExpanded"
                    Value="{Binding IsExpanded,
                                    Mode=TwoWay,
                                    UpdateSourceTrigger=PropertyChanged}" />
            <Setter Property="IsSelected"
                    Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <ToggleButton x:Name="expander"
                                          Grid.Column="0"
                                          Grid.Row="0"
                                          Width="16"
                                          Height="16"
                                          IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}},
                                                              Path=IsExpanded}"
                                          Style="{StaticResource TreeViewItemToggleButtonStyle}"
                                          DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}},
                                                                Path=DataContext}"
                                          Command="{Binding UpdateGroupExpandedState}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                     Path=IsChecked}"/>

                            <Border x:Name="cPresenterBorder"
                                    Grid.Column="1"
                                    Grid.Row="0"
                                    Margin="0"
                                    Padding="0 2"
                                    Background="Transparent">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="1*" />
                                    </Grid.ColumnDefinitions>


                                    <ContentPresenter x:Name="PART_Header"
                                                      Grid.Column="0"
                                                      TextBlock.FontWeight="Normal"
                                                      TextBlock.Foreground="{StaticResource solidColorBrush-theme-foreground}"
                                                      Content="{TemplateBinding Header}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseRightButtonUp">
                                                <i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
                                                                        PropertyName="IsSelected"
                                                                        Value="True"/>
                                                <i:ChangePropertyAction TargetObject="{StaticResource TreeViewItemContextMenu}"
                                                                        PropertyName="Visibility"
                                                                        Value="Visible" />
                                                <i:ChangePropertyAction TargetObject="{StaticResource TreeViewItemContextMenu}"
                                                                        PropertyName="PlacementTarget"
                                                                        Value="{Binding ElementName=PART_Header}" />
                                                <i:ChangePropertyAction TargetObject="{StaticResource TreeViewItemContextMenu}"
                                                                        PropertyName="Placement"
                                                                        Value="Right" />
                                                <!--<i:ChangePropertyAction TargetObject="{StaticResource TreeViewItemContextMenu}"
                                                                        PropertyName="HorizontalOffset"
                                                                        Value="4" />-->
                                                <i:ChangePropertyAction TargetObject="{StaticResource TreeViewItemContextMenu}"
                                                                        PropertyName="IsOpen"
                                                                        Value="True" />
                                                <i:ChangePropertyAction TargetObject="{StaticResource TreeViewItemContextMenu}"
                                                                        PropertyName="FontWeight"
                                                                        Value="Normal" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ContentPresenter>
                                    <Button x:Name="buttonTreeViewDisplayContextMenu"
                                            Grid.Column="1"
                                            Height="16"
                                            Width="16"
                                            Background="Transparent"
                                            BorderBrush="Transparent"
                                            BorderThickness="0"
                                            Style="{StaticResource TreeViewItemMenuButtonStyle}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
                                                                        PropertyName="IsSelected"
                                                                        Value="True" />
                                                <i:ChangePropertyAction TargetObject="{StaticResource TreeViewItemContextMenu}"
                                                                        PropertyName="Visibility"
                                                                        Value="Visible" />
                                                <i:ChangePropertyAction TargetObject="{StaticResource TreeViewItemContextMenu}"
                                                                        PropertyName="PlacementTarget"
                                                                        Value="{Binding RelativeSource={RelativeSource AncestorType=Button}}" />
                                                <i:ChangePropertyAction TargetObject="{StaticResource TreeViewItemContextMenu}"
                                                                        PropertyName="Placement"
                                                                        Value="Right" />
                                                <!--<i:ChangePropertyAction TargetObject="{StaticResource TreeViewItemContextMenu}"
                                                                        PropertyName="HorizontalOffset"
                                                                        Value="4" />-->
                                                <i:ChangePropertyAction TargetObject="{StaticResource TreeViewItemContextMenu}"
                                                                        PropertyName="IsOpen"
                                                                        Value="True" />
                                                <i:ChangePropertyAction TargetObject="{StaticResource TreeViewItemContextMenu}"
                                                                        PropertyName="FontWeight"
                                                                        Value="Normal" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <!--Click="buttonTreeViewDisplayContextMenu_Click"/>-->
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="itemsHost"
                                            Grid.Column="1"
                                            Grid.ColumnSpan="2"
                                            Grid.Row="1"
                                            Visibility="Collapsed"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="PART_Header"
                                        Property="TextBlock.Foreground"
                                        Value="{StaticResource solidColorBrush-theme-orange}" />
                                <Setter TargetName="PART_Header"
                                        Property="TextBlock.FontWeight"
                                        Value="Bold" />
                            </Trigger>
                            <!--<Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="PART_Header"
                                        Property="TextBlock.Foreground"
                                        Value="DeepSkyBlue"/>
                            </Trigger>-->
                            <Trigger SourceName="expander"
                                     Property="IsChecked"
                                     Value="True">
                                <Setter TargetName="itemsHost"
                                        Property="Visibility"
                                        Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <EventSetter Event="RequestBringIntoView"
                         Handler="TreeViewItem_RequestBringIntoView"/>
        </Style>
        
        <!--#endregion TreeView Styles-->
        
        <!--//  DataGrid Styles  //-->
        <!--#region DataGrid Styles-->
        <!--Style and template for the button in the upper left corner of the DataGrid.-->
        <Style TargetType="{x:Type Button}"
       x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, 
  TypeInTargetAssembly={x:Type DataGrid}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Fill).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Fill).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="Arrow">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="Border"
                     SnapsToDevicePixels="True">
                                <Rectangle.Stroke>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                   StartPoint="0.5,0">
                                        <GradientStop Color="{DynamicResource BorderLightColor}"
                              Offset="0" />
                                        <GradientStop Color="{DynamicResource BorderMediumColor}"
                              Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                   StartPoint="0.5,0">
                                        <GradientStop Color="{DynamicResource ControlLightColor}"
                              Offset="0" />
                                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                              Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Polygon x:Name="Arrow"
                   HorizontalAlignment="Right"
                   Margin="8,8,3,3"
                   Opacity="0.15"
                   Points="0,10 10,10 10,0"
                   Stretch="Uniform"
                   VerticalAlignment="Bottom">
                                <Polygon.Fill>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                </Polygon.Fill>
                            </Polygon>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Style and template for the DataGrid.-->
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1"
                           StartPoint="0.5,0">
                        <GradientStop Color="{DynamicResource BorderLightColor}"
                                      Offset="0" />
                        <GradientStop Color="{DynamicResource BorderDarkColor}"
                                      Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="RowDetailsVisibilityMode"
                    Value="VisibleWhenSelected" />
            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="true" />
            <Setter Property="ScrollViewer.PanningMode"
                    Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Grid x:Name="bounds">
                            <!--<Border x:Name="borderOpacityMask"
                                    SnapsToDevicePixels="True"
                                    Background="#444"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    CornerRadius="2" >-->
                                <!--<Border.Background>
                                    <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                </Border.Background>-->
                            <!--</Border>-->
                            <Border x:Name="border"
                                    SnapsToDevicePixels="True"
                                    Background="#444"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <!--<Border.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=borderOpacityMask}"/>
                                </Border.OpacityMask>-->
                                <!--<Border.Background>
                                    <SolidColorBrush Color="#444" />
                                </Border.Background>-->
                                <!--<VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{DynamicResource ControlLightColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Normal" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>-->
                                <ScrollViewer x:Name="DG_ScrollViewer"
                                              Focusable="false"
                                              Background="Black">

                                    <ScrollViewer.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="0" /><!-- Width="Auto" />-->
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" /><!-- Width="Auto" />-->
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <!--<RowDefinition Height="14" />-->
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" /><!-- Height="Auto" />-->
                                                </Grid.RowDefinitions>

                                                <!--<Button Focusable="false"
                                                        Command="{x:Static DataGrid.SelectAllCommand}"
                                                        Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, 
                                                                                                      TypeInTargetAssembly={x:Type DataGrid}}}"
                                                        Visibility="{Binding HeadersVisibility, 
                                                                             ConverterParameter={x:Static DataGridHeadersVisibility.All}, 
                                                                             Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                                                                 RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                        Width="{Binding CellsPanelHorizontalOffset, 
                                                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />-->

                                                <Border Grid.Column="0"
                                                        Grid.ColumnSpan="3"
                                                        Background="#333"
                                                        BorderBrush="Transparent"
                                                        BorderThickness="0 0 0 0"/>
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                                Grid.Column="1"
                                                                                Grid.Row="0"
                                                                                Visibility="{Binding HeadersVisibility, 
                                                                                                     ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                                                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                                                                                         RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                                <Border Grid.Column="1"
                                                        Grid.Row="1"
                                                        Background="#222"
                                                        BorderBrush="#666"
                                                        BorderThickness="0">
                                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                            Grid.ColumnSpan="2"
                                                                            Grid.Row="2"
                                                                            CanContentScroll="{TemplateBinding CanContentScroll}" />
                                                </Border>

                                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                                           Grid.Column="2"
                                                           Grid.Row="1"
                                                           Orientation="Vertical"
                                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                                           Maximum="{TemplateBinding ScrollableHeight}"
                                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                           Value="{Binding VerticalOffset,
                                                                           Mode=OneWay, 
                                                                           RelativeSource={RelativeSource TemplatedParent}}"/>

                                                <Grid Grid.Column="1"
                                                      Grid.Row="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                                                                                          RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>

                                                    <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                               Grid.Column="1"
                                                               Orientation="Horizontal"
                                                               ViewportSize="{TemplateBinding ViewportWidth}"
                                                               Maximum="{TemplateBinding ScrollableWidth}"
                                                               Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                               Value="{Binding HorizontalOffset,
                                                                               Mode=OneWay, 
                                                                               RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </Grid>
                                                
                                                <Border x:Name="fillerBlock"
                                                        Grid.Column="2"
                                                        Grid.Row="2"
                                                        Background="#333" />
                                            </Grid>

                                            <!--<ControlTemplate.Triggers>
                                                <Trigger SourceName="PART_VerticalScrollBar"
                                                         Property="IsMouseOver"
                                                         Value="True">
                                                    <Setter TargetName="fillerBlock"
                                                            Property="Width">
                                                        <Setter.Value>
                                                            <Storyboard>
                                                                
                                                            </Storyboard>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter TargetName="fillerBlock"
                                                            Property="Height"
                                                            Value="18" />
                                                </Trigger>
                                                <Trigger SourceName="PART_HorizontalScrollBar"
                                                         Property="IsMouseOver"
                                                         Value="True">
                                                    <Setter TargetName="fillerBlock"
                                                            Property="Width"
                                                            Value="18" />
                                                    <Setter TargetName="fillerBlock"
                                                            Property="Height"
                                                            Value="{Binding ElementName=PART_HorizontalScrollBar,
                                                                            Path=ActualHeight}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>-->
                                        </ControlTemplate>
                                    </ScrollViewer.Template>
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </Grid>

                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="HasItems"
                                     Value="False">
                                <Setter TargetName="DG_ScrollViewer"
                                        Property="Visibility"
                                        Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsGrouping"
                         Value="true">
                    <Setter Property="ScrollViewer.CanContentScroll"
                            Value="false" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Style and template for the DataGridCell.-->
        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Foreground"
                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridCellsPresenter}},
                                    Path=(TextBlock.Foreground)}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border x:Name="border"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                Background="Transparent"
                                SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CurrentStates">
                                    <VisualState x:Name="Regular" />
                                    <VisualState x:Name="Current">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource DatagridCurrentCellBorderColor}" />
                                            </ColorAnimationUsingKeyFrames
                                                >
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12" />
                                    <ColumnDefinition Width="*" />
                                    <!--<ColumnDefinition Width="10" />-->
                                </Grid.ColumnDefinitions>
                                
                                <ContentPresenter Grid.Column="1"
                                                  VerticalAlignment="Center"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Style and template for the DataGridRow.-->
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Foreground"
                    Value="{StaticResource solidColorBrush-theme-foreground}" />
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                </Setter.Value>
            </Setter>
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="Validation.ErrorTemplate"
                    Value="{x:Null}" />
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock Foreground="Red"
                                   Margin="2,0,0,0"
                                   Text="!"
                                   VerticalAlignment="Center" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                SnapsToDevicePixels="True">
                            <Border.Background>
                                <!--<LinearGradientBrush EndPoint="0.5,1"
                                                     StartPoint="0.5,0">
                                    <GradientStop Color="MediumPurple"
                                                  Offset="0" />
                                    <GradientStop Color="{DynamicResource ControlLightColor}"
                                                  Offset="1" />
                                </LinearGradientBrush>-->
                                <SolidColorBrush Color="Transparent" />
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />

                                    <!--Provide a different appearance for every other row.-->
                                    <VisualState x:Name="Normal_AlternatingRow">
                                        <!--<Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ContentAreaColorLight}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">

                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ContentAreaColorDark}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>-->
                                    </VisualState>

                                    <!--In this example, a row in Editing or selected mode has an
                                        identical appearances. In other words, the states 
                                        Normal_Selected, Unfocused_Selected, Normal_Editing, 
                                        MouseOver_Editing, MouseOver_Unfocused_Editing,
                                        and Unfocused_Editing are identical.-->
                                    <VisualState x:Name="Normal_Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#26ff6347" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#ffff6347" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused_Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#26ff6347" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#ffff6347" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal_Editing">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="Red" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-orange}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver_Editing">
                                        <!--<Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlMediumColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>-->
                                    </VisualState>
                                    <VisualState x:Name="MouseOver_Unfocused_Editing">
                                        <!--<Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlMediumColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>-->
                                    </VisualState>
                                    <VisualState x:Name="Unfocused_Editing">
                                        <!--<Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlMediumColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>-->
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlMediumColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>-->
                                            
                                            <!-- DeepSkyBlue on DeepSkyBlue -->
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#2600bfff" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>

                                            <!-- DeepSkyBlue on LightBlue -->
                                            <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#33add8e6" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>-->

                                            <!-- DeepSkyBlue on DodgerBlue -->
                                            <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#331e90ff" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>-->
                                            
                                            <!-- DeepSkyBlue on Orange - Probably not... -->
                                            <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#33634733" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>-->

                                            <!-- DeepSkyBlue on Gainsboro -->
                                            <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#33dcdcdc" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>-->
                                        </Storyboard>
                                    </VisualState>
                                    
                                    <!--In this example, the appearance of a selected row 
                                        that has the mouse over it is the same regardless of
                                        whether the row is selected.  In other words, the states 
                                        MouseOver_Editing and MouseOver_Unfocused_Editing are identical.-->
                                    <VisualState x:Name="MouseOver_Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#26ff6347" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver_Unfocused_Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#26ff6347" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#ffff6347" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter x:Name="dgRowCellsPresenter"
                                                        Grid.Column="1"
                                                        ItemsPanel="{TemplateBinding ItemsPanel}"
                                                        TextBlock.Foreground="{Binding ElementName=DGR_Border,
                                                                                       Path=(TextBlock.Foreground)}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <DataGridDetailsPresenter Grid.Column="1"
                                                          Grid.Row="1"
                                                          Visibility="{TemplateBinding DetailsVisibility}"
                                                          SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, 
                                                                                                                         ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                                                                                                         Converter={x:Static DataGrid.RowDetailsScrollingConverter}, 
                                                                                                                         RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                <DataGridRowHeader Grid.RowSpan="2"
                                                   SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                   Visibility="{Binding HeadersVisibility, 
                                                                        ConverterParameter={x:Static DataGridHeadersVisibility.Row}, 
                                                                        Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                            </SelectiveScrollingGrid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsSelected"
                                     Value="True">
                                <Setter Target="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},Path=Name}"
                                        Property="TextBlock.Foreground"
                                        Value="DarkRed" />
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Style and template for the resize control on the DataGridRowHeader.-->
        <Style x:Key="RowHeaderGripperStyle"
               TargetType="{x:Type Thumb}">
            <Setter Property="Height"
                    Value="8" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Cursor"
                    Value="SizeNS" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Style and template for the DataGridRowHeader.-->
        <Style TargetType="{x:Type DataGridRowHeader}">
            <Setter Property="Visibility"
                    Value="Collapsed" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <!--This example does not specify an appearance for every
                                    state.  You can add storyboard to the states that are listed
                                    to change the appearance of the DataGridRowHeader when it is
                                    in a specific state.-->
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Normal_CurrentRow" />
                                    <VisualState x:Name="Unfocused_EditingRow" />
                                    <VisualState x:Name="Normal_EditingRow" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="rowHeaderBorder"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver_CurrentRow" />
                                    <VisualState x:Name="MouseOver_Unfocused_EditingRow" />
                                    <VisualState x:Name="MouseOver_EditingRow" />
                                    <VisualState x:Name="MouseOver_Unfocused_Selected" />
                                    <VisualState x:Name="MouseOver_Selected" />
                                    <VisualState x:Name="MouseOver_Unfocused_CurrentRow_Selected" />
                                    <VisualState x:Name="MouseOver_CurrentRow_Selected" />
                                    <VisualState x:Name="Unfocused_Selected" />
                                    <VisualState x:Name="Unfocused_CurrentRow_Selected" />
                                    <VisualState x:Name="Normal_CurrentRow_Selected" />
                                    <VisualState x:Name="Normal_Selected" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="rowHeaderBorder"
                                    Width="10"
                                    BorderThickness="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                                         StartPoint="0.5,0">
                                        <GradientStop Color="{DynamicResource BorderLightColor}"
                                                      Offset="0" />
                                        <GradientStop Color="{DynamicResource BorderDarkColor}"
                                                      Offset="1" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                                         StartPoint="0.5,0">
                                        <GradientStop Color="{DynamicResource ControlLightColor}"
                                                      Offset="0" />
                                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                                                      Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter VerticalAlignment="Center"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <Control SnapsToDevicePixels="false"
                                             Template="{Binding ValidationErrorTemplate,
                                                                RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                             Visibility="{Binding (Validation.HasError), 
                                                                  Converter={StaticResource bool2VisibilityConverter}, 
                                                                  RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
                                </StackPanel>
                            </Border>

                            <Thumb x:Name="PART_TopHeaderGripper"
                                   Style="{StaticResource RowHeaderGripperStyle}"
                                   VerticalAlignment="Top" />
                            <Thumb x:Name="PART_BottomHeaderGripper"
                                   Style="{StaticResource RowHeaderGripperStyle}"
                                   VerticalAlignment="Bottom" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Style and template for the resize control on the DataGridColumnHeader.-->
        <Style x:Key="ColumnHeaderGripperStyle"
               TargetType="{x:Type Thumb}">
            <Setter Property="Width"
                    Value="12" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Cursor"
                    Value="SizeWE" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <Viewbox>
                                <Canvas Width="12"
                                        Height="12">
                                    <Rectangle Canvas.Left="4"
                                               Canvas.Top="0"
                                               Height="12"
                                               Width="1"
                                               Fill="#666" />
                                    <Rectangle Canvas.Left="7"
                                               Canvas.Top="0"
                                               Height="12"
                                               Width="1"
                                               Fill="#666" />
                                </Canvas>
                            </Viewbox>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Style and template for the DataGridColumnHeader.-->
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Border x:Name="columnHeaderBorder"
                                    Background="#333"
                                    BorderBrush="#666"
                                    BorderThickness="0 0 0 0"
                                    Margin="0">
                            <Grid Margin="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12" />
                                    <ColumnDefinition Width="1*" />
                                    <!--<ColumnDefinition Width="10" />-->
                                </Grid.ColumnDefinitions>

                                <Thumb x:Name="PART_LeftHeaderGripper"
                                       Grid.Column="0"
                                       HorizontalAlignment="Left"
                                       Style="{StaticResource ColumnHeaderGripperStyle}" />
                                <ContentPresenter Grid.Column="1"
                                                  Margin="3"
                                                  TextBlock.Foreground="{StaticResource solidColorBrush-theme-foreground}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <!--<Thumb x:Name="PART_RightHeaderGripper"
                                       Grid.Column="2"
                                       HorizontalAlignment="Right"
                                       Style="{StaticResource ColumnHeaderGripperStyle}" />-->
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1"
                                         StartPoint="0.5,0">
                        <GradientStop Color="{DynamicResource ControlLightColor}"
                                      Offset="0" />
                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                                      Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Style and template for the DataGridColumnHeadersPresenter.-->
        <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                        <Grid>
                            <DataGridColumnHeader x:Name="PART_FillerColumnHeader"
                                                  IsHitTestVisible="False" />
                            <ItemsPresenter />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion DataGrid Styles-->

        <!--//  TabControl Styles  //-->
        <Style TargetType="{x:Type TabControl}">
            <!--<Setter Property="OverridesDefaultStyle"
          Value="True" />
            <Setter Property="SnapsToDevicePixels"
          Value="True" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#FFAAAAAA" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <TabPanel x:Name="HeaderPanel"
                                      Grid.Row="0"
                                      Panel.ZIndex="0"
                                      Margin="0"
                                      IsItemsHost="True"
                                      KeyboardNavigation.TabIndex="1"
                                      Background="Transparent" />
                            <Border x:Name="bounds"
                                    Grid.Row="1"
                                    Panel.ZIndex="1"
                                    Background="#666"
                                    BorderBrush="#666"
                                    BorderThickness="1"
                                    CornerRadius="0 2 2 2"
                                    Padding="2"
                                    KeyboardNavigation.TabNavigation="Local"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2">
                                <ContentPresenter x:Name="PART_SelectedContentHost" 
                                                  ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Panel.ZIndex" Value="0" />
            <!--<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}},
                                                          Path=Foreground}" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="root">
                            <!--<VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#666" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#666" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#4d4d4d" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>-->
                            <Border x:Name="bounds"
                                    Margin="0 0 -4 0 "
                                    Background="#333"
                                    BorderBrush="#333"
                                    BorderThickness="0"
                                    CornerRadius="2 16 0 0">
                                <ContentPresenter x:Name="contentSite"
                                                  TextBlock.Foreground="#666"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header"
                                                  Margin="12 2 12 2"
                                                  RecognizesAccessKey="True" />
                            </Border>
                        </Grid>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="Background"
                                        Value="#666" />
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="#666" />
                                <Setter TargetName="contentSite"
                                        Property="TextBlock.Foreground"
                                        Value="{StaticResource solidColorBrush-theme-foreground}" />
                                <Setter Property="Panel.ZIndex"
                                        Value="100" />
                            </Trigger>
                            <!--<Trigger SourceName="bounds"
                                     Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Panel.ZIndex"
                                        Value="2" />
                            </Trigger>-->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver"
                                               Value="True" />
                                    <Condition Property="IsSelected"
                                               Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="contentSite"
                                            Property="TextBlock.Foreground"
                                            Value="#808080" />
                                    <!--Value="{StaticResource solidColorBrush-theme-blue}" />-->
                                    <!--<Setter TargetName="contentSite"
                                            Property="Margin"
                                            Value="11 1 11 2" />-->
                                    <!--<Setter TargetName="bounds"
                                            Property="BorderThickness"
                                            Value="1 1 1 0" />-->
                                    <Setter TargetName="bounds"
                                            Property="Background"
                                            Value="#4d4d4d" />
                                    <!--<Setter TargetName="bounds"
                                            Property="BorderBrush"
                                            Value="{StaticResource solidColorBrush-theme-blue}" />-->
                                    <Setter Property="Panel.ZIndex"
                                            Value="1" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--//  Selected Record Panel Styles  //-->
        <Style x:Key="ButtonExpandSelectedRecordPanelStyle"
               TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bounds"
                                Grid.Row="2"
                                MinHeight="24"
                                TextBlock.Foreground="{StaticResource solidColorBrush-theme-foreground}"
                                BorderBrush="#363636"
                                Background="#363636"
                                BorderThickness="0"
                                CornerRadius="2"
                                Padding="2">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                
                                <Path Grid.Column="0"
                                      Fill="{Binding ElementName=bounds,
                                                     Path=(TextBlock.Foreground)}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Data="M 0,8 8,0 16,8 Z" />
                                <Path Grid.Column="1"
                                      Fill="{Binding ElementName=bounds,
                                                     Path=(TextBlock.Foreground)}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Data="M 0,8 8,0 16,8 Z" />
                                <Path Grid.Column="2"
                                      Fill="{Binding ElementName=bounds,
                                                     Path=(TextBlock.Foreground)}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Data="M 0,8 8,0 16,8 Z" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonCollapseSelectedRecordPanelStyle"
               TargetType="{x:Type Button}">
            <Setter Property="Margin"
                    Value="16" />
            <Setter Property="Foreground"
                    Value="{StaticResource solidColorBrush-theme-foreground}" />
            <Setter Property="Background"
                    Value="#333" />
            <Setter Property="BorderBrush"
                    Value="#333" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bounds"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2">
                            <!--<VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                              Storyboard.TargetProperty="(Border.BorderThickness)">
                                                <EasingThicknessKeyFrame KeyTime="0"
                                                                         Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            -->
                            <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>-->
                            <!--
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>-->
                            
                            <!--<Path Width="6"
                                  Height="4"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="M 0 1 3 4 6 1 Z" />-->
                            <Path Width="10"
                                  Height="5"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="M 0 0 H 10 L 5 5 Z" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Foreground"
                                        Value="{StaticResource solidColorBrush-theme-blue}" />
                                <Setter Property="BorderBrush"
                                        Value="{StaticResource solidColorBrush-theme-blue}" />
                                <Setter Property="BorderThickness"
                                        Value="1" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter Property="Foreground"
                                        Value="DodgerBlue" />
                                <Setter Property="BorderBrush"
                                        Value="DodgerBlue" />
                                <Setter Property="BorderThickness"
                                        Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonCopyContentStyle"
               TargetType="Button">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Foreground"
                    Value="{StaticResource solidColorBrush-theme-foreground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Boundary"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0">
                            <Viewbox Width="16"
                                     Height="16">
                                <Canvas Width="16"
                                        Height="16">
                                    <!--<Path x:Name="CopyContentGlyph"
                                          Fill="{TemplateBinding Foreground}"
                                          Data="M17,9H7V7H17
                                                M17,13H7V11H17
                                                M14,17H7V15H14
                                                M12,3A1,1 0 0,1 13,4A1,1 0 0,1 12,5A1,1 0 0,1 11,4A1,1 0 0,1 12,3
                                                M19,3H14.82C14.4,1.84 13.3,1 12,1C10.7,1 9.6,1.84 9.18,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3Z" />-->
                                    <Path x:Name="CopyContentGlyph"
                                          Fill="{TemplateBinding Foreground}"
                                          Data="M 8,1 C 6.9013539,1 6,1.9013539 6,3 H 3.5 C 2.6776494,3 2,3.6776494 2,4.5 v 9 C 2,14.322351 2.6776494,15 3.5,15 h 9 c 0.822351,0 1.5,-0.677649 1.5,-1.5 v -9 C 14,3.6776494 13.322351,3 12.5,3 H 10 C 10,1.9013539 9.0986461,1 8,1 Z
                                                M 8,2 C 8.5522847,2 9,2.4477153 9,3 9,3.5522847 8.5522847,4 8,4 7.4477153,4 7,3.5522847 7,3 7,2.4477153 7.4477153,2 8,2 Z
                                                M 3.5,4 H 5 v 1 h 6 V 4 h 1.5 C 12.785648,4 13,4.2143517 13,4.5 v 9 c 0,0.285648 -0.214352,0.5 -0.5,0.5 h -9 C 3.2143517,14 3,13.785648 3,13.5 v -9 C 3,4.2143517 3.2143517,4 3.5,4 Z
                                                M 5,7 v 1 h 6 V 7 Z
                                                m 0,2 v 1 h 6 V 9 Z
                                                m 0,2 v 1 h 4 v -1 z" />
                                </Canvas>
                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter TargetName="CopyContentGlyph"
                                        Property="Fill"
                                        Value="{StaticResource solidColorBrush-theme-midground}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="CopyContentGlyph"
                                        Property="Fill"
                                        Value="{StaticResource solidColorBrush-theme-blue}" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="CopyContentGlyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleButtonMaskContentStyle"
               TargetType="ToggleButton">
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <!--<Setter Property="FocusVisualStyle" Value="{x:Null}" />-->
            <Setter Property="Background"
                    Value="Transparent"/>
            <Setter Property="Foreground"
                    Value="{StaticResource solidColorBrush-theme-foreground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <!--<Border x:Name="Boundary"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0">
                            <Viewbox Width="16"
                                     Height="16">-->
                        <Grid Background="{TemplateBinding Background}">
                            <Canvas Width="16"
                                    Height="16">
                                <!--<Path x:Name="MaskContentGlyph"
                                          Fill="{TemplateBinding Foreground}"
                                          Data="M 8 6 A 2.01 2.01 0 0 0 5.99 8.01 2.01 2.01 0 0 0 8 10.02 2.01 2.01 0 0 0 10.01 8.01 2.01 2.01 0 0 0 8 6
                                                m 0 5.36 A 3.35 3.35 0 0 1 4.65 8.01 3.35 3.35 0 0 1 8 4.66 3.35 3.35 0 0 1 11.35 8.01 3.35 3.35 0 0 1 8 11.36
                                                M 8 2.985 c -3.35 0 -6.2109 2.0837 -7.37 5.025 1.1591 2.9413 4.02 5.025 7.37 5.025 3.35 0 6.2109 -2.0837 7.37 -5.025 C 14.2109 5.0687 11.35 2.985 8 2.985 Z"
                                          Visibility="Visible" />-->
                                <!--<Path x:Name="UnmaskContentGlyph"
                                          Fill="{TemplateBinding Foreground}"
                                          Data="m 7.8891 5.99 2.1239 2.1172 c 0 -0.0335 0 -0.0737 0 -0.1072 A 2.01 2.01 0 0 0 8.003 5.99 c -0.0402 0 -0.0737 0 -0.1139 0
                                                M 5.0081 6.526 6.0466 7.5645 C 6.0131 7.7052 5.993 7.8459 5.993 8 a 2.01 2.01 0 0 0 2.01 2.01 c 0.1474 0 0.2948 -0.0201 0.4355 -0.0536 L 9.477 10.9949 C 9.0281 11.216 8.5323 11.35 8.003 11.35 A 3.35 3.35 0 0 1 4.653 8 c 0 -0.5293 0.134 -1.0251 0.3551 -1.474
                                                M 1.303 2.8209 2.8306 4.3485 3.1321 4.65 C 2.0266 5.521 1.1556 6.66 0.633 8 c 1.1591 2.9413 4.02 5.025 7.37 5.025 1.0385 0 2.0301 -0.201 2.9346 -0.5628 L 11.2257 12.7436 13.1821 14.7 14.033 13.8491 2.1539 1.97
                                                M 8.003 4.65 A 3.35 3.35 0 0 1 11.353 8 c 0 0.4288 -0.0871 0.8442 -0.2412 1.2194 l 1.9631 1.9631 C 14.0799 10.345 14.8839 9.2462 15.373 8 14.2139 5.0587 11.353 2.975 8.003 2.975 7.065 2.975 6.1672 3.1425 5.323 3.444 L 6.7769 4.8845 C 7.1588 4.7371 7.5675 4.65 8.003 4.65 Z"
                                          Visibility="Collapsed" />-->
                                <Path x:Name="MaskContentGlyph"
                                      Width="16"
                                      Height="16"
                                      Fill="{TemplateBinding Foreground}"
                                      Data="M 8 3 C 2.7000053 3 0.54296875 7.796875 0.54296875 7.796875 L 0.453125 8 L 0.54296875 8.203125 C 0.54296875 8.203125 2.7000053 13 8 13 C 13.299995 13 15.457031 8.203125 15.457031 8.203125 L 15.546875 8 L 15.457031 7.796875 C 15.457031 7.796875 13.299995 3 8 3 z
                                            M 8 4 C 12.472562 4 14.224482 7.6316412 14.396484 8 C 14.224482 8.3683588 12.472562 12 8 12 C 3.5274383 12 1.7755182 8.3683588 1.6035156 8 C 1.7755182 7.6316412 3.5274383 4 8 4 z
                                            M 8 5 C 6.3490697 5 5 6.3490697 5 8 C 5 9.6509303 6.3490697 11 8 11 C 9.6509303 11 11 9.6509303 11 8 C 11 6.3490697 9.6509303 5 8 5 z
                                            M 8 6 C 9.1104907 6 10 6.8895093 10 8 C 10 9.1104907 9.1104907 10 8 10 C 6.8895093 10 6 9.1104907 6 8 C 6 6.8895093 6.8895093 6 8 6 z "
                                      Visibility="Visible" />
                                <Path x:Name="UnmaskContentGlyph"
                                      Width="16"
                                      Height="16"
                                      Fill="{TemplateBinding Foreground}"
                                      Data="M 2,2 1.2929688,2.7070312 3.1933594,4.6074219 C 1.3520607,6.0013217 0.54296875,7.796875 0.54296875,7.796875 L 0.453125,8 0.54296875,8.203125 C 0.54296875,8.203125 2.7000053,13 8,13 c 1.1471057,0 2.143567,-0.227658 3.005859,-0.580078 l 2.28711,2.287109 L 14,14 l -2.042969,-2.042969 -0.71289,-0.71289 -1.125,-1.125 -0.7031254,-0.7031254 -2.8320312,-2.8320312 -0.703125,-0.703125 -1.125,-1.125 L 4.0429688,4.0429688 Z M 8,3 C 6.8527108,3 5.8529713,3.2239316 4.9902344,3.5761719 l 0.765625,0.765625 C 6.4127233,4.1303012 7.1578246,4 8,4 c 4.472562,0 6.224482,3.6316412 6.396484,4 -0.103473,0.2215975 -0.780026,1.6245798 -2.27539,2.707031 l 0.685547,0.685547 c 1.841193,-1.3941008 2.65039,-3.189453 2.65039,-3.189453 L 15.546875,8 15.457031,7.796875 C 15.457031,7.796875 13.299995,3 8,3 Z M 8,5 C 7.5386228,5 7.1023069,5.1090053 6.7109375,5.296875 L 7.484375,6.0703125 C 7.6489873,6.0269491 7.821127,6 8,6 9.1104907,6 10,6.8895093 10,8 10,8.178873 9.973051,8.3510127 9.929688,8.515625 l 0.773437,0.7734375 C 10.890995,8.8976931 11,8.4613772 11,8 11,6.3490697 9.6509303,5 8,5 Z M 3.8808594,5.2949219 5.296875,6.7109375 C 5.1090168,7.1023183 5,7.5386228 5,8 c 0,1.6509303 1.3490697,3 3,3 0.4613772,0 0.8976816,-0.109017 1.2890625,-0.296875 l 0.9550785,0.955078 C 9.5872842,11.870288 8.8425364,12 8,12 3.5274383,12 1.7755182,8.3683588 1.6035156,8 1.7069965,7.7783865 2.385113,6.3770904 3.8808594,5.2949219 Z M 6.0703125,7.484375 8.515625,9.9296875 C 8.3510716,9.9731098 8.178873,10 8,10 6.8895093,10 6,9.1104907 6,8 6,7.821127 6.0268902,7.6489284 6.0703125,7.484375 Z"
                                      Visibility="Collapsed" />
                            </Canvas>
                        </Grid>
                        <!--</Viewbox>
                        </Border>-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter TargetName="MaskContentGlyph"
                                        Property="Fill"
                                        Value="{StaticResource solidColorBrush-theme-midground}" />
                                <Setter TargetName="UnmaskContentGlyph"
                                        Property="Fill"
                                        Value="{StaticResource solidColorBrush-theme-midground}" />
                            </Trigger>
                            <Trigger Property="IsChecked"
                                     Value="True">
                                <Setter TargetName="MaskContentGlyph"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                <Setter TargetName="UnmaskContentGlyph"
                                        Property="Visibility"
                                        Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsChecked"
                                     Value="False">
                                <Setter TargetName="MaskContentGlyph"
                                        Property="Visibility"
                                        Value="Visible" />
                                <Setter TargetName="UnmaskContentGlyph"
                                        Property="Visibility"
                                        Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="MaskContentGlyph"
                                        Property="Fill"
                                        Value="{StaticResource solidColorBrush-theme-blue}" />
                                <Setter TargetName="UnmaskContentGlyph"
                                        Property="Fill"
                                        Value="{StaticResource solidColorBrush-theme-blue}" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="MaskContentGlyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />
                                <Setter TargetName="UnmaskContentGlyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
            
        <!--//  ScrollBar Styles  //-->
        <!--#region ScrollBar Styles-->
        <Style x:Key="ScrollBarLineButton"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrow"
                                                              Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                         Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrow"
                                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="border"
                                Margin="1"
                                CornerRadius="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                            <Path x:Name="arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="{Binding Content,
                                                 RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb"
               TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="border"
                                CornerRadius="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                         Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<ControlTemplate x:Key="VerticalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid x:Name="bounds"
                  Width="14"
                  Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineUpButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="4" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineUpButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="6" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineDownButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="4" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineDownButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                               Storyboard.TargetProperty="Visibility"
                                                               BeginTime="0:0:0.35">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                            Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineUpButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineUpButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineDownButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineDownButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                               Storyboard.TargetProperty="Visibility"
                                                               BeginTime="0:0:0.25">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                            Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled" />
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid" />
                        <VisualState x:Name="InvalidFocused" />
                        <VisualState x:Name="InvalidUnfocused" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                
                <Border x:Name="border"
                        Grid.Column="1"
                        Grid.RowSpan="3"
                        CornerRadius="2"
                        Background="#333"
                        Visibility="Hidden"/>
                <RepeatButton x:Name="scrollBarLineUpButton"
                              Grid.Column="1"
                              Grid.Row="0"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="0"
                              Height="4"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineUpCommand"
                              Content="M 0 4 L 8 4 L 4 0 Z"/>
                <Track x:Name="PART_Track"
                       Grid.Column="1"
                       Grid.Row="1"
                       Width="6"
                       IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Background="{StaticResource solidColorBrush-theme-foreground}"
                               BorderBrush="#333"
                               BorderThickness="0"
                               Style="{StaticResource ScrollBarThumb}"
                               Margin="2 0" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton x:Name="scrollBarLineDownButton"
                              Grid.Row="2"
                              Grid.Column="1"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="0"
                              Height="18"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineDownCommand"
                              Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>-->
        <!--<ControlTemplate x:Key="HorizontalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid x:Name="bounds"
                  Height="14"
                  Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineLeftButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="4" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineLeftButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="6" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineRightButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="4" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineRightButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                               Storyboard.TargetProperty="Visibility"
                                                               BeginTime="0:0:0.35">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                            Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineLeftButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineLeftButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineRightButton"
                                                               Storyboard.TargetProperty="Width"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineRightButton"
                                                               Storyboard.TargetProperty="Height"
                                                               BeginTime="0:0:0.25">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                          Value="14" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                               Storyboard.TargetProperty="Visibility"
                                                               BeginTime="0:0:0.25">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                            Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled" />
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid" />
                        <VisualState x:Name="InvalidFocused" />
                        <VisualState x:Name="InvalidUnfocused" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                
                <Border x:Name="border"
                        Grid.Row="1"
                        Grid.ColumnSpan="3"
                        CornerRadius="2"
                        Background="#333"
                        Visibility="Hidden"/>
                <RepeatButton x:Name="scrollBarLineLeftButton"
                              Grid.Column="0"
                              Grid.Row="1"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="4"
                              Height="0"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineLeftCommand"
                              Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track x:Name="PART_Track"
                       Grid.Column="1"
                       Grid.Row="1"
                       Height="6"
                       IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Background="{StaticResource solidColorBrush-theme-foreground}"
                               BorderBrush="#333"
                               BorderThickness="0"
                               Style="{StaticResource ScrollBarThumb}"
                               Margin="0 2" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton x:Name="scrollBarLineRightButton"
                              Grid.Column="2"
                              Grid.Row="1"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="4"
                              Height="0"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineRightCommand"
                              Content="M 0 0 L 4 4 L 0 8 Z" />
            </Grid>
        </ControlTemplate>-->
        <ControlTemplate x:Key="VerticalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid x:Name="bounds"
                  Width="14"
                  Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border x:Name="border"
                        Grid.RowSpan="3"
                        CornerRadius="0"
                        Background="#333"
                        Visibility="Visible"/>
                <RepeatButton x:Name="scrollBarLineUpButton"
                              Grid.Row="0"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="14"
                              Height="14"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineUpCommand"
                              Content="M 0 4 L 8 4 L 4 0 Z"/>
                <Track x:Name="PART_Track"
                       Grid.Column="1"
                       Grid.Row="1"
                       Width="14"
                       IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="trackThumb"
                               Background="{StaticResource solidColorBrush-theme-foreground}"
                               BorderBrush="#333"
                               BorderThickness="0"
                               Style="{StaticResource ScrollBarThumb}"
                               Margin="2 0" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton x:Name="scrollBarLineDownButton"
                              Grid.Row="2"
                              Grid.Column="1"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="14"
                              Height="14"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineDownCommand"
                              Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid x:Name="bounds"
                  Height="14"
                  Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver" />
                        <VisualState x:Name="Disabled" />
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid" />
                        <VisualState x:Name="InvalidFocused" />
                        <VisualState x:Name="InvalidUnfocused" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <Border x:Name="border"
                        Grid.ColumnSpan="3"
                        CornerRadius="0"
                        Background="#333"
                        Visibility="Visible"/>
                <RepeatButton x:Name="scrollBarLineLeftButton"
                              Grid.Column="0"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="14"
                              Height="14"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineLeftCommand"
                              Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track x:Name="PART_Track"
                       Grid.Column="1"
                       Height="14"
                       IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Background="{StaticResource solidColorBrush-theme-foreground}"
                               BorderBrush="#333"
                               BorderThickness="0"
                               Style="{StaticResource ScrollBarThumb}"
                               Margin="0 2" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton x:Name="scrollBarLineRightButton"
                              Grid.Column="2"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="14"
                              Height="14"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineRightCommand"
                              Content="M 0 0 L 4 4 L 0 8 Z" />
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}"
               TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation"
                         Value="Horizontal">
                    <Setter Property="Width"
                            Value="Auto" />
                    <Setter Property="Height"
                            Value="Auto" />
                    <Setter Property="Template"
                            Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation"
                         Value="Vertical">
                    <Setter Property="Width"
                            Value="Auto" />
                    <Setter Property="Height"
                            Value="Auto" />
                    <Setter Property="Template"
                            Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
                <!--<MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Orientation"
                                   Value="Horizontal" />
                        <Condition Property="IsMouseOver"
                                   Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Width"
                                Value="Auto" />
                        <Setter Property="Height"
                                Value="18" />
                        <Setter Property="Template"
                                Value="{StaticResource HorizontalScrollBar}" />
                    </MultiTrigger.Setters>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Orientation"
                                   Value="Vertical" />
                        <Condition Property="IsMouseOver"
                                   Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Width"
                                Value="18" />
                        <Setter Property="Height"
                                Value="Auto" />
                        <Setter Property="Template"
                                Value="{StaticResource VerticalScrollBar}" />
                    </MultiTrigger.Setters>
                </MultiTrigger>-->
            </Style.Triggers>
        </Style>
        <!--#endregion ScrollBar Styles-->

        
    </UserControl.Resources>
    
    <Border x:Name="userControlBoundary"
            Background="Transparent"
            BorderBrush="#666"
            BorderThickness="0">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="250"
                                  Width="0.01*"
                                  
                                  MaxWidth="{Binding ElementName=userControlBoundary,
                                                     Path=ActualWidth,
                                                     Converter={StaticResource ActualSizeToMaxSizeConverter},
                                                     ConverterParameter='width'}" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition MinWidth="300"
                                  Width="1*" />
            </Grid.ColumnDefinitions>

            <!--#region TreeView Pane-->
            <Border x:Name="treeViewOpacityMask"
                    Grid.Column="0"
                    Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}},
                                         Path=Background}"
                    BorderThickness="0"
                    CornerRadius="2"
                    Padding="0" />
            <TreeView x:Name="treeViewGroups"
                      Grid.Column="0"
                      Background="Transparent"
                      BorderBrush="#464646"
                      BorderThickness="0"
                      IsEnabled="True"
                      ItemsSource="{Binding Groups,
                                            NotifyOnSourceUpdated=True,
                                            NotifyOnTargetUpdated=True,
                                            UpdateSourceTrigger=PropertyChanged}"
                      MouseRightButtonUp="TreeViewItem_MouseRightButtonUp"
                      ContextMenuClosing="treeViewGroups_ContextMenuClosing"
                      ContextMenuOpening="treeViewGroups_ContextMenuOpening">
                <!--Background="#464646"
                        BorderBrush="#666"
                        BorderThickness="0"-->
                <!--<TreeView.Resources>
                        <Style TargetType="{x:Type TreeView}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TreeView}">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="4">
                                            
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TreeView.Resources>-->
                <TreeView.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=treeViewOpacityMask}" />
                </TreeView.OpacityMask>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction Command="{Binding GroupSelectedItemChangedCommand}"
                                               CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}},
                                                                          Path=SelectedItem}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding TreeViewLoadedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <!--<TreeViewItem Header="parent">
                        <TreeViewItem Header="child" />
                    </TreeViewItem>-->
            </TreeView>
                <!--<Rectangle Grid.Row="1"
                               Fill="#121212"
                               Margin="-1 0"/>
                    <Label Grid.Row="2"
                           Height="24"
                           Foreground="Gainsboro"
                           Background="#363636"
                           BorderBrush="#666"
                           BorderThickness="1"
                           Margin="0"
                           Padding="0"
                           FontSize="16"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"
                           Content="Total Vaults: 000" />-->
            <!--#endregion TreeView Pane-->

            <GridSplitter Grid.Column="1"
                          Width="5"
                          Background="Transparent"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch" />
            <!--#region //  Right Pane  //-->
            <Border Grid.Column="2"
                    SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition MinHeight="150"
                                       Height="1*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition x:Name="rowRightColBottomRow"
                                       MinHeight="{Binding ElementName=selectedRecordInfoPane,
                                                           Path=MinHeight}"
                                       Height="0.01*"
                                       MaxHeight="{Binding ElementName=userControlBoundary,
                                                           Path=ActualHeight,
                                                           Converter={StaticResource ActualSizeToMaxSizeConverter},
                                                           ConverterParameter='height'}"/><!-- x:Name="selectedRecordInfoPaneGridRow"
                                       MinHeight="24"
                                       Height="Auto" />-->
                        <!--<RowDefinition Height="0.001*" />-->
                    </Grid.RowDefinitions>

                    <!--<Border x:Name="dataGridBorder"
                            Grid.Row="0"
                            Background="#464646"
                            BorderBrush="#464646"
                            BorderThickness="0"
                            CornerRadius="2"
                            Padding="2">-->
                    <Border x:Name="dataGridOpacityMask"
                            Grid.Row="0"
                            CornerRadius="2"
                            Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}},
                                                 Path=Background}"/>
                    <DataGrid x:Name="dataGridRecords"
                              Grid.Row="0"
                              Background="Transparent"
                              BorderBrush="LightBlue"
                              BorderThickness="0"
                              SnapsToDevicePixels="True"
                              VerticalGridLinesBrush="Transparent"
                              HorizontalGridLinesBrush="#666"
                              RowBackground="Transparent"
                              AutoGenerateColumns="False"
                              HeadersVisibility="All"
                              RowHeaderWidth="0"
                              MinRowHeight="24"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              CanUserReorderColumns="True"
                              CanUserResizeColumns="True"
                              CanUserSortColumns="False"
                              IsReadOnly="True"
                              RowHeight="{Binding RelativeSource={RelativeSource Self},
                                                  Path=FontSize,
                                                  Converter={StaticResource MultiplyDoubleConverter},
                                                  ConverterParameter=2}"
                              VerticalScrollBarVisibility="Auto"
                              HorizontalScrollBarVisibility="Auto"
                              ItemsSource="{Binding ElementName=treeViewGroups,
                                                    Path=SelectedItem.ChildrenRecords}">
                        <DataGrid.OpacityMask>
                            <VisualBrush Visual="{Binding ElementName=dataGridOpacityMask}" />
                        </DataGrid.OpacityMask>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding OnRecordSelectionChangedCommand}"
                                                       CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                                                                  Path=SelectedItem}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <DataGrid.Columns>
                            <DataGridTemplateColumn CanUserResize="False"
                                                    CanUserReorder="False"
                                                    CanUserSort="False">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type m:Record}">
                                        <Image Width="24"
                                               Height="24" 
                                               Source="{Binding Path=Icon,
                                                                Converter={StaticResource IntToDrawingImageConverter}}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Title"
                                                MinWidth="115"
                                                Width="Auto"
                                                Binding="{Binding Title}" />
                            <DataGridTextColumn Header="Username"
                                                MinWidth="115"
                                                Width="Auto"
                                                Binding="{Binding Username}" />
                            <DataGridTextColumn Header="Email"
                                                MinWidth="115"
                                                Width="Auto"
                                                Binding="{Binding Email}" />
                            <DataGridTextColumn Header="Password"
                                                MinWidth="115"
                                                Width="Auto"
                                                Binding="{Binding PasswordMasked}" />
                            <DataGridTextColumn Header="Url"
                                                MinWidth="115"
                                                Width="Auto"
                                                Binding="{Binding URL}" />
                            <!--<DataGridTextColumn Header="Notes"
                                                MinWidth="100"
                                                Binding="{Binding Notes}" />-->
                        </DataGrid.Columns>
                    </DataGrid>
                    <!--</Border>-->
                    <Rectangle Grid.Row="1"
                               Height="5"
                               Fill="Transparent"
                               Stroke="Transparent"
                               StrokeThickness="0"
                               Visibility="Visible"/>
                    <GridSplitter Grid.Row="1"
                                  Panel.ZIndex="1"
                                  Height="5"
                                  Background="Transparent"
                                  VerticalAlignment="Stretch"
                                  HorizontalAlignment="Stretch"
                                  Visibility="{Binding ElementName=selectedRecordInfoPane,
                                                       Path=Visibility}"
                                  SnapsToDevicePixels="True"/>
                    <!--"{Binding ElementName=selectedRecordInfoPane,Path=Visibility}" />-->
                    <Border x:Name="selectedRecordInfoPane"
                            Grid.Row="2"
                            MinHeight="220"
                            Background="#464646"
                            BorderBrush="#464646"
                            BorderThickness="0"
                            CornerRadius="2"
                            Padding="2"
                            Visibility="Visible"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>

                            <!--//  Top Row  //-->
                            <Viewbox Grid.Column="0"
                                     Grid.Row="0"
                                     Width="32"
                                     Height="32"
                                     Margin="8">
                                <!--<Image SnapsToDevicePixels="False"
                                       Source="{Binding SrIcon}" />-->
                                <!--<Canvas Width="24"
                                        Height="24">
                                    --><!--<Path Fill="Gainsboro"
                                          Data="M 10,4 L 12,6 H 20 C 20,6 22,6 22,8 V 18 C 22,18 22,20 20,20 H 4 C 4,20 2,20 2,18 V 6 C 2,6 2,4 4,4 Z"/>--><!--
                                    <Path Fill="Gainsboro"
                                          Data="M 10,4 L 12,6 V 7 L 3,9 L 2,8 V 6 C 2,6 2,4 4,4 Z" />
                                    <Path Fill="DarkGray"
                                          Data="M 20,6 C 20,6 22,6 22,8 V 18 C 22,18 22,20 20,20 H 4 C 4,20 2,20 2,18 V 8 C 2,8 2,6 4,6 Z" />
                                </Canvas>-->
                                <Image Source="{Binding SelectedRecord.Icon,
                                                        Converter={StaticResource IntToDrawingImageConverter}}" />
                            </Viewbox>
                            <TextBlock Grid.Column="1"
                                       Grid.Row="0"
                                       Foreground="Gainsboro"
                                       FontSize="16"
                                       VerticalAlignment="Center"
                                       Text="{Binding SelectedRecord.Title}" /><!--
                            Text="{Binding ElementName=dataGridRecords,
                                                      Path=SelectedItem.Title}"/>-->
                            <!--Text="{Binding SrTitle}" />-->
                            <Button Grid.Column="2"
                                    Grid.Row="0"
                                    Height="20"
                                    Width="20"
                                    Style="{StaticResource ButtonCollapseSelectedRecordPanelStyle}"
                                    Click="Button_Click" />
                            <!-- ="{Binding SomeCommand}" />--><!-- Click="Button_Click"/>-->
                            <!--Width="16"
                                    Height="16"
                                    Margin="16"
                                    BorderBrush="#777"
                                    Background="#444"
                                    Click="Button_Click">-->
                                <!--<Path Width="8"
                                      Height="8"
                                      Stroke="Gainsboro"
                                      StrokeThickness="1"
                                      ClipToBounds="True"
                                      Data="M 0 0 L 8 8 M 0 8 L 8 0" />-->
                                <!--<Path Width="6"
                                      Height="4"
                                      Fill="Gainsboro"
                                      ClipToBounds="True"
                                      Data="M 0 1 3 4 6 1 Z" />-->
                            <!--</Button>-->

                            <!--//  Bottom Row  //-->
                            <TabControl Grid.Column="0"
                                        Grid.ColumnSpan="3"
                                        Grid.Row="1"
                                        Margin="16 4"
                                        Background="#363636"
                                        BorderBrush="#363636"
                                        BorderThickness="1">
                                <TabItem Header="Basic"
                                         Background="Transparent"
                                         Foreground="Gainsboro">
                                    <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                                  VerticalScrollBarVisibility="Auto">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition MinHeight="28"
                                                           Height="Auto" />
                                                <RowDefinition MinHeight="28"
                                                           Height="Auto" />
                                                <RowDefinition MinHeight="28"
                                                           Height="Auto" />
                                                <RowDefinition MinHeight="28"
                                                           Height="Auto" />
                                                <RowDefinition Height="1*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="20"
                                                              Width="Auto" />
                                                <ColumnDefinition MinWidth="20"
                                                              Width="Auto" />
                                                <ColumnDefinition MinWidth="100"
                                                              Width="Auto" />
                                                <ColumnDefinition Width="1*" />
                                            </Grid.ColumnDefinitions>

                                            <!--//  Row 1  //-->
                                            <Button Grid.Column="0"
                                                Grid.Row="0"
                                                Width="16"
                                                Height="16"
                                                Command="{Binding CopyToClipboardCommand}"
                                                CommandParameter="{Binding SelectedRecord.Username}"
                                                Style="{StaticResource ButtonCopyContentStyle}"/>
                                            <ToggleButton x:Name="toggleButtonMaskUsername"
                                                          Grid.Column="1"
                                                          Grid.Row="0"
                                                          Width="16"
                                                          Height="16"
                                                          IsChecked="True"
                                                          Command="{Binding ToggleUsernameMaskCommand}"
                                                          CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                     Path=IsChecked}"
                                                          Style="{StaticResource ToggleButtonMaskContentStyle}"/>
                                            <Label Grid.Column="2"
                                               Grid.Row="0"
                                               Foreground="Gainsboro"
                                               Content="Username:" />
                                            <TextBlock x:Name="textBlockUsername"
                                                       Grid.Column="3"
                                                       Grid.Row="0"
                                                       Foreground="Gainsboro"
                                                       Padding="5">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource SelectedRecordPropertyMaskedConverter}">
                                                        <Binding Path="SelectedRecord.Username" />
                                                        <Binding ElementName="toggleButtonMaskUsername" Path="IsChecked" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>

                                            <!--//  Row 2  //-->
                                            <Button Grid.Column="0"
                                                Grid.Row="1"
                                                Width="16"
                                                Height="16"
                                                Command="{Binding CopyToClipboardCommand}"
                                                CommandParameter="{Binding SelectedRecord.Email}"
                                                Style="{StaticResource ButtonCopyContentStyle}"/>
                                            <ToggleButton x:Name="toggleButtonMaskEmail"
                                                          Grid.Column="1"
                                                          Grid.Row="1"
                                                          Width="16"
                                                          Height="16"
                                                          IsChecked="True"
                                                          Command="{Binding ToggleEmailMaskCommand}"
                                                          CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                     Path=IsChecked}"
                                                          Style="{StaticResource ToggleButtonMaskContentStyle}"/>
                                            <Label Grid.Column="2"
                                                   Grid.Row="1"
                                                   Foreground="Gainsboro"
                                                   Content="Email:" />
                                            <TextBlock x:Name="textBlockEmail"
                                                       Grid.Column="3"
                                                       Grid.Row="1"
                                                       Foreground="Gainsboro"
                                                       Padding="5">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource SelectedRecordPropertyMaskedConverter}">
                                                        <Binding Path="SelectedRecord.Email" />
                                                        <Binding ElementName="toggleButtonMaskEmail" Path="IsChecked" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>

                                            <!--//  Row 3  //-->
                                            <Button Grid.Column="0"
                                                Grid.Row="2"
                                                Width="16"
                                                Height="16"
                                                Command="{Binding CopyToClipboardCommand}"
                                                CommandParameter="{Binding SelectedRecord.Password}"
                                                Style="{StaticResource ButtonCopyContentStyle}"/>
                                            <ToggleButton x:Name="toggleButtonMaskPassword" Grid.Column="1"
                                                          Grid.Row="2"
                                                          Width="16"
                                                          Height="16"
                                                          IsChecked="True"
                                                          Command="{Binding TogglePasswordMaskCommand}"
                                                          CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                     Path=IsChecked}"
                                                          Style="{StaticResource ToggleButtonMaskContentStyle}"/>
                                            <Label Grid.Column="2"
                                                   Grid.Row="2"
                                                   Foreground="Gainsboro"
                                                   Content="Password:" />
                                            <TextBlock x:Name="textBlockPassword"
                                                       Grid.Column="3"
                                                       Grid.Row="2"
                                                       Foreground="Gainsboro"
                                                       Padding="5">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource SelectedRecordPropertyMaskedConverter}">
                                                        <Binding Path="SelectedRecord.Password" />
                                                        <Binding ElementName="toggleButtonMaskPassword" Path="IsChecked" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>

                                            <!--//  Row 4  //-->
                                            <Button Grid.Column="0"
                                                    Grid.Row="3"
                                                    Width="16"
                                                    Height="16"
                                                    Command="{Binding CopyToClipboardCommand}"
                                                    CommandParameter="{Binding SelectedRecord.URL}"
                                                    Style="{StaticResource ButtonCopyContentStyle}"/>
                                            <ToggleButton x:Name="toggleButtonMaskUrl"
                                                          Grid.Column="1"
                                                          Grid.Row="3"
                                                          Width="16"
                                                          Height="16"
                                                          IsChecked="True"
                                                          Command="{Binding ToggleUrlMaskCommand}"
                                                          CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                     Path=IsChecked}"
                                                          Style="{StaticResource ToggleButtonMaskContentStyle}"/>
                                            <Label Grid.Column="2"
                                                   Grid.Row="3"
                                                   Foreground="Gainsboro"
                                                   Content="Url:" />
                                            <TextBlock x:Name="textBlockUrl"
                                                       Grid.Column="3"
                                                       Grid.Row="3"
                                                       Foreground="Gainsboro"
                                                       Padding="5">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource SelectedRecordPropertyMaskedConverter}">
                                                        <Binding Path="SelectedRecord.URL" />
                                                        <Binding ElementName="toggleButtonMaskUrl" Path="IsChecked" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </Grid>
                                    </ScrollViewer>
                                </TabItem>
                                <TabItem Header="Notes"
                                         Background="Transparent"
                                         Foreground="Gainsboro">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition MinHeight="28"
                                                           Height="Auto" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MinWidth="20"
                                                              Width="Auto" />
                                            <ColumnDefinition MinWidth="20"
                                                              Width="Auto" />
                                            <ColumnDefinition MinWidth="100"
                                                              Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <!--//  Row 1  //-->
                                        <Button Grid.Column="0"
                                                Grid.Row="0"
                                                Width="16"
                                                Height="16"
                                                Command="{Binding CopyToClipboardCommand}"
                                                CommandParameter="{Binding SelectedRecord.Notes}"
                                                Style="{StaticResource ButtonCopyContentStyle}"/>
                                        <ToggleButton x:Name="toggleButtonMaskNotes"
                                                      Grid.Column="1"
                                                      Grid.Row="0"
                                                      Width="16"
                                                      Height="16"
                                                      IsChecked="True"
                                                      Command="{Binding ToggleNotesMaskCommand}"
                                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                 Path=IsChecked}"
                                                      Style="{StaticResource ToggleButtonMaskContentStyle}"/>
                                        <Label Grid.Column="2"
                                               Grid.Row="0"
                                               Foreground="Gainsboro"
                                               Content="Notes:"/>
                                        <ScrollViewer Grid.Column="3"
                                                      Grid.Row="0"
                                                      Grid.RowSpan="2"
                                                      VerticalScrollBarVisibility="Auto">
                                            <TextBlock Foreground="Gainsboro"
                                                       Background="Transparent"
                                                       Padding="5"
                                                       TextWrapping="Wrap">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource SelectedRecordPropertyMaskedConverter}">
                                                        <Binding Path="SelectedRecord.Notes" />
                                                        <Binding ElementName="toggleButtonMaskNotes" Path="IsChecked" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </ScrollViewer>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="Advanced"
                                         Background="Transparent"
                                         Foreground="Gainsboro">
                                    <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                                  VerticalScrollBarVisibility="Auto">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition MinHeight="28"
                                                           Height="Auto" />
                                                <RowDefinition MinHeight="28"
                                                           Height="Auto" />
                                                <RowDefinition MinHeight="28"
                                                           Height="Auto" />
                                                <RowDefinition MinHeight="28"
                                                           Height="Auto" />
                                                <RowDefinition Height="1*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="20"
                                                              Width="Auto" />
                                                <ColumnDefinition MinWidth="20"
                                                              Width="Auto" />
                                                <ColumnDefinition MinWidth="100"
                                                              Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <!--//  Row 1  //-->
                                            <Label Grid.Column="2"
                                                   Grid.Row="0"
                                                   Foreground="Gainsboro"
                                                   Content="Expiration Date:" />
                                            <TextBlock Grid.Column="3"
                                                   Grid.Row="0"
                                                   Foreground="Gainsboro"
                                                   Padding="5"
                                                   Text="{Binding SelectedRecord.ExpirationDate}"/>

                                            <!--//  Row 2  //-->
                                            <Label Grid.Column="2"
                                                   Grid.Row="1"
                                                   Foreground="Gainsboro"
                                                   Content="Created Date:" />
                                            <TextBlock Grid.Column="3"
                                                       Grid.Row="1"
                                                       Foreground="Gainsboro"
                                                       Padding="5"
                                                       Text="{Binding SelectedRecord.CreatedDate}"/>

                                            <!--//  Row 3  //-->
                                            <Label Grid.Column="2"
                                                   Grid.Row="2"
                                                   Foreground="Gainsboro"
                                                   Content="Modified Date:" />
                                            <TextBlock Grid.Column="3"
                                                       Grid.Row="2"
                                                       Foreground="Gainsboro"
                                                       Padding="5"
                                                       Text="{Binding SelectedRecord.ModifiedDate}"/>

                                            <!--//  Row 4  //-->
                                            <Label Grid.Column="2"
                                                   Grid.Row="3"
                                                   Foreground="Gainsboro"
                                                   Content="GUID:" />
                                            <TextBlock Grid.Column="3"
                                                       Grid.Row="3"
                                                       Foreground="Gainsboro"
                                                       Padding="5"
                                                       Text="{Binding SelectedRecord.GUID}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </TabItem>
                                <!--<TabItem Header="Item2"
                                         Background="Transparent"
                                         Foreground="Gainsboro" />-->
                            </TabControl>
                        </Grid>
                    </Border>
                    <!--<Border x:Name="buttonSelectedRecordInfoPaneExpander"
                            Grid.Row="2"
                            Background="red"
                            MinHeight="24">-->
                    <!--<Border x:Name="buttonSelectedRecordInfoPaneExpander"
                            Grid.Row="2"
                            MinHeight="24"
                            BorderBrush="#363636"
                            Background="#363636"
                            BorderThickness="0"
                            CornerRadius="2"
                            Padding="2"
                            Visibility="Visible">-->
                    <Button x:Name="buttonSelectedRecordInfoPaneExpander"
                            Grid.Row="2"
                            MinHeight="24"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            Style="{StaticResource ButtonExpandSelectedRecordPanelStyle}"
                            Visibility="Collapsed"
                            Click="Button_Click">
                        <Path Fill="Gainsboro"
                              Data="M 0,12 8,0 16,12 Z" />
                    </Button>
                    <!--</Border>-->
                    <!--</Border>-->
                </Grid>
            </Border>
            <!--#endregion //  Right Pane  //-->
        </Grid>
    </Border>
</UserControl>
