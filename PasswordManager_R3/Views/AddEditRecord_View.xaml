<UserControl x:Class="PasswordManager_R3.Views.AddEditRecord_View"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:local="clr-namespace:PasswordManager_R3.Views"
             xmlns:converters="clr-namespace:PasswordManager_R3.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450"
             d:DesignWidth="800"
             Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <!--//  Converters  //-->
        <converters:CheckedToVisibilityConverter x:Key="CheckedToVisibilityConverter" />
        
        <!--#region //  ScrollBar Styles  //-->
        <Style x:Key="ScrollBarLineButton"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="Border"
                                Margin="1"
                                CornerRadius="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <!--<Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                                     EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderMediumColor}"
                                                          Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                                          Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>-->
                            <!--<Border.Background>
                                <LinearGradientBrush StartPoint="0,0"
                                                     EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}"/>
                                            <GradientStop Color="{DynamicResource ControlMediumColor}"
                                                          Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>-->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <!--<Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>-->
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <!--<Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                          Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>-->
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            
                            <Path x:Name="Arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="{Binding Content,
                                                 RelativeSource={RelativeSource TemplatedParent}}" >
                                <!--<Path.Fill>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                                </Path.Fill>-->
                            </Path>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb"
               TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="bounds"
                                CornerRadius="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="VerticalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid x:Name="bounds"
                  Width="14"
                  Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <!-- Background Colors -->
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#262626" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineUpButton"
                                                              Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#262626" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineDownButton"
                                                              Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#262626" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineUpButton"
                                                              Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#888" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="scrollBarLineDownButton"
                                                              Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#888" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_Thumb"
                                                              Storyboard.TargetProperty="(Thumb.Background).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#888" />
                                </ColorAnimationUsingKeyFrames>
                                
                                <!-- Foreground Colors -->
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid" />
                        <VisualState x:Name="InvalidFocused" />
                        <VisualState x:Name="InvalidUnfocused" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <Border x:Name="border"
                        Grid.RowSpan="3"
                        CornerRadius="0"
                        Background="#333"
                        Visibility="Visible"/>
                <RepeatButton x:Name="scrollBarLineUpButton"
                              Grid.Row="0"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="14"
                              Height="14"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineUpCommand"
                              Content="M 0 4 L 8 4 L 4 0 Z"/>
                <Track x:Name="PART_Track"
                       Grid.Column="1"
                       Grid.Row="1"
                       Width="14"
                       IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="PART_Thumb"
                               Background="{StaticResource solidColorBrush-theme-foreground}"
                               BorderBrush="#333"
                               BorderThickness="0"
                               Style="{StaticResource ScrollBarThumb}"
                               Margin="2 0" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton x:Name="scrollBarLineDownButton"
                              Grid.Row="2"
                              Grid.Column="1"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="14"
                              Height="14"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineDownCommand"
                              Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid x:Name="bounds"
                  Height="14"
                  Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver" />
                        <VisualState x:Name="Disabled" />
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid" />
                        <VisualState x:Name="InvalidFocused" />
                        <VisualState x:Name="InvalidUnfocused" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <Border x:Name="border"
                        Grid.ColumnSpan="3"
                        CornerRadius="0"
                        Background="#333"
                        Visibility="Visible"/>
                <RepeatButton x:Name="scrollBarLineLeftButton"
                              Grid.Column="0"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="14"
                              Height="14"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineLeftCommand"
                              Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track x:Name="PART_Track"
                       Grid.Column="1"
                       Height="14"
                       IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Background="{StaticResource solidColorBrush-theme-foreground}"
                               BorderBrush="#333"
                               BorderThickness="0"
                               Style="{StaticResource ScrollBarThumb}"
                               Margin="0 2" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton x:Name="scrollBarLineRightButton"
                              Grid.Column="2"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="14"
                              Height="14"
                              Foreground="{StaticResource solidColorBrush-theme-foreground}"
                              Background="#333"
                              BorderBrush="#333"
                              BorderThickness="0"
                              Command="ScrollBar.LineRightCommand"
                              Content="M 0 0 L 4 4 L 0 8 Z" />
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}"
               TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation"
                         Value="Horizontal">
                    <Setter Property="Width"
                            Value="Auto" />
                    <Setter Property="Height"
                            Value="Auto" />
                    <Setter Property="Template"
                            Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation"
                         Value="Vertical">
                    <Setter Property="Width"
                            Value="Auto" />
                    <Setter Property="Height"
                            Value="Auto" />
                    <Setter Property="Template"
                            Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion //  ScrollBar Styles  //-->
        
        <!--#region //  ScrollViewer Styles  //-->
        <!-- ScrollViewer with ScrollBar on left -->
        <Style x:Key="LeftScrollViewer"
               TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border Grid.Column="1"
                                    BorderThickness="0,1,1,1">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="Red" />
                                </Border.BorderBrush>
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" />
                            </Border>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Orientation="Horizontal"
                                       Grid.Row="1"
                                       Grid.Column="1"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ScrollViewer with ScrollBar on right -->
        <Style x:Key="RightScrollViewer"
               TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border Grid.Column="0"
                                    Margin="0"
                                    Padding="4 4 0 4">
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" />
                            </Border>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Grid.Column="1"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Orientation="Horizontal"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            <Border Grid.Row="1"
                                    Grid.Column="1"
                                    Background="#333" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion //  ScrollViewer Styles  //--> 
        
        <!--#region //  TextBoxBase Styles  //-->
        <Style x:Key="InputTextBoxStyle"
               TargetType="{x:Type TextBox}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <!--<Setter Property="OverridesDefaultStyle" Value="True" />-->
            <!--<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />-->
            <!--<Setter Property="FocusVisualStyle" Value="{x:Null}" />-->
            <Setter Property="AllowDrop"
                    Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Grid>
                            <Border Name="bounds"
                                    CornerRadius="2"
                                    Padding="2,0"
                                    Background="#333"
                                    BorderBrush="#666"
                                    BorderThickness="0">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Margin="0"
                                              VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                              HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" />
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsReadOnly"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="Background"
                                        Value="#222" />
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="#555" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter TargetName="bounds"
                                        Property="Background"
                                        Value="#262626" />
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="#363636" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PasswordBoxStyle"
               TargetType="{x:Type PasswordBox}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <!--<Setter Property="OverridesDefaultStyle" Value="True" />-->
            <!--<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />-->
            <!--<Setter Property="FocusVisualStyle" Value="{x:Null}" />-->
            <!--<Setter Property="AllowDrop"
                    Value="true" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Grid>
                            <Border Name="bounds"
                                    CornerRadius="2"
                                    Padding="2,0"
                                    Background="#333"
                                    BorderBrush="#666"
                                    BorderThickness="0">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Margin="0" />
                                <!--VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                              HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" />-->
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsReadOnly"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="Background"
                                        Value="#222" />
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="#555" />
                            </Trigger>-->
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter TargetName="bounds"
                                        Property="Background"
                                        Value="#262626" />
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="#363636" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpirationDateTextBoxStyle"
               TargetType="{x:Type TextBox}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <!--<Setter Property="OverridesDefaultStyle" Value="True" />-->
            <!--<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />-->
            <!--<Setter Property="FocusVisualStyle" Value="{x:Null}" />-->
            <Setter Property="Foreground"
                    Value="Gainsboro" />
            <Setter Property="CaretBrush"
                    Value="Gainsboro" />
            <Setter Property="AllowDrop"
                    Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border Name="bounds"
                                    CornerRadius="2 0 0 2"
                                    Padding="2,0"
                                    Background="#333"
                                    BorderBrush="#666"
                                    BorderThickness="0">

                                <ScrollViewer x:Name="PART_ContentHost"
                                              Margin="0"
                                              VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                              HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" />
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsReadOnly"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="Background"
                                        Value="#222" />
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="#555" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter TargetName="bounds"
                                        Property="Background"
                                        Value="#262626" />
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="#363636" />
                                <Setter Property="Foreground"
                                        Value="#555" />
                                <Setter Property="CaretBrush"
                                        Value="#555" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="Background"
                                        Value="#333" />
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="#666" />
                                <!--<Setter Property="Foreground"
                                        Value="{TemplateBinding Foreground}" />
                                <Setter Property="CaretBrush"
                                        Value="{TemplateBinding CaretBrush}" />-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NotesTextBoxStyle"
               TargetType="{x:Type TextBox}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <!--<Setter Property="OverridesDefaultStyle" Value="True" />-->
            <!--<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />-->
            <!--<Setter Property="FocusVisualStyle" Value="{x:Null}" />-->
            <Setter Property="Foreground"
                    Value="Gainsboro" />
            <Setter Property="CaretBrush"
                    Value="Gainsboro" />
            <Setter Property="AllowDrop"
                    Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border Name="bounds"
                                    CornerRadius="2"
                                    Background="#333"
                                    BorderBrush="#666"
                                    BorderThickness="0"/>

                            <ScrollViewer x:Name="PART_ContentHost"
                                          VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                          HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
                                          Style="{StaticResource RightScrollViewer}">
                                <ScrollViewer.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=bounds}" />
                                </ScrollViewer.OpacityMask>
                            </ScrollViewer>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsReadOnly"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="Background"
                                        Value="#222" />
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="#555" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter TargetName="bounds"
                                        Property="Background"
                                        Value="#262626" />
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="#363636" />
                                <Setter Property="Foreground"
                                        Value="#555" />
                                <Setter Property="CaretBrush"
                                        Value="#555" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="Background"
                                        Value="#333" />
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="#666" />
                                <!--<Setter Property="Foreground"
                                        Value="{TemplateBinding Foreground}" />
                                <Setter Property="CaretBrush"
                                        Value="{TemplateBinding CaretBrush}" />-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion //  TextBoxBase Styles  //-->

        <!--//  ListView Styles  //-->
        <!--<Style x:Key="ListViewItemStyle"
               TargetType="{x:Type ListViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Grid VerticalAlignment="Center"
                              HorizontalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            
                            
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <Style x:Key="EntryInfoListViewItem"
               TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="bounds"
                                Width="96"
                                Height="96"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="2">

                            <Grid VerticalAlignment="Center"
                                  HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Width="36"
                                         Height="36"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center">
                                    <Canvas Width="24"
                                            Height="24">
                                        <Path x:Name="listViewItemGlyph"
                                              Fill="Gainsboro"
                                              Data="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87
                                                    M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z" />
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter x:Name="cPresenter"
                                                  Grid.Row="1"
                                                  TextBlock.Foreground="Gainsboro"
                                                  Content="{TemplateBinding Content}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DeepSkyblue" />
                                <Setter TargetName="listViewItemGlyph"
                                        Property="Fill"
                                        Value="DeepSkyBlue" />
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="DeepSkyBlue" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DodgerBlue" />
                                <Setter TargetName="listViewItemGlyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="DodgerBlue" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="EntryAdvancedListViewItem"
               TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="bounds"
                                Width="96"
                                Height="96"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="2">

                            <Grid VerticalAlignment="Center"
                                  HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Width="36"
                                         Height="36"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center">
                                    <Canvas Width="24"
                                            Height="24">
                                        <Path x:Name="listViewItemGlyph"
                                              Fill="Gainsboro"
                                              Data="M8,12H16V14H8V12
                                                    M10,20H6V4H13V9H18V12.1L20,10.1V8L14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H10V20
                                                    M8,18H12.1L13,17.1V16H8V18
                                                    M20.2,13C20.3,13 20.5,13.1 20.6,13.2L21.9,14.5C22.1,14.7 22.1,15.1 21.9,15.3L20.9,16.3L18.8,14.2L19.8,13.2C19.9,13.1 20,13 20.2,13
                                                    M20.2,16.9L14.1,23H12V20.9L18.1,14.8L20.2,16.9Z" />
                                    </Canvas>
                                </Viewbox>
                                
                                <StackPanel Grid.Row="1"
                                            Orientation="Vertical">
                                    <TextBlock x:Name="tBlock1"
                                               Foreground="Gainsboro"
                                               Text="Security"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center" />
                                    <TextBlock x:Name="tBlock2"
                                               Foreground="Gainsboro"
                                               Text="Questions"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center" />
                                </StackPanel>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DeepSkyblue" />
                                <Setter TargetName="listViewItemGlyph"
                                        Property="Fill"
                                        Value="DeepSkyBlue" />
                                <Setter TargetName="tBlock1"
                                        Property="Foreground"
                                        Value="DeepSkyBlue" />
                                <Setter TargetName="tBlock2"
                                        Property="Foreground"
                                        Value="DeepSkyBlue" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DodgerBlue" />
                                <Setter TargetName="listViewItemGlyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />
                                <Setter TargetName="tBlock1"
                                        Property="Foreground"
                                        Value="DodgerBlue" />
                                <Setter TargetName="tBlock2"
                                        Property="Foreground"
                                        Value="DodgerBlue" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="EntryIconListViewItem"
               TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="bounds"
                                Width="96"
                                Height="96"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="2">

                            <Grid VerticalAlignment="Center"
                                  HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Width="36"
                                         Height="36"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center">
                                    <Canvas Width="24"
                                            Height="24">
                                        <Path x:Name="listViewItemGlyph"
                                              Fill="Gainsboro"
                                              Data="M20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12
                                                    M22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2A10,10 0 0,1 22,12
                                                    M10,9.5C10,10.3 9.3,11 8.5,11C7.7,11 7,10.3 7,9.5C7,8.7 7.7,8 8.5,8C9.3,8 10,8.7 10,9.5
                                                    M17,9.5C17,10.3 16.3,11 15.5,11C14.7,11 14,10.3 14,9.5C14,8.7 14.7,8 15.5,8C16.3,8 17,8.7 17,9.5
                                                    M12,17.23C10.25,17.23 8.71,16.5 7.81,15.42L9.23,14C9.68,14.72 10.75,15.23 12,15.23C13.25,15.23 14.32,14.72 14.77,14L16.19,15.42C15.29,16.5 13.75,17.23 12,17.23Z" />
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter x:Name="cPresenter"
                                                  Grid.Row="1"
                                                  TextBlock.Foreground="Gainsboro"
                                                  Content="{TemplateBinding Content}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DeepSkyblue" />
                                <Setter TargetName="listViewItemGlyph"
                                        Property="Fill"
                                        Value="DeepSkyBlue" />
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="DeepSkyBlue" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DodgerBlue" />
                                <Setter TargetName="listViewItemGlyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="DodgerBlue" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="EntryPropertiesListViewItem"
               TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="bounds"
                                Width="96"
                                Height="96"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="2">

                            <Grid VerticalAlignment="Center"
                                  HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Width="36"
                                         Height="36"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center">
                                    <Canvas Width="24"
                                            Height="24">
                                        <Path x:Name="listViewItemGlyph"
                                              Fill="Gainsboro"
                                              Data="M10 20H6V4H13V9H18V12.1L20 10.1V8L14 2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H10V20
                                                    M20.2 13C20.3 13 20.5 13.1 20.6 13.2L21.9 14.5C22.1 14.7 22.1 15.1 21.9 15.3L20.9 16.3L18.8 14.2L19.8 13.2C19.9 13.1 20 13 20.2 13
                                                    M20.2 16.9L14.1 23H12V20.9L18.1 14.8L20.2 16.9Z" />
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter x:Name="cPresenter"
                                                  Grid.Row="1"
                                                  TextBlock.Foreground="Gainsboro"
                                                  Content="{TemplateBinding Content}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DeepSkyblue" />
                                <Setter TargetName="listViewItemGlyph"
                                        Property="Fill"
                                        Value="DeepSkyBlue" />
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="DeepSkyBlue" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DodgerBlue" />
                                <Setter TargetName="listViewItemGlyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />
                                <Setter TargetName="cPresenter"
                                        Property="TextBlock.Foreground"
                                        Value="DodgerBlue" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListViewUpButtonStyle"
               TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bounds"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2 2 0 0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                              Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
                                                                         Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrowGlyph"
                                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                              Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
                                                                         Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrowGlyph"
                                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Canvas Height="12"
                                    Width="12">
                                <Path x:Name="arrowGlyph"
                                      Fill="{TemplateBinding Foreground}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Data="M 0 9 L 12 9 L 6 3 Z" />
                            </Canvas>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListViewDownButtonStyle"
               TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bounds"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0 0 2 2">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                              Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
                                                                         Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrowGlyph"
                                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource color-theme-blue}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                              Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
                                                                         Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="arrowGlyph"
                                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Canvas Height="12"
                                    Width="12">
                                <Path x:Name="arrowGlyph"
                                      Fill="{TemplateBinding Foreground}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Data="M 0 3 L 12 3 L 6 9 Z" />
                            </Canvas>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style x:Key="ListViewStyle"
               TargetType="{x:Type ListView}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <!--<Style x:Key="ListViewStyle"
               TargetType="{x:Type ListView}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border x:Name="bounds"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="1">
                            <ScrollViewer VerticalScrollBarVisibility="Disabled"
                                          HorizontalScrollBarVisibility="Disabled">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        
        <!--//  Confirm/Cancel Button Styles  //-->
        <Style x:Key="SaveRecordButtonStyle"
               TargetType="{x:Type Button}">
            <Setter Property="Background"
                    Value="{Binding Background}" />
            <Setter Property="Foreground"
                    Value="{Binding Foreground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bounds"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                BorderBrush="{TemplateBinding Foreground}"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                CornerRadius="2">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
                                                                         Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
                                                                         Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#333" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#222" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#333" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            
                            <ContentPresenter TextBlock.Foreground="{Binding ElementName=bounds,
                                                                             Path=(TextBlock.Foreground)}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CancelRecordButtonStyle"
               TargetType="{x:Type Button}">
            <Setter Property="Background"
                    Value="{Binding Background}" />
            <Setter Property="Foreground"
                    Value="{Binding Foreground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bounds"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                BorderBrush="{TemplateBinding Foreground}"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                CornerRadius="2">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
                                                                         Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
                                                                         Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#333" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#222" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#333" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <ContentPresenter TextBlock.Foreground="{Binding ElementName=bounds,
                                                                             Path=(TextBlock.Foreground)}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--//  Password Button Styles  //-->
        <Style x:Key="ToggleButtonGeneratePasswordStyle"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="Foreground"
                    Value="{Binding Foreground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="bounds"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0">

                            <Viewbox Height="20"
                                     Width="20">
                                <Canvas Height="24"
                                        Width="24">
                                    <Path x:Name="glyph"
                                          Fill="{TemplateBinding Foreground}"
                                          Data="M19 5V19H5V5H19
                                                M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3
                                                M12 10.5C11.2 10.5 10.5 11.2 10.5 12S11.2 13.5 12 13.5 13.5 12.8 13.5 12 12.8 10.5 12 10.5
                                                M7.5 6C6.7 6 6 6.7 6 7.5S6.7 9 7.5 9 9 8.3 9 7.5 8.3 6 7.5 6
                                                M16.5 15C15.7 15 15 15.7 15 16.5C15 17.3 15.7 18 16.5 18C17.3 18 18 17.3 18 16.5C18 15.7 17.3 15 16.5 15Z" />
                                </Canvas>
                            </Viewbox>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                                     Value="True">
                                <Setter TargetName="glyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="glyph"
                                        Property="Fill"
                                        Value="DeepSkyBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleButtonMaskPasswordStyle"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="Foreground"
                    Value="{Binding Foreground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="bounds"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0">

                            <Viewbox Height="16"
                                     Width="16">
                                <Canvas Height="16"
                                        Width="16"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                    <Path x:Name="maskedGlyph"
                                          Fill="{TemplateBinding Foreground}"
                                          Data="M 8 6 A 2.01 2.01 0 0 0 5.99 8.01 2.01 2.01 0 0 0 8 10.02 2.01 2.01 0 0 0 10.01 8.01 2.01 2.01 0 0 0 8 6
                                                m 0 5.36 A 3.35 3.35 0 0 1 4.65 8.01 3.35 3.35 0 0 1 8 4.66 3.35 3.35 0 0 1 11.35 8.01 3.35 3.35 0 0 1 8 11.36
                                                M 8 2.985 c -3.35 0 -6.2109 2.0837 -7.37 5.025 1.1591 2.9413 4.02 5.025 7.37 5.025 3.35 0 6.2109 -2.0837 7.37 -5.025 C 14.2109 5.0687 11.35 2.985 8 2.985 Z"
                                          Visibility="Visible" />
                                    <Path x:Name="unmaskedGlyph"
                                          Fill="{TemplateBinding Foreground}"
                                          Data="m 7.8891 5.99 2.1239 2.1172 c 0 -0.0335 0 -0.0737 0 -0.1072 A 2.01 2.01 0 0 0 8.003 5.99 c -0.0402 0 -0.0737 0 -0.1139 0
                                                M 5.0081 6.526 6.0466 7.5645 C 6.0131 7.7052 5.993 7.8459 5.993 8 a 2.01 2.01 0 0 0 2.01 2.01 c 0.1474 0 0.2948 -0.0201 0.4355 -0.0536 L 9.477 10.9949 C 9.0281 11.216 8.5323 11.35 8.003 11.35 A 3.35 3.35 0 0 1 4.653 8 c 0 -0.5293 0.134 -1.0251 0.3551 -1.474
                                                M 1.303 2.8209 2.8306 4.3485 3.1321 4.65 C 2.0266 5.521 1.1556 6.66 0.633 8 c 1.1591 2.9413 4.02 5.025 7.37 5.025 1.0385 0 2.0301 -0.201 2.9346 -0.5628 L 11.2257 12.7436 13.1821 14.7 14.033 13.8491 2.1539 1.97
                                                M 8.003 4.65 A 3.35 3.35 0 0 1 11.353 8 c 0 0.4288 -0.0871 0.8442 -0.2412 1.2194 l 1.9631 1.9631 C 14.0799 10.345 14.8839 9.2462 15.373 8 14.2139 5.0587 11.353 2.975 8.003 2.975 7.065 2.975 6.1672 3.1425 5.323 3.444 L 6.7769 4.8845 C 7.1588 4.7371 7.5675 4.65 8.003 4.65 Z"
                                          Visibility="Collapsed" />
                                </Canvas>
                            </Viewbox>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                                     Value="True">
                                <!--<Setter TargetName="unmaskedGlyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />
                                <Setter TargetName="maskedGlyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />-->
                                <Setter TargetName="unmaskedGlyph"
                                        Property="Visibility"
                                        Value="Visible" />
                                <Setter TargetName="maskedGlyph"
                                        Property="Visibility"
                                        Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="unmaskedGlyph"
                                        Property="Fill"
                                        Value="DeepSkyBlue" />
                                <Setter TargetName="maskedGlyph"
                                        Property="Fill"
                                        Value="DeepSkyBlue" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="unmaskedGlyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />
                                <Setter TargetName="maskedGlyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--//  CheckBox Styles  //-->
        <!--<Style x:Key="{x:Type CheckBox}"
               TargetType="{x:Type CheckBox}">
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="VerticalAlignment"
                    Value="{Binding VerticalAlignment}" />
            <Setter Property="HorizontalAlignment"
                    Value="{Binding HorizontalAlignment}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border Background="#444"
                                BorderBrush="Gainsboro"
                                BorderThickness="1"
                                CornerRadius="2"
                                Padding="2">
                            <Canvas Width="7"
                                    Height="7">
                                <Path Stroke="Gainsboro"
                                      StrokeThickness="1"
                                      Data="M 0,5 L 2,7 L 7,0" />
                            </Canvas>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <Style x:Key="CheckBoxNoLabelStyle"
               TargetType="{x:Type CheckBox}">
            <Setter Property="Height"
                    Value="14" />
            <Setter Property="Width"
                    Value="14" />
            <!--<Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="bounds"
                                    Grid.Column="0"
                                    Height="{TemplateBinding Height}"
                                    Width="{TemplateBinding Width}"
                                    Background="#333"
                                    BorderBrush="Transparent"
                                    BorderThickness="0"
                                    CornerRadius="2"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">
                                <Viewbox Width="12"
                                         Height="12">
                                    <Canvas Width="24"
                                            Height="24">
                                        <Path x:Name="checkGlyph"
                                              Fill="Gainsboro"
                                              Data="M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z" />
                                    </Canvas>
                                </Viewbox>
                            </Border>
                            <!--<ContentPresenter Grid.Column="1"
                                              Margin="8 0"
                                              TextBlock.Foreground="{TemplateBinding Foreground}"
                                              Content="{TemplateBinding Content}" />-->
                            <!--<Label Grid.Column="1"
                                   Foreground="{TemplateBinding Foreground}"
                                   Content="{TemplateBinding Content}" />-->
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                                     Value="False">
                                <Setter TargetName="checkGlyph"
                                        Property="Visibility"
                                        Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsChecked"
                                     Value="True">
                                <Setter TargetName="checkGlyph"
                                        Property="Visibility"
                                        Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="deepskyblue" />
                                <Setter TargetName="bounds"
                                        Property="BorderThickness"
                                        Value="1" />
                                <Setter TargetName="checkGlyph"
                                        Property="Fill"
                                        Value="deepskyblue" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="dodgerblue" />
                                <Setter TargetName="bounds"
                                        Property="BorderThickness"
                                        Value="1" />
                                <Setter TargetName="checkGlyph"
                                        Property="Fill"
                                        Value="dodgerblue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxWithLabelStyle"
               TargetType="{x:Type CheckBox}">
            <!--<Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="bounds"
                                    Grid.Column="0"
                                    Height="14"
                                    Width="14"
                                    Background="#222"
                                    BorderBrush="Gainsboro"
                                    BorderThickness="0"
                                    CornerRadius="2"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">
                                <Viewbox Width="12"
                                         Height="12">
                                    <Canvas Width="24"
                                            Height="24">
                                        <Path x:Name="checkGlyph"
                                              Fill="Gainsboro"
                                              Data="M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z" />
                                    </Canvas>
                                </Viewbox>
                            </Border>
                            <Label Grid.Column="1"
                                   Foreground="{TemplateBinding Foreground}"
                                   Content="{TemplateBinding Content}" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                                     Value="False">
                                <Setter TargetName="checkGlyph"
                                        Property="Visibility"
                                        Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsChecked"
                                     Value="True">
                                <Setter TargetName="checkGlyph"
                                        Property="Visibility"
                                        Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="deepskyblue" />
                                <Setter TargetName="bounds"
                                        Property="BorderThickness"
                                        Value="1" />
                                <Setter TargetName="checkGlyph"
                                        Property="Fill"
                                        Value="deepskyblue" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="dodgerblue" />
                                <Setter TargetName="bounds"
                                        Property="BorderThickness"
                                        Value="1" />
                                <Setter TargetName="checkGlyph"
                                        Property="Fill"
                                        Value="dodgerblue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--//  ComboBox Styles  //-->
        <ControlTemplate x:Key="ComboBoxToggleButton"
                         TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="24" />
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <!--<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0" Value="Blue" />
                                </ColorAnimationUsingKeyFrames>-->
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"
                                                              Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="DeepSkyBlue" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)"
                                                              Storyboard.TargetName="Arrow">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="DeepSkyBlue" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"
                                                              Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="DodgerBlue" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)"
                                                              Storyboard.TargetName="Arrow">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="DodgerBlue" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                              Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#303030" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                              Storyboard.TargetName="Arrow">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#545454" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                              Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#303030" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <!--<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0" Value="Green" />
                                </ColorAnimationUsingKeyFrames>-->
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"
                                                              Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="SteelBlue" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)"
                                                              Storyboard.TargetName="Arrow">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="SteelBlue" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="Border"
                        Grid.ColumnSpan="2"
                        CornerRadius="2"
                        BorderThickness="0"
                        BorderBrush="#666"
                        Background="#333" />
                <!--<Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1" Background="{TemplateBinding Background}" />-->
                <Canvas Height="8"
                        Width="8"
                        Grid.Column="1"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <!--<Path x:Name="Arrow"
                          Grid.Column="1"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 4 4 L 8 0 Z"
                          Fill="{StaticResource solidColorBrush-theme-foreground}" />-->
                    <Path x:Name="Arrow"
                          Data="M 0 2 L 4 6 L 8 2 Z"
                          Fill="{StaticResource solidColorBrush-theme-foreground}" />
                </Canvas>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTextBox"
                         TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost"
                    Focusable="False"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="0" />
        </ControlTemplate>
        <Style x:Key="ExpirationDateSelectorComboBox"
               TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels"
                    Value="true" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <!--<Setter Property="FocusVisualStyle"
                    Value="{StaticResource ButtonFocusVisual}" />-->
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <!--<Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>-->
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                                          Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#545454" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="PART_EditableTextBox">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="ContentSite">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton"
                                          Template="{StaticResource ComboBoxToggleButton}"
                                          Focusable="false"
                                          ClickMode="Press"
                                          IsChecked="{Binding IsDropDownOpen,
                                                              Mode=TwoWay,
                                                              RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="Presets"
                                              TextBlock.Foreground="Gainsboro"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="4,4,23,4"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left">
                            </ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}"
                                     Template="{StaticResource ComboBoxTextBox}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Bottom"
                                     Margin="3,3,23,3"
                                     Focusable="True"
                                     Background="Transparent"
                                     Visibility="Hidden" /><!--
                            IsReadOnly="{TemplateBinding IsReadOnly}" />-->
                            <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            BorderThickness="0"
                                            BorderBrush="#666"
                                            Background="#333" />
                                    <ScrollViewer Margin="4,6,4,6"
                                                  SnapsToDevicePixels="True">
                                        <StackPanel x:Name="PopupItemsHost"
                                                    IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems"
                                     Value="false">
                                <Setter TargetName="DropDownBorder"
                                        Property="MinHeight"
                                        Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                                     Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                                        Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup"
                                     Property="AllowsTransparency"
                                     Value="true">
                                <Setter TargetName="DropDownBorder"
                                        Property="CornerRadius"
                                        Value="4" />
                                <Setter TargetName="DropDownBorder"
                                        Property="Margin"
                                        Value="0,2,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="ContentSite"
                                        Property="TextBlock.Foreground"
                                        Value="DeepSkyBlue" />
                            </Trigger>
                            <Trigger SourceName="ToggleButton"
                                     Property="IsChecked"
                                     Value="True">
                                <Setter TargetName="ContentSite"
                                        Property="TextBlock.Foreground"
                                        Value="SteelBlue" />
                            </Trigger>
                            <Trigger SourceName="ToggleButton"
                                     Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="ContentSite"
                                        Property="TextBlock.Foreground"
                                        Value="DodgerBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TemplateSelectorComboBox"
               TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels"
                    Value="true" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <!--<Setter Property="FocusVisualStyle"
                    Value="{StaticResource ButtonFocusVisual}" />-->
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="true" />
            <Setter Property="MinWidth"
                    Value="80" />
            <Setter Property="MinHeight"
                    Value="24" />
            <Setter Property="Width"
                    Value="Auto" />
            <Setter Property="Height"
                    Value="Auto" />
            <Setter Property="Margin"
                    Value="5,0" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <!--<Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>-->
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                                          Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#545454" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="PART_EditableTextBox">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="ContentSite">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton"
                                          Template="{StaticResource ComboBoxToggleButton}"
                                          Focusable="false"
                                          ClickMode="Press"
                                          IsChecked="{Binding IsDropDownOpen,
                                                              Mode=TwoWay,
                                                              RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="Template"
                                              TextBlock.Foreground="Gainsboro"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="4,4,23,4"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}"
                                     Template="{StaticResource ComboBoxTextBox}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Bottom"
                                     Margin="3,3,23,3"
                                     Focusable="True"
                                     Background="Transparent"
                                     Visibility="Hidden" /><!--
                            IsReadOnly="{TemplateBinding IsReadOnly}" />-->
                            <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            BorderThickness="0"
                                            BorderBrush="#666"
                                            Background="#333" />
                                    <ScrollViewer Margin="4,6,4,6"
                                                  SnapsToDevicePixels="True">
                                        <StackPanel x:Name="PopupItemsHost"
                                                    IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems"
                                     Value="false">
                                <Setter TargetName="DropDownBorder"
                                        Property="MinHeight"
                                        Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                                     Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                                        Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup"
                                     Property="AllowsTransparency"
                                     Value="true">
                                <Setter TargetName="DropDownBorder"
                                        Property="CornerRadius"
                                        Value="2" />
                                <Setter TargetName="DropDownBorder"
                                        Property="Margin"
                                        Value="0,2,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="ContentSite"
                                        Property="TextBlock.Foreground"
                                        Value="DeepSkyBlue" />
                            </Trigger>
                            <Trigger SourceName="ToggleButton"
                                     Property="IsChecked"
                                     Value="True">
                                <Setter TargetName="ContentSite"
                                        Property="TextBlock.Foreground"
                                        Value="SteelBlue" />
                            </Trigger>
                            <Trigger SourceName="ToggleButton"
                                     Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="ContentSite"
                                        Property="TextBlock.Foreground"
                                        Value="DodgerBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ComboBoxItem}"
               TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels"
                    Value="true" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border"
                                TextBlock.Foreground="Gainsboro"
                                Padding="2"
                                SnapsToDevicePixels="true"
                                Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DarkBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="blue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--//  ListBox Styles  //-->
        <Style x:Key="ListBoxItemIconSelectorStyle"
               TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxIconSelectorStyle"
               TargetType="{x:Type ListBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="bounds"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                Padding="2"
                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            
                            <ItemsPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    
        <!--//  PasswordGenerator Popup Styles  //-->
        <Style x:Key="ProgressBarPasswordGeneratorStyle"
               TargetType="{x:Type ProgressBar}">
            
        </Style>
        <Style x:Key="SliderPasswordGeneratorStyle"
               TargetType="{x:Type Slider}">

        </Style>
        <Style x:Key="TextBoxPasswordGeneratorLengthStyle"
               TargetType="{x:Type TextBox}">
            
        </Style>
        <Style x:Key="RepeatButtonPasswordGeneratorIncreaseLengthStyle"
               TargetType="{x:Type RepeatButton}">
            
        </Style>
        <Style x:Key="RepeatButtonPasswordGeneratorDecreaseLengthStyle"
               TargetType="{x:Type RepeatButton}">

        </Style>
        <Style x:Key="ButtonGeneratePasswordGeneratorStyle"
               TargetType="{x:Type Button}">
            <Setter Property="Foreground"
                    Value="{StaticResource solidColorBrush-theme-foreground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bounds"
                                Background="#222"
                                BorderBrush="#444"
                                BorderThickness="0"
                                CornerRadius="2">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
                                                                         Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="cPresenter"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderThickness">
                                                <EasingThicknessKeyFrame KeyTime="0"
                                                                         Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="cPresenter"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="DodgerBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#333" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bounds"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#222" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="cPresenter"
                                                                          Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#333" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            
                            <ContentPresenter x:Name="cPresenter"
                                              TextBlock.Foreground="{TemplateBinding Foreground}"
                                              Content="{TemplateBinding Content}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--//  Expiration Date Styles  //-->
        <Style x:Key="ToggleButtonExpirationDateStyle"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="bounds"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                Background="#333"
                                BorderBrush="#333"
                                BorderThickness="0"
                                CornerRadius="0 2 2 0">
                            <Canvas Height="8"
                                    Width="8">
                                <Path x:Name="arrowGlyph"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 0 2 L 4 6 L 8 2 Z"
                                      Fill="{StaticResource solidColorBrush-theme-foreground}" />
                            </Canvas>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsReadOnly"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="Background"
                                        Value="#222" />
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="#555" />
                            </Trigger>-->
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter TargetName="bounds"
                                        Property="Background"
                                        Value="#262626" />
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="#363636" />
                                <Setter TargetName="arrowGlyph"
                                        Property="Fill"
                                        Value="#555" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderThickness"
                                        Value="1" />
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DeepSkyBlue" />
                                <Setter TargetName="arrowGlyph"
                                        Property="Fill"
                                        Value="DeepSkyBlue" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="bounds"
                                        Property="BorderThickness"
                                        Value="1" />
                                <Setter TargetName="bounds"
                                        Property="BorderBrush"
                                        Value="DodgerBlue" />
                                <Setter TargetName="arrowGlyph"
                                        Property="Fill"
                                        Value="DodgerBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Border Background="Transparent"
                BorderBrush="#666"
                BorderThickness="0">
            <DockPanel LastChildFill="True">
                <!--//  TOP PANEL  //-->
                <Border DockPanel.Dock="Top"
                        Height="42"
                        Background="#333"
                        BorderBrush="#666"
                        BorderThickness="0"
                        CornerRadius="2 2 0 0">
                    <TextBlock FontSize="12"
                               Padding="12"
                               Foreground="Gainsboro"
                               Text="Root - New Record" />
                </Border>

                <!--//  BOTTOM PANEL  //-->
                <Border DockPanel.Dock="Bottom"
                        Height="42"
                        Background="#333"
                        BorderBrush="#666"
                        BorderThickness="0"
                        CornerRadius="0 0 2 2">
                    <StackPanel Orientation="Horizontal"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Right">
                        <Button MinWidth="100"
                                Width="100"
                                MinHeight="30"
                                Height="Auto"
                                Margin="5"
                                Content="OK"
                                Foreground="Gainsboro"
                                Background="#222"
                                Command="{Binding OkButtonCommand}"
                                Style="{StaticResource SaveRecordButtonStyle}"/>
                        <!--<Button MinWidth="100"
                                Width="100"
                                MinHeight="30"
                                Height="Auto"
                                Margin="5"
                                Content="Update"
                                Foreground="Gainsboro"
                                Background="#444"
                                Visibility="Visible"
                                Command="{Binding CreateRecordCommand}"
                                Style="{StaticResource SaveRecordButtonStyle}"/>-->
                        <Button MinWidth="100"
                                Width="Auto"
                                MinHeight="30"
                                Height="Auto"
                                Margin="5"
                                Content="Cancel"
                                Foreground="Gainsboro"
                                Background="#222"
                                Command="{Binding CancelButtonCommand}"
                                Style="{StaticResource CancelRecordButtonStyle}"/>
                    </StackPanel>
                </Border>

                <!--//  LEFT PANEL  //-->
                <Border DockPanel.Dock="Left"
                        Width="Auto"
                        Background="#262626"
                        BorderBrush="#666"
                        BorderThickness="0"
                        Padding="12,6">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Button x:Name="listViewTabDecrementButton"
                                Grid.Row="0"
                                Height="16"
                                Foreground="Gainsboro"
                                Background="#333"
                                BorderBrush="#666"
                                BorderThickness="0"
                                Style="{StaticResource ListViewUpButtonStyle}"
                                Click="listViewTabDecrementButton_Click"/>
                        <!--//  Eventually need to make ListView width Auto and scale with ListViewItem contents  //-->
                        <ListView x:Name="listViewTabSelector"
                                  Grid.Row="1"
                                  Width="100"
                                  Foreground="Gainsboro"
                                  Background="#333"
                                  BorderBrush="#666"
                                  BorderThickness="0"
                                  ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  SelectedIndex="0">
                            <ListViewItem Content="Entry"
                                          Style="{StaticResource EntryInfoListViewItem}" />
                            <ListViewItem Content="Icon"
                                          Style="{StaticResource EntryIconListViewItem}" />
                            <!--<ListViewItem Content="Advanced"
                                          Style="{StaticResource EntryAdvancedListViewItem}" />-->
                            <ListViewItem Content="Properties"
                                          Style="{StaticResource EntryPropertiesListViewItem}" />
                        </ListView>
                        <Button x:Name="listViewTabIncrementButton"
                                Grid.Row="2"
                                Height="16"
                                Foreground="Gainsboro"
                                Background="#333"
                                BorderBrush="#666"
                                BorderThickness="0"
                                Style="{StaticResource ListViewDownButtonStyle}"
                                Click="listViewTabIncrementButton_Click"/>
                    </Grid>
                </Border>

                <!--//  MIDDLE PANEL  //-->
                <Border Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        Padding="10 20 5 20">
                    <TabControl Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                SelectedIndex="{Binding ElementName=listViewTabSelector,Path=SelectedIndex}">

                        <!--//  "Entry" Form  //-->
                        <TabItem Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="120" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>

                                <!--//  Title  //-->
                                <Label Grid.Column="1"
                                       Grid.Row="0"
                                       Height="24"
                                       Padding="4 0 0 0"
                                       Margin="0 0 0 2"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Left"
                                       Content="Title:"
                                       Foreground="Gainsboro" />
                                <TextBox Grid.Column="2"
                                         Grid.Row="0"
                                         Margin="0 0 0 2"
                                         Height="24"
                                         BorderBrush="Transparent"
                                         BorderThickness="0"
                                         Background="Transparent"
                                         Foreground="Gainsboro"
                                         CaretBrush="Gainsboro"
                                         VerticalContentAlignment="Center"
                                         Text="{Binding SrTitle,
                                                        Mode=TwoWay}"
                                         Style="{StaticResource InputTextBoxStyle}"/>

                                <!--//  Username  //-->
                                <Label Grid.Column="1"
                                       Grid.Row="1"
                                       Height="24"
                                       Padding="4 0 0 0"
                                       Margin="0 2"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Left"
                                       Content="Username:"
                                       Foreground="Gainsboro" />
                                <TextBox Grid.Column="2"
                                         Grid.Row="1"
                                         Margin="0 2"
                                         Height="24"
                                         VerticalContentAlignment="Center"
                                         BorderBrush="Transparent"
                                         BorderThickness="0"
                                         Background="Transparent"
                                         Foreground="Gainsboro"
                                         CaretBrush="Gainsboro"
                                         Text="{Binding SrUsername,
                                                        Mode=TwoWay}"
                                         Style="{StaticResource InputTextBoxStyle}"/>

                                <!--//  Email  //-->
                                <Label Grid.Column="1"
                                       Grid.Row="2"
                                       Height="24"
                                       Padding="4 0 0 0"
                                       Margin="0 2"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Left"
                                       Content="Email:"
                                       Foreground="Gainsboro" />
                                <TextBox Grid.Column="2"
                                         Grid.Row="2"
                                         Margin="0 2"
                                         Height="24"
                                         VerticalContentAlignment="Center"
                                         BorderBrush="Transparent"
                                         BorderThickness="0"
                                         Background="Transparent"
                                         Foreground="Gainsboro"
                                         CaretBrush="Gainsboro"
                                         Text="{Binding SrEmail,
                                                        Mode=TwoWay}"
                                         Style="{StaticResource InputTextBoxStyle}" />

                                <!--//  Password  //-->
                                <Label Grid.Column="1"
                                       Grid.Row="3"
                                       Height="24"
                                       Padding="4 0 0 0"
                                       Margin="0 2"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Left"
                                       Content="Password:"
                                       Foreground="Gainsboro" />
                                <Border Grid.Column="2"
                                        Grid.Row="3"
                                        Margin="0 2"
                                        Height="24"
                                        Background="#333"
                                        CornerRadius="2">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*" />
                                            <ColumnDefinition Width="24" />
                                            <ColumnDefinition Width="24" />
                                        </Grid.ColumnDefinitions>

                                        <TextBox x:Name="textBoxPassword"
                                                 Grid.Column="0"
                                                 Grid.ColumnSpan="1"
                                                 VerticalContentAlignment="Center"
                                                 BorderBrush="Transparent"
                                                 BorderThickness="0"
                                                 Background="Transparent"
                                                 Foreground="Gainsboro"
                                                 CaretBrush="Gainsboro"
                                                 Visibility="Collapsed"
                                                 Text="{Binding SrPassword,
                                                                Mode=TwoWay}"
                                                 Style="{StaticResource InputTextBoxStyle}"
                                                 TextChanged="textBoxPassword_TextChanged"/>
                                        <PasswordBox x:Name="pWrdBox"
                                                     Grid.Column="0"
                                                     Grid.ColumnSpan="1"
                                                     VerticalContentAlignment="Center"
                                                     BorderBrush="Transparent"
                                                     BorderThickness="0"
                                                     Background="Transparent"
                                                     Foreground="Gainsboro"
                                                     CaretBrush="Gainsboro"
                                                     Visibility="Visible"
                                                     Style="{StaticResource PasswordBoxStyle}"
                                                     PasswordChanged="pWrdBox_PasswordChanged"/>
                                        <ToggleButton x:Name="toggleButtonGeneratePassword"
                                                      Grid.Column="1"
                                                      Foreground="Gainsboro"
                                                      Background="Transparent"
                                                      BorderBrush="Transparent"
                                                      BorderThickness="0"
                                                      Style="{StaticResource ToggleButtonGeneratePasswordStyle}">
                                            <!--<Viewbox Width="20"
                                                 Height="20">
                                            <Canvas Width="24"
                                                    Height="24">
                                                <Path Fill="Gainsboro"
                                                      Data="M19 5V19H5V5H19
                                                            M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3
                                                            M12 10.5C11.2 10.5 10.5 11.2 10.5 12S11.2 13.5 12 13.5 13.5 12.8 13.5 12 12.8 10.5 12 10.5
                                                            M7.5 6C6.7 6 6 6.7 6 7.5S6.7 9 7.5 9 9 8.3 9 7.5 8.3 6 7.5 6
                                                            M16.5 15C15.7 15 15 15.7 15 16.5C15 17.3 15.7 18 16.5 18C17.3 18 18 17.3 18 16.5C18 15.7 17.3 15 16.5 15Z" />
                                            </Canvas>
                                        </Viewbox>-->
                                        </ToggleButton>
                                        <ToggleButton x:Name="toggleButtonMaskPassword"
                                                      Grid.Column="2"
                                                      IsChecked="True"
                                                      Foreground="Gainsboro"
                                                      Background="Transparent"
                                                      BorderBrush="Transparent"
                                                      BorderThickness="0"
                                                      Style="{StaticResource ToggleButtonMaskPasswordStyle}"
                                                      Click="toggleButtonMaskPassword_Click">
                                            <!--<Viewbox Width="16"
                                                 Height="16">
                                            <Canvas Width="16"
                                                    Height="16">
                                                <Path Fill="Gainsboro"
                                                      Data="M 8 6 A 2.01 2.01 0 0 0 5.99 8.01 2.01 2.01 0 0 0 8 10.02 2.01 2.01 0 0 0 10.01 8.01 2.01 2.01 0 0 0 8 6
                                                            m 0 5.36 A 3.35 3.35 0 0 1 4.65 8.01 3.35 3.35 0 0 1 8 4.66 3.35 3.35 0 0 1 11.35 8.01 3.35 3.35 0 0 1 8 11.36
                                                            M 8 2.985 c -3.35 0 -6.2109 2.0837 -7.37 5.025 1.1591 2.9413 4.02 5.025 7.37 5.025 3.35 0 6.2109 -2.0837 7.37 -5.025 C 14.2109 5.0687 11.35 2.985 8 2.985 Z" />
                                                <Path Fill="Gainsboro"
                                                      Data="m 7.8891 5.99 2.1239 2.1172 c 0 -0.0335 0 -0.0737 0 -0.1072 A 2.01 2.01 0 0 0 8.003 5.99 c -0.0402 0 -0.0737 0 -0.1139 0
                                                            M 5.0081 6.526 6.0466 7.5645 C 6.0131 7.7052 5.993 7.8459 5.993 8 a 2.01 2.01 0 0 0 2.01 2.01 c 0.1474 0 0.2948 -0.0201 0.4355 -0.0536 L 9.477 10.9949 C 9.0281 11.216 8.5323 11.35 8.003 11.35 A 3.35 3.35 0 0 1 4.653 8 c 0 -0.5293 0.134 -1.0251 0.3551 -1.474
                                                            M 1.303 2.8209 2.8306 4.3485 3.1321 4.65 C 2.0266 5.521 1.1556 6.66 0.633 8 c 1.1591 2.9413 4.02 5.025 7.37 5.025 1.0385 0 2.0301 -0.201 2.9346 -0.5628 L 11.2257 12.7436 13.1821 14.7 14.033 13.8491 2.1539 1.97
                                                            M 8.003 4.65 A 3.35 3.35 0 0 1 11.353 8 c 0 0.4288 -0.0871 0.8442 -0.2412 1.2194 l 1.9631 1.9631 C 14.0799 10.345 14.8839 9.2462 15.373 8 14.2139 5.0587 11.353 2.975 8.003 2.975 7.065 2.975 6.1672 3.1425 5.323 3.444 L 6.7769 4.8845 C 7.1588 4.7371 7.5675 4.65 8.003 4.65 Z" />
                                            </Canvas>
                                        </Viewbox>-->
                                        </ToggleButton>
                                    </Grid>
                                </Border>

                                <!--//  URL  //-->
                                <Label Grid.Column="1"
                                       Grid.Row="4"
                                       Height="24"
                                       Padding="4 0 0 0"
                                       Margin="0 2"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Left"
                                       Content="URL:"
                                       Foreground="Gainsboro" />
                                <TextBox Grid.Column="2"
                                         Grid.Row="4"
                                         Margin="0 2"
                                         Height="24"
                                         VerticalContentAlignment="Center"
                                         BorderBrush="Transparent"
                                         BorderThickness="0"
                                         Background="Transparent"
                                         Foreground="Gainsboro"
                                         CaretBrush="Gainsboro"
                                         Style="{StaticResource InputTextBoxStyle}"
                                         Text="{Binding SrUrl,
                                                        Mode=TwoWay}"/>

                                <!--//  Tags  //-->
                                <Label Grid.Column="1"
                                       Grid.Row="5"
                                       Height="24"
                                       Padding="4 0 0 0"
                                       Margin="0 2"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Left"
                                       Content="Tags:"
                                       Foreground="Gainsboro" />
                                <TextBox Grid.Column="2"
                                         Grid.Row="5"
                                         Margin="0 2"
                                         Height="24"
                                         VerticalContentAlignment="Center"
                                         BorderBrush="Transparent"
                                         BorderThickness="0"
                                         Background="Transparent"
                                         Foreground="Gainsboro"
                                         CaretBrush="Gainsboro"
                                         Style="{StaticResource InputTextBoxStyle}"
                                         Text="{Binding SrTags,
                                                        Mode=TwoWay}"/>

                                <!--//  Expiration Date  //-->
                                <CheckBox x:Name="checkBoxExpirationDate"
                                          Grid.Column="0"
                                          Grid.Row="6"
                                          IsChecked="{Binding SrHasExpirationDate,
                                                              Mode=TwoWay}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Style="{StaticResource CheckBoxNoLabelStyle}"/>
                                <Label Grid.Column="1"
                                       Grid.Row="6"
                                       Height="24"
                                       Padding="4 0 0 0"
                                       Margin="0 2"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Left"
                                       Content="Expiration Date:"
                                       Foreground="Gainsboro" />
                                <Grid Grid.Column="2"
                                      Grid.Row="6"
                                      Margin="0 2"
                                      Height="24">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="4" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*" />
                                            <ColumnDefinition Width="24" />
                                        </Grid.ColumnDefinitions>
                                        
                                        <TextBox x:Name="textBoxExpirationDate"
                                                 Grid.Column="0"
                                                 IsEnabled="{Binding ElementName=checkBoxExpirationDate,
                                                                     Path=IsChecked}"
                                                 VerticalContentAlignment="Center"
                                                 BorderBrush="Transparent"
                                                 BorderThickness="0"
                                                 Background="Transparent"
                                                 Style="{StaticResource ExpirationDateTextBoxStyle}"
                                                 Text="{Binding SrExpirationDate,
                                                                Mode=TwoWay}"/>
                                        <ToggleButton x:Name="toggleButtonExpirationDate"
                                                      Grid.Column="1"
                                                      BorderBrush="#666"
                                                      Background="#333"
                                                      IsEnabled="{Binding ElementName=checkBoxExpirationDate,
                                                                          Path=IsChecked}"
                                                      IsChecked="{Binding IsCalendarDisplayed,
                                                                          Mode=TwoWay}"
                                                      Style="{StaticResource ToggleButtonExpirationDateStyle}"/>
                                    </Grid>
                                    <ComboBox x:Name="comboBoxExpirationDatePresets"
                                              Grid.Column="2"
                                              Foreground="Gainsboro"
                                              Background="#333"
                                              BorderBrush="#666"
                                              BorderThickness="1"
                                              Style="{StaticResource ExpirationDateSelectorComboBox}"
                                              SelectionChanged="comboBoxExpirationDatePresets_SelectionChanged">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding ComboBoxExpirationDatePresetsSelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ComboBox}},
                                                                                                  Path=SelectedIndex}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <ComboBoxItem Content="12 Hours" />
                                        <ComboBoxItem Content="24 Hours" />
                                        <Separator />
                                        <ComboBoxItem Content="1 Week" />
                                        <ComboBoxItem Content="2 Weeks" />
                                        <ComboBoxItem Content="3 Weeks" />
                                        <Separator />
                                        <ComboBoxItem Content="1 Month" />
                                        <ComboBoxItem Content="3 Months" />
                                        <ComboBoxItem Content="6 Months" />
                                        <Separator />
                                        <ComboBoxItem Content="1 Year" />
                                        <ComboBoxItem Content="2 Years" />
                                        <ComboBoxItem Content="3 Years" />
                                    </ComboBox>
                                </Grid>

                                <!--//  Notes  //-->
                                <CheckBox x:Name="checkBoxNotes"
                                          Grid.Column="0"
                                          Grid.Row="7"
                                          IsChecked="{Binding SrHasNotes,
                                                              Mode=TwoWay}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Style="{StaticResource CheckBoxNoLabelStyle}"/>
                                <Label Grid.Column="1"
                                       Grid.Row="7"
                                       Height="24"
                                       Padding="4 0 0 0"
                                       Margin="0 2"
                                       VerticalAlignment="Top"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Left"
                                       Content="Notes:"
                                       Foreground="Gainsboro" />
                                <TextBox Grid.Column="2"
                                         Grid.Row="7"
                                         Grid.RowSpan="2"
                                         IsEnabled="{Binding ElementName=checkBoxNotes,
                                                             Path=IsChecked}"
                                         Margin="0 2 0 0"
                                         Background="Transparent"
                                         BorderBrush="Transparent"
                                         BorderThickness="0"
                                         HorizontalScrollBarVisibility="Disabled"
                                         VerticalScrollBarVisibility="Auto"
                                         TextWrapping="Wrap"
                                         AcceptsReturn="True"
                                         Padding="0 3"
                                         Style="{StaticResource NotesTextBoxStyle}"
                                         Text="{Binding SrNotes,
                                                        Mode=TwoWay}"/>
                            </Grid>
                        </TabItem>

                        <!--//  "Icon" Form  //-->
                        <TabItem Visibility="Collapsed">
                            <ListBox x:Name="addEditIconSelector"
                                     SnapsToDevicePixels="True"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     SelectionMode="Single"
                                     Background="#333"
                                     BorderBrush="#666"
                                     BorderThickness="0"
                                     SelectedIndex="0"
                                     Style="{StaticResource ListBoxIconSelectorStyle}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"
                                                   IsItemsHost="True" />
                                        <!--<Grid IsItemsHost="True" />-->
                                        <!--<UniformGrid Columns="10" IsItemsHost="True" />-->
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal"
                                                    Margin="0"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center">
                                            <!--<CheckBox x:Name="checkedListBoxItem" IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}},Path=IsSelected,Mode=TwoWay}" />-->
                                            <!--<Viewbox SnapsToDevicePixels="True">-->
                                            <ContentPresenter SnapsToDevicePixels="True"
                                                              Content="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Content}"
                                                              VerticalAlignment="Center"
                                                              HorizontalAlignment="Center" />
                                            <!--</Viewbox>-->
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </TabItem>

                        <!--//  "Properties" Form  //-->
                        <TabItem Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="100" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>

                                <!--//  Created Date  //-->
                                <Label Grid.Column="1"
                                       Grid.Row="0"
                                       Height="24"
                                       Padding="0"
                                       Margin="0 0 0 2"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Left"
                                       Content="Created:"
                                       Foreground="Gainsboro" />
                                <TextBox Grid.Column="2"
                                         Grid.Row="0"
                                         Height="24"
                                         IsReadOnly="True"
                                         Margin="0 0 0 2"
                                         VerticalContentAlignment="Center"
                                         HorizontalContentAlignment="Left"
                                         Foreground="Gainsboro"
                                         Text="{Binding SrCreatedDate,
                                                        Mode=OneTime}"
                                         Style="{StaticResource InputTextBoxStyle}"/>

                                <!--//  Modified Date  //-->
                                <Label Grid.Column="1"
                                       Grid.Row="1"
                                       Height="24"
                                       Padding="0"
                                       Margin="0 2"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Left"
                                       Content="Last Modified:"
                                       Foreground="Gainsboro"/>
                                <TextBox Grid.Column="2"
                                         Grid.Row="1"
                                         Height="24"
                                         IsReadOnly="True"
                                         Margin="0 2"
                                         VerticalContentAlignment="Center"
                                         HorizontalContentAlignment="Left"
                                         Foreground="Gainsboro"
                                         Text="{Binding SrModifiedDate,
                                                        Mode=OneTime}"
                                         Style="{StaticResource InputTextBoxStyle}"/>

                                <!--//  GUID  //-->
                                <!--//  **MIGHT REMOVE**  //-->
                                <Label Grid.Column="1"
                                       Grid.Row="2"
                                       Height="24"
                                       Padding="0"
                                       Margin="0 2"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Left"
                                       Content="GUID:"
                                       Foreground="Gainsboro"/>
                                <TextBox Grid.Column="2"
                                         Grid.Row="2"
                                         Height="24"
                                         IsReadOnly="True"
                                         Margin="0 2"
                                         VerticalContentAlignment="Center"
                                         HorizontalContentAlignment="Left"
                                         Foreground="Gainsboro"
                                         Text="{Binding SrGuid,
                                                        Mode=OneTime}"
                                         Style="{StaticResource InputTextBoxStyle}"/>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </Border>
            </DockPanel>
        </Border>
        
        <Popup x:Name="popupPasswordGenerator"
               PlacementTarget="{Binding ElementName=toggleButtonGeneratePassword}"
               Placement="Bottom"
               IsOpen="{Binding ElementName=toggleButtonGeneratePassword,
                                Path=IsChecked}"
               Width="Auto"
               Height="Auto"
               HorizontalOffset="-276"
               StaysOpen="False">
            <Border x:Name="borderPasswordGenerator"
                    Width="300"
                    Height="150"
                    Background="#333"
                    BorderBrush="#666"
                    BorderThickness="1"
                    CornerRadius="2"
                    Padding="10 5 10 10">
                <!--<StackPanel Orientation="Vertical">-->
                <Grid>
                    <!--<Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>-->
                    <Grid.RowDefinitions>
                        <!--<RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />-->
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!--//  Row 0  //-->
                    <!--<TextBox Grid.Column="0"
                             Grid.Row="0"
                             Foreground="Gainsboro"
                             CaretBrush="Gainsboro"
                             Background="#444"
                             BorderBrush="#666"
                             BorderThickness="1"/>-->

                    <!--//  Row 1  //-->
                    <!--<Grid Grid.Row="0"
                          HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0"
                               Foreground="Gainsboro"
                               Content="Strength:" />
                        <ProgressBar Grid.Column="1"
                                     VerticalAlignment="Center">
                            <ProgressBar.Style>
                                <Style>
                                    <Setter Property=""
                                </Style>
                            </ProgressBar.Style>
                        </ProgressBar>
                    </Grid>-->
                    <Viewbox Grid.Row="0"
                             Height="10"
                             Width="42"
                             Margin="0 5"
                             Visibility="Visible">
                        <Viewbox.LayoutTransform>
                            <ScaleTransform ScaleX="1.5"
                                            ScaleY="1.5" />
                        </Viewbox.LayoutTransform>

                        <StackPanel Orientation="Horizontal">
                            <Ellipse Height="6"
                                     Width="6"
                                     Margin="1"
                                     Fill="DimGray"/>
                            <Ellipse Height="6"
                                     Width="6"
                                     Margin="1"
                                     Fill="DimGray" />
                            <Ellipse Height="6"
                                     Width="6"
                                     Margin="1"
                                     Fill="DimGray" />
                            <Ellipse Height="6"
                                     Width="6"
                                     Margin="1"
                                     Fill="DimGray" />
                            <Ellipse Height="6"
                                     Width="6"
                                     Margin="1"
                                     Fill="DimGray" />
                        </StackPanel>
                    </Viewbox>

                    <!--//  Row 2  //-->
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0"
                               Foreground="Gainsboro"
                               Content="Length:"
                               VerticalContentAlignment="Center"
                               Margin="0"
                               Padding="0 0 8 0"
                               FontSize="12"/>
                        <Slider x:Name="sliderPasswordLength"
                                Grid.Column="1"
                                IsSnapToTickEnabled="True"
                                SmallChange="1.0"
                                LargeChange="1.0"
                                Minimum="{Binding PgMinPasswordLength}"
                                Maximum="{Binding PgMaxPasswordLength}"
                                TickFrequency="1.0"
                                Value="{Binding PgLength,
                                                Mode=TwoWay}"
                                Style="{StaticResource SliderPasswordGeneratorStyle}"/>
                        <Border Grid.Column="2"
                                Width="Auto"
                                Margin="5 0 0 0"
                                BorderThickness="0"
                                BorderBrush="#666">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="26" />
                                    <ColumnDefinition Width="18" />
                                </Grid.ColumnDefinitions>
                                
                                <TextBox x:Name="textBoxPasswordLength"
                                         Grid.Column="0"
                                         Grid.ColumnSpan="1"
                                         Grid.Row="0"
                                         Grid.RowSpan="2"
                                         FontSize="12"
                                         Foreground="Gainsboro"
                                         Background="#333"
                                         CaretBrush="Gainsboro"
                                         BorderThickness="1"
                                         VerticalContentAlignment="Center"
                                         Text="{Binding PgLength,
                                                        Mode=TwoWay}"
                                         Style="{StaticResource TextBoxPasswordGeneratorLengthStyle}"/>
                                <RepeatButton Grid.Column="1"
                                              Grid.ColumnSpan="1"
                                              Grid.Row="0"
                                              Grid.RowSpan="1"
                                              BorderThickness="1"
                                              Style="{StaticResource RepeatButtonPasswordGeneratorIncreaseLengthStyle}"
                                              Command="{Binding IncrementPasswordLengthCommand}">
                                    <Path Fill="Black"
                                          Data="M 0,5 L 7,5 L 3.5,0 Z" />
                                </RepeatButton>
                                <RepeatButton Grid.Column="1"
                                              Grid.ColumnSpan="1"
                                              Grid.Row="1"
                                              Grid.RowSpan="1"
                                              BorderThickness="1"
                                              Style="{StaticResource RepeatButtonPasswordGeneratorDecreaseLengthStyle}"
                                              Command="{Binding DecrementPasswordLengthCommand}">
                                    <Path Fill="Black"
                                          Data="M 0,0 L 7,0 L 3.5,5 Z" />
                                </RepeatButton>
                            </Grid>
                        </Border>
                    </Grid>

                    <!--//  Row 3  //-->
                    <Grid Grid.Row="2"
                          Margin="10 0"
                          VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        
                        <CheckBox Grid.Column="0"
                                  Grid.Row="0"
                                  Foreground="Gainsboro"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left"
                                  FontSize="12"
                                  Content="Uppercase Letters"
                                  IsChecked="{Binding PgIncludesUppercaseLetters}"
                                  Style="{StaticResource CheckBoxWithLabelStyle}"/>
                        <CheckBox Grid.Column="1"
                                  Grid.Row="0"
                                  Foreground="Gainsboro"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left"
                                  FontSize="12"
                                  Content="Lowercase Letters"
                                  IsChecked="{Binding PgIncludesLowercaseLetters}"
                                  Style="{StaticResource CheckBoxWithLabelStyle}"/>

                        <!--//  Row 3  //-->
                        <CheckBox Grid.Column="0"
                                  Grid.Row="1"
                                  Foreground="Gainsboro"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left"
                                  FontSize="12"
                                  Content="Numbers"
                                  IsChecked="{Binding PgIncludesNumbers}"
                                  Style="{StaticResource CheckBoxWithLabelStyle}"/>
                        <CheckBox Grid.Column="1"
                                  Grid.Row="1"
                                  Foreground="Gainsboro"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left"
                                  FontSize="12"
                                  Content="Special Characters"
                                  IsChecked="{Binding PgIncludesSpecialCharacters}"
                                  Style="{StaticResource CheckBoxWithLabelStyle}"/>
                    </Grid>

                    <!--//  Row 4  />-->
                    <Button Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Grid.Row="4"
                            Height="30"
                            Width="125"
                            FontSize="12"
                            Content="Generate"
                            Style="{StaticResource ButtonGeneratePasswordGeneratorStyle}"
                            Command="{Binding GeneratePasswordCommand}"/>

                    <!--//  **MIGHT NEED TO ADD MORE ROWS**  //-->
                </Grid>
                <!--</StackPanel>-->
            </Border>
        </Popup>
        <Popup x:Name="popupExpirationDateCalendar"
               PlacementTarget="{Binding ElementName=textBoxExpirationDate}"
               Placement="Bottom"
               IsOpen="{Binding ElementName=toggleButtonExpirationDate,
                                Path=IsChecked}"
               Height="Auto"
               Width="Auto"
               StaysOpen="True">
            <Calendar x:Name="expirationDateCalendar"
                      SelectionModeChanged="expirationDateCalendar_SelectionModeChanged"
                      SelectedDatesChanged="expirationDateCalendar_SelectedDatesChanged" DisplayDateChanged="expirationDateCalendar_DisplayDateChanged" SourceUpdated="expirationDateCalendar_SourceUpdated" TargetUpdated="expirationDateCalendar_TargetUpdated" TextInput="expirationDateCalendar_TextInput">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedDatesChanged">
                        <i:InvokeCommandAction Command="{Binding CalendarDateSelectionChangedCommand}"
                                               CommandParameter="{Binding ElementName=expirationDateCalendar,Path=SelectedDates}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Calendar><!-- need to add method to get selected date to textbox and close popup -->
        </Popup>
    </Grid>
</UserControl>
