<Window x:Class="PasswordManager_R3.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PasswordManager_R3"
        xmlns:converters="clr-namespace:PasswordManager_R3.Converters"
        xmlns:vm="clr-namespace:PasswordManager_R3.ViewModels"
        xmlns:views="clr-namespace:PasswordManager_R3.Views"
        mc:Ignorable="d"
        Title="Password LockBox"
        MinHeight="600"
        Height="720"
        MinWidth="800"
        Width="960"
        FontSize="14"
        SnapsToDevicePixels="True"
        TextOptions.TextFormattingMode="Display"
        Background="{StaticResource solidColorBrush-static-background}"
        WindowState="{Binding WinState}"
        x:Name="WinMain"
        Loaded="WinMain_Loaded">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding WindowActivatedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding WindowDeactivatedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewMouseDown">
            <i:InvokeCommandAction Command="{Binding WindowPreviewMouseDownCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewKeyDown">
            <i:InvokeCommandAction Command="{Binding WindowPreviewKeyDownCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <!--PreviewMouseDown="WinMain_PreviewMouseDown"
        Activated="WinMain_Activated"
        Deactivated="WinMain_Deactivated">-->

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="24"
                      CornerRadius="0"
                      GlassFrameThickness="7 0 7 7"
                      NonClientFrameEdges="None"
                      ResizeBorderThickness="7"
                      UseAeroCaptionButtons="True" />
    </WindowChrome.WindowChrome>
    <!--<WindowChrome.ResizeGripDirection>
        <ResizeGripDirection>Left</ResizeGripDirection>
    </WindowChrome.ResizeGripDirection>-->

    <Window.DataContext>
        <vm:MainWindow_ViewModel />
    </Window.DataContext>

    <Window.Resources>
        <!--//  DATA TEMPLATES FOR VIEWS  //-->
        <DataTemplate DataType="{x:Type vm:LockScreen_ViewModel}">
            <views:LockScreen_View />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:Database_ViewModel}">
            <views:Database_View />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:AddEditRecord_ViewModel}">
            <views:AddEditRecord_View />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:AddEditGroup_ViewModel}">
            <views:AddEditGroup_View />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:AppSettings_ViewModel}">
            <views:AppSettings_View />
        </DataTemplate>
        
        <!--#region //  CONVERTERS  //-->
        <converters:ViewStateToVisibilityConverter x:Key="ViewStateToVisibilityConverter" />
        <converters:ViewStateToBorderThicknessConverter x:Key="ViewStateToBorderThicknessConverter" />
        <converters:BooleanToEnabledConverter x:Key="BooleanToEnabledConverter" />
        <converters:QuickAccessIconSizeToDoubleConverter x:Key="QuickAccessIconSizeToDoubleConverter" />
        <!--#endregion //  CONVERTERS  //-->

        <!--//  COLORS  //-->
        <Color x:Key="ThemeTextColor" A="255" R="230" G="230" B="230" />
        <Color x:Key="ThemeHighEmphasisTextColor" A="255" R="222" G="222" B="222" />
        <Color x:Key="ThemeMediumEmphasisTextColor" A="255" R="153" G="153" B="153" />
        <Color x:Key="ThemeDisabledTextColor" A="255" R="97" G="97" B="97" />
        <Color x:Key="ThemeBorderColor" A="255" R="77" G="77" B="77" />
        <Color x:Key="ThemeTitleBarLogoColor" A="255" R="0" G="191" B="255" />
        <Color x:Key="MouseOverGlyphColor" A="255" R="000" G="191" B="255" />
        <Color x:Key="PressedGlyphColor" A="255" R="030" G="144" B="255" />
        <Color x:Key="ActiveSelectedGlyphColor" A="255" R="255" G="103" B="051" />
        <Color x:Key="InactiveSelectedGlyphColor" A="255" R="255" G="160" B="128" />

        <!--//  SOLID COLOR BRUSHES  //-->
        <SolidColorBrush x:Key="ThemeTextBrush" Color="{StaticResource ThemeTextColor}" />
        <SolidColorBrush x:Key="ThemeHighEmphasisTextBrush" Color="{StaticResource ThemeHighEmphasisTextColor}" />
        <SolidColorBrush x:Key="ThemeMediumEmphasisTextBrush" Color="{StaticResource ThemeMediumEmphasisTextColor}" />
        <SolidColorBrush x:Key="ThemeDisabledTextBrush" Color="{StaticResource ThemeDisabledTextColor}" />
        <SolidColorBrush x:Key="ThemeBorderBrush" Color="{StaticResource ThemeBorderColor}" />
        <SolidColorBrush x:Key="ThemeTitleBarLogoBrush" Color="{StaticResource ThemeTitleBarLogoColor}" />
        <SolidColorBrush x:Key="MouseOverGlyphBrush" Color="{StaticResource MouseOverGlyphColor}" />
        <SolidColorBrush x:Key="PressedGlyphBrush" Color="{StaticResource PressedGlyphColor}" />
        <SolidColorBrush x:Key="ActiveSelectedGlyphBrush" Color="{StaticResource ActiveSelectedGlyphColor}" />
        <SolidColorBrush x:Key="InactiveSelectedGlyphBrush" Color="{StaticResource InactiveSelectedGlyphColor}" />

        <Color x:Key="ButtonAppMenuMouseOverBackgroundColor" A="80" R="173" G="216" B="230" />
        <Color x:Key="ButtonAppMenuMouseOverBorderColor" A="200" R="0" G="206" B="209" />
        
        <!--#region //  TITLE BAR MENU STYLES  //-->
        <SolidColorBrush x:Key="Menu.Static.Background" Color="#FF444444"/>
        <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999"/>
        <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FFDCDCDC"/>
        <SolidColorBrush x:Key="Menu.Static.Separator" Color="#FFD7D7D7"/>
        <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>
        <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
        <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
        <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
        <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
        <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>

        <Style TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
            <Setter Property="ClickMode" Value="Hover"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="templateRoot"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="Center"
                                              Margin="6"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer,
                                            TypeInTargetAssembly={x:Type FrameworkElement}}"
               BasedOn="{x:Null}"
               TargetType="{x:Type ScrollViewer}">
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Hidden"/>
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Column="0" Grid.Row="1">
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}"
                                                        Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}"
                                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                          Grid.Column="0"
                                          Focusable="false"
                                          Grid.Row="0"
                                          Style="{StaticResource MenuScrollButton}">
                                <RepeatButton.Visibility>
                                    <MultiBinding ConverterParameter="0"
                                                  Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                                  FallbackValue="Visibility.Collapsed">
                                        <Binding Path="ComputedVerticalScrollBarVisibility"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Data="{StaticResource UpArrow}"
                                      Fill="{StaticResource Menu.Static.Foreground}"/>
                            </RepeatButton>
                            <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}"
                                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                          Grid.Column="0"
                                          Focusable="false"
                                          Grid.Row="2"
                                          Style="{StaticResource MenuScrollButton}">
                                <RepeatButton.Visibility>
                                    <MultiBinding ConverterParameter="100"
                                                  Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                                  FallbackValue="Visibility.Collapsed">
                                        <Binding Path="ComputedVerticalScrollBarVisibility"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Data="{StaticResource DownArrow}"
                                      Fill="{StaticResource Menu.Static.Foreground}"/>
                            </RepeatButton>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey,
                                                      TypeInTargetAssembly={x:Type MenuItem}}"
                         TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                                      ContentSource="Icon"
                                      HorizontalAlignment="Center"
                                      Height="16"
                                      Margin="3"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="Center"
                                      Width="16"/>
                    <Path x:Name="GlyphPanel"
                          Data="{StaticResource Checkmark}"
                          FlowDirection="LeftToRight"
                          Fill="{StaticResource Menu.Static.Foreground}"
                          Margin="3"
                          VerticalAlignment="Center"
                          Visibility="Collapsed"/>
                    <ContentPresenter x:Name="headerPresenter"
                                      TextBlock.Foreground="{TemplateBinding Foreground}"
                                      ContentSource="Header"
                                      Grid.Column="1"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon"
                         Value="{x:Null}">
                    <Setter Property="Visibility"
                            TargetName="Icon"
                            Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="true">
                    <Setter Property="Visibility"
                            TargetName="GlyphPanel"
                            Value="Visible"/>
                    <Setter Property="Visibility"
                            TargetName="Icon"
                            Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted"
                         Value="True">
                    <Setter Property="Background"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="TextElement.Foreground"
                            TargetName="templateRoot"
                            Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill"
                            TargetName="GlyphPanel"
                            Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted"
                                   Value="True"/>
                        <Condition Property="IsEnabled"
                                   Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey,
                                                      TypeInTargetAssembly={x:Type MenuItem}}"
                         TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <ContentPresenter x:Name="Icon"
                                      ContentSource="Icon"
                                      HorizontalAlignment="Center"
                                      Height="16"
                                      Margin="3"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="Center"
                                      Width="16"/>
                    <Path x:Name="GlyphPanel"
                          Data="{StaticResource Checkmark}"
                          FlowDirection="LeftToRight"
                          Fill="{TemplateBinding Foreground}"
                          Margin="3"
                          VerticalAlignment="Center"
                          Visibility="Collapsed"/>
                    <Border x:Name="headerContainer"
                            Grid.Column="1">
                        <ContentPresenter x:Name="headerPresenter"
                                          ContentSource="Header"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>

                    <Popup x:Name="PART_Popup"
                           AllowsTransparency="true"
                           Focusable="false"
                           IsOpen="{Binding IsSubmenuOpen,
                                            RelativeSource={RelativeSource TemplatedParent}}"
                           Placement="Bottom"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                           PlacementTarget="{Binding ElementName=templateRoot}">
                        <Border x:Name="SubMenuBorder"
                                Background="{StaticResource Menu.Static.Background}"
                                BorderBrush="{StaticResource Menu.Static.Border}"
                                BorderThickness="1"
                                Padding="2"
                                CornerRadius="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer"
                                          Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                                        TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left"
                                            Height="0"
                                            VerticalAlignment="Top"
                                            Width="0">
                                        <Rectangle x:Name="OpaqueRect"
                                                   Fill="{Binding Background,
                                                                  ElementName=SubMenuBorder}"
                                                   Height="{Binding ActualHeight,
                                                                    ElementName=SubMenuBorder}"
                                                   Width="{Binding ActualWidth,
                                                                   ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <!--<Rectangle Fill="{StaticResource Menu.Static.Separator}"
                                               HorizontalAlignment="Left"
                                               Margin="29,2,0,2"
                                               Width="1"/>-->
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    Grid.IsSharedSizeScope="true"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation"
                         Value="true">
                    <Setter Property="PopupAnimation"
                            TargetName="PART_Popup"
                            Value="None"/>
                </Trigger>
                <Trigger Property="Icon"
                         Value="{x:Null}">
                    <Setter Property="Visibility"
                            TargetName="Icon"
                            Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="true">
                    <Setter Property="Visibility"
                            TargetName="GlyphPanel"
                            Value="Visible"/>
                    <Setter Property="Visibility"
                            TargetName="Icon"
                            Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <!--<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>-->
                    <Setter TargetName="headerPresenter"
                            Property="TextBlock.Foreground"
                            Value="DodgerBlue" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                    <Setter Property="Canvas.Top"
                            TargetName="OpaqueRect"
                            Value="{Binding VerticalOffset,
                                            ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left"
                            TargetName="OpaqueRect"
                            Value="{Binding HorizontalOffset,
                                            ElementName=SubMenuScrollViewer}"/>
                </Trigger>
                <Trigger SourceName="headerContainer"
                         Property="IsMouseOver"
                         Value="True">
                    <Setter TargetName="headerPresenter"
                            Property="TextBlock.Foreground"
                            Value="DeepSkyBlue" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter TargetName="headerPresenter"
                            Property="TextBlock.Foreground"
                            Value="DodgerBlue" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey,
                                                      TypeInTargetAssembly={x:Type MenuItem}}"
                         TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Height="22"
                    SnapsToDevicePixels="true">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22"
                                          SharedSizeGroup="MenuItemIconColumnGroup"
                                          Width="Auto"/>
                        <ColumnDefinition Width="13"/> <!-- Spacer between glyph and text -->
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup"
                                          Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                                      ContentSource="Icon"
                                      HorizontalAlignment="Center"
                                      Height="16"
                                      Margin="3"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="Center"
                                      Width="16"/>
                    <Border x:Name="GlyphPanel"
                            Background="{StaticResource MenuItem.Selected.Background}"
                            BorderBrush="{StaticResource MenuItem.Selected.Border}"
                            BorderThickness="1"
                            ClipToBounds="False"
                            HorizontalAlignment="Center"
                            Height="22"
                            Margin="-1,0,0,0"
                            VerticalAlignment="Center"
                            Visibility="Hidden"
                            Width="22">
                        <Path x:Name="Glyph"
                              Data="{StaticResource Checkmark}"
                              FlowDirection="LeftToRight"
                              Fill="{StaticResource Menu.Static.Foreground}"
                              Height="11"
                              Width="10"/>
                    </Border>
                    <Border x:Name="headerContainer"
                            Grid.Column="2">
                        <ContentPresenter x:Name="headerPresenter"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          ContentSource="Header"
                                          HorizontalAlignment="Left"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <TextBlock x:Name="menuGestureText"
                               Grid.Column="4"
                               Margin="{TemplateBinding Padding}"
                               Opacity="0.7"
                               Text="{TemplateBinding InputGestureText}"
                               VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon"
                         Value="{x:Null}">
                    <Setter Property="Visibility"
                            TargetName="Icon"
                            Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Visibility"
                            TargetName="GlyphPanel"
                            Value="Visible"/>
                    <Setter Property="Visibility"
                            TargetName="Icon"
                            Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted"
                         Value="True">
                    <!--<Setter Property="Background"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Border}"/>-->
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="TextElement.Foreground"
                            TargetName="templateRoot"
                            Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill"
                            TargetName="Glyph"
                            Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger SourceName="headerContainer"
                         Property="IsMouseOver"
                         Value="True">
                    <Setter TargetName="headerPresenter"
                            Property="TextBlock.Foreground"
                            Value="DeepSkyBlue" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter TargetName="headerPresenter"
                            Property="TextBlock.Foreground"
                            Value="DodgerBlue" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted"
                                   Value="True"/>
                        <Condition Property="IsEnabled"
                                   Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Height="22" SnapsToDevicePixels="true">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Border x:Name="GlyphPanel" Background="{StaticResource MenuItem.Highlight.Background}" BorderBrush="{StaticResource MenuItem.Highlight.Border}" BorderThickness="1" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
                        <Path x:Name="Glyph" Data="{DynamicResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Height="11" Width="9"/>
                    </Border>
                    <Border x:Name="headerContainer" Grid.Column="2">
                        <ContentPresenter x:Name="headerPresenter" TextBlock.Foreground="Gainsboro" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </Border>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                    <Path x:Name="RightArrow" Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{StaticResource Menu.Static.Foreground}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
                        <Border x:Name="SubMenuBorder" Background="{StaticResource Menu.Static.Background}" BorderBrush="{StaticResource Menu.Static.Border}" BorderThickness="1" Padding="2" CornerRadius="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <!--<Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>-->
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="RightArrow" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
                <Trigger SourceName="headerContainer"
                         Property="IsMouseOver"
                         Value="True">
                    <Setter TargetName="headerPresenter"
                            Property="TextBlock.Foreground"
                            Value="DeepSkyBlue" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter TargetName="headerPresenter"
                            Property="TextBlock.Foreground"
                            Value="DodgerBlue" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment"
                    Value="{Binding HorizontalContentAlignment,
                                    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment"
                    Value="{Binding VerticalContentAlignment,
                                    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background"
                    Value="Transparent"/>
            <Setter Property="BorderBrush"
                    Value="Transparent"/>
            <Setter Property="BorderThickness"
                    Value="1"/>
            <Setter Property="ScrollViewer.PanningMode"
                    Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled"
                    Value="False"/>
            <Setter Property="Template"
                    Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey,
                                                                  TypeInTargetAssembly={x:Type MenuItem}}}"/>
            <Style.Triggers>
                <Trigger Property="Role"
                         Value="TopLevelHeader">
                    <Setter Property="Background"
                            Value="Transparent"/>
                    <Setter Property="BorderBrush"
                            Value="Transparent"/>
                    <Setter Property="Foreground"
                            Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template"
                            Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey,
                                                                          TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding"
                            Value="6,0"/>
                </Trigger>
                <Trigger Property="Role"
                         Value="TopLevelItem">
                    <Setter Property="Background"
                            Value="{StaticResource Menu.Static.Background}"/>
                    <Setter Property="BorderBrush"
                            Value="{StaticResource Menu.Static.Border}"/>
                    <Setter Property="Foreground"
                            Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template"
                            Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey,
                                                                          TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding"
                            Value="6,0"/>
                </Trigger>
                <Trigger Property="Role"
                         Value="SubmenuHeader">
                    <Setter Property="Template"
                            Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey,
                                                                          TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>

                <!--<MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition  Property="IsMouseOver"
                                    Value="True"/>
                    <Condition Property="Role"
                               Value="SubmenuHeader" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Foreground"
                                Value="DeepSkyBlue" />
                        <Setter Property="BorderBrush"
                                Value="Transparent" />
                        <Setter Property="Background"
                                Value="Transparent" />
                    </MultiTrigger.Setters>
                </MultiTrigger>-->
            </Style.Triggers>
        </Style>
        <!--#endregion //  TITLE BAR MENU STYLES  //-->
        
        <!--#region //  TITLE BAR BUTTON STYLES  //-->
        <Style x:Key="TitleBarButtonMinimizeWindowStyle" TargetType="Button">
            <Setter Property="SnapsToDevicePixels" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisualStyle}" />-->
            <Setter Property="Width" Value="46" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Foreground" Value="{DynamicResource ThemeTextBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Boundary" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <!--<VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.12"  />
                                        <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    </VisualStateGroup.Transitions>-->
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="DarkGray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <!--<ContentPresenter RecognizesAccessKey="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <ContentPresenter.Content>-->
                                    <Path Width="10" Height="10" ClipToBounds="True" Data="M 0,5.5 H 10" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" />
                                <!--</ContentPresenter.Content>
                            </ContentPresenter>-->
                        </Border>
                        <ControlTemplate.Triggers />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TitleBarButtonMaximizeWindowStyle" TargetType="Button">
            <Setter Property="SnapsToDevicePixels" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisualStyle}" />-->
            <Setter Property="Width" Value="46" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Foreground" Value="{DynamicResource ThemeTextBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Boundary" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <!--<VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.12"  />
                                        <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    </VisualStateGroup.Transitions>-->
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="DarkGray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <!--<ContentPresenter RecognizesAccessKey="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <ContentPresenter.Content>-->
                                    <Rectangle Width="10" Height="10" ClipToBounds="True" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" />
                                <!--</ContentPresenter.Content>
                            </ContentPresenter>-->
                        </Border>
                        <ControlTemplate.Triggers />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TitleBarButtonRestoreWindowStyle" TargetType="Button">
            <Setter Property="SnapsToDevicePixels" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisualStyle}" />-->
            <Setter Property="Width" Value="46" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Foreground" Value="{DynamicResource ThemeTextBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Boundary" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <!--<VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.12"  />
                                        <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    </VisualStateGroup.Transitions>-->
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="DarkGray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <!--<ContentPresenter RecognizesAccessKey="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <ContentPresenter.Content>-->
                                    <Path Width="10" Height="10" ClipToBounds="True" Data="M 0.5,2.5 V 9.5 H 7.5 V 2.5 H 0.5 M 2.5,2.5 2.5,0.5 9.5,0.5 9.5,7.5 7.5,7.5" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" StrokeStartLineCap="Square" StrokeEndLineCap="Square" />
                                <!--</ContentPresenter.Content>
                            </ContentPresenter>-->
                        </Border>
                        <ControlTemplate.Triggers />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TitleBarButtonCloseAppStyle" TargetType="Button">
            <Setter Property="SnapsToDevicePixels" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisualStyle}" />-->
            <Setter Property="Width" Value="46" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Foreground" Value="{DynamicResource ThemeTextBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Boundary" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <!--<VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.12"  />
                                        <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    </VisualStateGroup.Transitions>-->
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="Red" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="DarkRed" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <!--<ContentPresenter RecognizesAccessKey="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <ContentPresenter.Content>-->
                                    <Path Width="10" Height="10" ClipToBounds="True" Data="M 0,0 10,10 M 0,10 10,0" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" />
                                <!--</ContentPresenter.Content>
                            </ContentPresenter>-->
                        </Border>
                        <ControlTemplate.Triggers />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion //  TITLE BAR BUTTON STYLES  //-->
        
        <!--#region //  QUICK ACCESS BAR BUTTON STYLES  //-->
        <Style x:Key="QuickAccessButtonLockDatabaseStyle"
               TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center">
                                    <Canvas Width="24"
                                            Height="24">
                                        <Path x:Name="LockedViewGlyph"
                                              Data="M12,17C10.89,17 10,16.1 10,15C10,13.89 10.89,13 12,13A2,2 0 0,1 14,15A2,2 0 0,1 12,17
                                                    M18,20V10H6V20H18
                                                    M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10C4,8.89 4.89,8 6,8H7V6A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18
                                                    M12,3A3,3 0 0,0 9,6V8H15V6A3,3 0 0,0 12,3Z" />
                                    </Canvas>
                                </Viewbox>
                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Content="Lock Database"
                                       Visibility="{Binding ButtonLockDatabaseTextVisibility}"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="True">
                                <Setter TargetName="LockedViewGlyph"
                                        Property="Fill"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="LockedViewGlyph"
                                        Property="Fill"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter TargetName="LockedViewGlyph"
                                        Property="Fill"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed"
                                     Value="True">
                                <Setter TargetName="LockedViewGlyph"
                                        Property="Fill"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QuickAccessButtonAddRecordStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--<Setter Property="Width"
                    Value="{Binding RelativeSource={RelativeSource Self},Path=ActualHeight}" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}">
                                    <Canvas Width="24"
                                            Height="24">
                                        <Path x:Name="AddRecordGlyph"
                                              Data="M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20
                                                    M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2
                                                    M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z" />
                                    </Canvas>
                                </Viewbox>

                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       Content="Add Entry"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Visibility="{Binding ButtonAddRecordTextVisibility}"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="AddRecordGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="AddRecordGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="AddRecordGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="AddRecordGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QuickAccessButtonEditRecordStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--<Setter Property="Width"
                    Value="{Binding RelativeSource={RelativeSource Self},Path=ActualHeight}" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                
                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}">
                                    <Canvas Width="24"
                                            Height="24">
                                        <Path x:Name="EditRecordGlyph"
                                              Data="M7,14.94L13.06,8.88L15.12,10.94L9.06,17H7V14.94
                                                    M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20
                                                    M16.7,9.35L15.7,10.35L13.65,8.3L14.65,7.3C14.86,7.08 15.21,7.08 15.42,7.3L16.7,8.58C16.92,8.79 16.92,9.14 16.7,9.35
                                                    M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2" />
                                    </Canvas>
                                </Viewbox>

                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       Content="Edit Entry"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Visibility="{Binding ButtonEditRecordTextVisibility}"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="EditRecordGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="EditRecordGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="EditRecordGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="EditRecordGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QuickAccessButtonDeleteRecordStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--<Setter Property="Width"
                    Value="{Binding RelativeSource={RelativeSource Self},Path=ActualHeight}" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}">
                                    <Canvas Width="24"
                                            Height="24">
                                        <Path x:Name="DeleteRecordGlyph"
                                              Data="M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2
                                              M12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4
                                              M16,10V17A1,1 0 0,1 15,18H9A1,1 0 0,1 8,17V10H16
                                              M13.5,6L14.5,7H17V9H7V7H9.5L10.5,6H13.5Z" />
                                    </Canvas>
                                </Viewbox>

                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Content="Delete Entry"
                                       Visibility="{Binding ButtonDeleteRecordTextVisibility}"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="DeleteRecordGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="DeleteRecordGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="DeleteRecordGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="DeleteRecordGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style x:Key="QuickAccessButtonGeneratePasswordStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Canvas Grid.Row="0" Width="24" Height="24">
                                    <Path x:Name="GeneratePasswordGlyph" Data="M19 5V19H5V5H19M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3M12 10.5C11.2 10.5 10.5 11.2 10.5 12S11.2 13.5 12 13.5 13.5 12.8 13.5 12 12.8 10.5 12 10.5M7.5 6C6.7 6 6 6.7 6 7.5S6.7 9 7.5 9 9 8.3 9 7.5 8.3 6 7.5 6M16.5 15C15.7 15 15 15.7 15 16.5C15 17.3 15.7 18 16.5 18C17.3 18 18 17.3 18 16.5C18 15.7 17.3 15 16.5 15Z" />
                                </Canvas>
                                <Label Grid.Row="0" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="GeneratePasswordGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="GeneratePasswordGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="GeneratePasswordGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="GeneratePasswordGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <Style x:Key="QuickAccessButtonAppSettingsStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}">
                                    <Canvas Width="24"
                                            Height="24">
                                        <Path x:Name="AppSettingsGlyph"
                                              Data="M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8
                                                    M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10
                                                    M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10
                                                    M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z" />
                                    </Canvas>
                                </Viewbox>

                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Content="Settings"
                                       Visibility="{Binding ButtonAppSettingsTextVisibility}"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QuickAccessButtonUsernameToClipboardStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}">
                                    <Canvas Width="24"
                                            Height="24">
                                        <Path x:Name="AppSettingsGlyph"
                                              Data="M18 16H14V18H18V20L21 17L18 14V16
                                                    M11 4C8.8 4 7 5.8 7 8S8.8 12 11 12 15 10.2 15 8 13.2 4 11 4
                                                    M11 6C12.1 6 13 6.9 13 8S12.1 10 11 10 9 9.1 9 8 9.9 6 11 6
                                                    M11 13C8.3 13 3 14.3 3 17V20H12.5C12.2 19.4 12.1 18.8 12 18.1H4.9V17C4.9 16.4 8 14.9 11 14.9C11.5 14.9 12 15 12.5 15C12.8 14.4 13.1 13.8 13.6 13.3C12.6 13.1 11.7 13 11 13" />
                                    </Canvas>
                                </Viewbox>

                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Content="Copy Username"
                                       Visibility="{Binding ButtonUsernameToclipboardTextVisibility}" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QuickAccessButtonPasswordToClipboardStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}">
                                    <Canvas Width="24"
                                            Height="24">
                                        <Path x:Name="AppSettingsGlyph"
                                              Data="M11.7 6C11.1 4.2 9.4 3 7.5 3C5 3 3 5 3 7.5S5 12 7.5 12C9.5 12 11.1 10.8 11.7 9H15V12H18V9H21V6H11.7
                                                    M7.5 9C6.7 9 6 8.3 6 7.5S6.7 6 7.5 6 9 6.7 9 7.5 8.3 9 7.5 9
                                                    M13 21V19H8V17H13V15L16 18L13 21" />
                                    </Canvas>
                                </Viewbox>

                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Content="Copy Password"
                                       Visibility="{Binding ButtonPasswordToClipboardTextVisibility}" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QuickAccessButtonUrlToClipboardStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}">
                                    <Canvas Width="24"
                                            Height="24">
                                        <Path x:Name="AppSettingsGlyph"
                                              Data="M19 21V19H15V17H19V15L22 18L19 21
                                                    M12 18C12 15.8 13.2 13.9 15 12.8C14.9 12.3 14.5 12 14 12H8V10H10C10.6 10 11 9.6 11 9V7H13C14.1 7 15 6.1 15 5V4.6C17.9 5.8 20 8.6 20 12V12.3C20.7 12.5 21.3 12.9 21.9 13.4C22 13 22 12.5 22 12C22 6.5 17.5 2 12 2S2 6.5 2 12 6.5 22 12 22C12.5 22 13 22 13.4 21.9C12.5 20.8 12 19.5 12 18
                                                    M11 19.9C7 19.4 4 16.1 4 12C4 11.4 4.1 10.8 4.2 10.2L9 15V16C9 17.1 9.9 18 11 18V19.9Z" />
                                    </Canvas>
                                </Viewbox>

                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Content="Copy URL"
                                       Visibility="{Binding ButtonUrlToClipboardTextVisibility}"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion //  QUICK ACCESS BAR BUTTON STYLES  //-->
    </Window.Resources>

    <Border BorderThickness="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}},
                                      Path=WindowState,
                                      Converter={StaticResource ViewStateToBorderThicknessConverter}}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--////  TITLE BAR  ////-->
            <Border Grid.Row="0"
                    Background="#333"
                    BorderBrush="#666"
                    BorderThickness="0 0 0 0"
                    TextBlock.FontSize="12">
                <Grid Height="32">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="32" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Viewbox Grid.Column="0"
                             Panel.ZIndex="0"
                             Width="16"
                             Height="16">
                        <Canvas Width="24"
                                Height="24">
                            <Path Fill="{StaticResource solidColorBrush-theme-blue}"
                                  Data="m 14 9.5 c -1.101607 0 -2 0.898393 -2 2 0 1.101607 0.898393 2 2 2 1.101607 0 2 -0.898393 2 -2 0 -1.101607 -0.898393 -2 -2 -2 z
                                        M 2 2.5 c -1.108 0 -2 0.892 -2 2 v 14 c 0 1.108 0.892 2 2 2 h 1 c 0 0.554 0.446 1 1 1 h 2 c 0.554 0 1 -0.446 1 -1 h 9 c 0 0.554 0.446 1 1 1 h 2 c 0.554 0 1 -0.446 1 -1 h 2 c 1.108 0 2 -0.892 2 -2 v -14 c 0 -1.108 -0.892 -2 -2 -2 z
                                        m 12 4 c 2.75846 0 5 2.2415402 5 5 0 2.75846 -2.24154 5 -5 5 -2.75846 0 -5 -2.24154 -5 -5 0 -2.7584598 2.24154 -5 5 -5 z
                                        M 5 8 c 0.554 0 1 0.446 1 1 v 5 C 6 14.554 5.554 15 5 15 4.446 15 4 14.554 4 14 V 9 C 4 8.446 4.446 8 5 8 Z
                                        m 9 0 C 13.830428 8 13.663192 8.013692 13.5 8.037109 V 8.5429688 C 13.662783 8.5157454 13.829351 8.5 14 8.5 c 0.170649 0 0.337217 0.015745 0.5 0.042969 V 8.0371094 C 14.336808 8.013692 14.169572 8 14 8 Z
                                        m -2.095703 0.6972656 c -0.267957 0.200841 -0.50619 0.4390747 -0.707031 0.7070313 l 0.357422 0.3574219 c 0.19457 -0.2735723 0.433459 -0.5124606 0.707031 -0.7070313 z
                                        m 4.191406 0 -0.357422 0.3574219 c 0.273572 0.1945707 0.512461 0.433459 0.707031 0.7070313 L 16.802734 9.4042969 C 16.601893 9.1363403 16.36366 8.8981066 16.095703 8.6972656 Z
                                        M 10.537109 11 C 10.513692 11.163192 10.5 11.330429 10.5 11.5 c 0 0.169572 0.01369 0.336808 0.03711 0.5 h 0.50586 C 11.015745 11.837217 11 11.670649 11 11.5 11 11.329351 11.01575 11.162783 11.04297 11 Z
                                        m 6.419922 0 C 16.984255 11.162783 17 11.329351 17 11.5 c 0 0.170649 -0.01574 0.337217 -0.04297 0.5 h 0.50586 C 17.486308 11.836808 17.5 11.669572 17.5 11.5 17.5 11.330429 17.48631 11.163192 17.46289 11 Z
                                        m -5.402343 2.238281 -0.357422 0.357422 c 0.200841 0.267957 0.439074 0.50619 0.707031 0.707031 l 0.357422 -0.357422 c -0.273572 -0.19457 -0.512461 -0.433459 -0.707031 -0.707031 z
                                        m 4.890624 0 c -0.19457 0.273572 -0.433459 0.512461 -0.707031 0.707031 l 0.357422 0.357422 c 0.267957 -0.200841 0.50619 -0.439074 0.707031 -0.707031 z
                                        M 13.5 14.457031 v 0.50586 C 13.663192 14.986308 13.830428 15 14 15 c 0.169572 0 0.336808 -0.01369 0.5 -0.03711 V 14.45703 C 14.337217 14.484255 14.170649 14.5 14 14.5 c -0.170649 0 -0.337217 -0.01575 -0.5 -0.04297 z" />
                        </Canvas>
                    </Viewbox>

                    <Menu Grid.Column="1"
                          Panel.ZIndex="0"
                          WindowChrome.IsHitTestVisibleInChrome="True"
                          Background="Transparent"
                          Foreground="{StaticResource ThemeTextBrush}"
                          VerticalAlignment="Center">
                        <MenuItem Header="File">
                            <MenuItem Header="Item1" />
                        </MenuItem>
                        <MenuItem Header="Edit">
                            <MenuItem Header="Item1" />
                            <MenuItem Header="Item2" />
                            <MenuItem Header="Item3">
                                <MenuItem Header="subitem 1" />
                                <MenuItem Header="subitem 2" />
                                <MenuItem Header="subitem 3" />
                                <MenuItem Header="subitem 4" />
                                <MenuItem Header="subitem 5" />
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="Item4" />
                            <MenuItem Header="Item5" />
                            <MenuItem Header="Item6" />
                            <Separator />
                            <MenuItem Header="Item7" />
                        </MenuItem>
                        <MenuItem Header="About">
                            <MenuItem Header="Item1" />
                        </MenuItem>
                    </Menu>
                    <!--<ToggleButton x:Name="toggleButtonAppMenu"
                                  Grid.Column="1"
                                  Panel.ZIndex="0"
                                  WindowChrome.IsHitTestVisibleInChrome="True"
                                  Width="32"
                                  Height="32"
                                  Foreground="{StaticResource solidColorBrush-theme-foreground}"
                                  Background="Transparent"
                                  BorderBrush="Transparent"
                                  BorderThickness="0">
                        <Viewbox Width="24"
                                 Height="24">
                            <Canvas Width="24"
                                    Height="24">
                                <Path x:Name="glyphTopLine"
                                      Fill="{StaticResource solidColorBrush-theme-foreground}"
                                      Data="m 4,6 h 16 c 0.554,0 1,0.446 1,1 0,0.554 -0.446,1 -1,1 H 4 C 3.446,8 3,7.554 3,7 3,6.446 3.446,6 4,6 Z" />
                                <Path x:Name="glyphMiddleLine"
                                      Fill="{StaticResource solidColorBrush-theme-foreground}"
                                      Data="m 4,11 h 16 c 0.554,0 1,0.446 1,1 0,0.554 -0.446,1 -1,1 H 4 C 3.446,13 3,12.554 3,12 3,11.446 3.446,11 4,11 Z" />
                                <Path x:Name="glyphBottomLine"
                                      Fill="{StaticResource solidColorBrush-theme-foreground}"
                                      Data="m 4,16 h 16 c 0.554,0 1,0.446 1,1 0,0.554 -0.446,1 -1,1 H 4 C 3.446,18 3,17.554 3,17 3,16.446 3.446,16 4,16 Z" />
                                -->
                    <!--<Path x:Name="glyphTopLine"
                                              Stroke="{StaticResource solidColorBrush-theme-foreground}"
                                              StrokeThickness="2.5"
                                              StrokeStartLineCap="Round"
                                              StrokeEndLineCap="Round"
                                              Data="M 4,6 H 20" />
                                        <Path x:Name="glyphMiddleLine"
                                              Stroke="{StaticResource solidColorBrush-theme-foreground}"
                                              StrokeThickness="2.5"
                                              StrokeStartLineCap="Round"
                                              StrokeEndLineCap="Round"
                                              Data="M 4,12 H 20" />
                                        <Path x:Name="glyphBottomLine"
                                              Stroke="{StaticResource solidColorBrush-theme-foreground}"
                                              StrokeThickness="2.5"
                                              StrokeStartLineCap="Round"
                                              StrokeEndLineCap="Round"
                                              Data="M 4,18 H 20" />-->
                    <!--
                            </Canvas>
                        </Viewbox>
                    </ToggleButton>
                    <Popup IsOpen="{Binding ElementName=toggleButtonAppMenu,
                                            Path=IsChecked}"
                           StaysOpen="False"
                           PlacementTarget="{Binding ElementName=toggleButtonAppMenu}"
                           Placement="Bottom">
                        <Border>-->
                            <!--<Menu x:Name="menuApplicationMenu"
                                  Grid.Column="1"
                                  WindowChrome.IsHitTestVisibleInChrome="True"
                                  Width="32"
                                  Height="32"
                                  Foreground="{StaticResource solidColorBrush-theme-foreground}"
                                  Background="Transparent">
                                <Menu.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel Orientation="Vertical" />
                                    </ItemsPanelTemplate>
                                </Menu.ItemsPanel>
                                
                                <MenuItem x:Name="menuItemMain"
                                          Padding="3">
                                    <MenuItem.Header>
                                        <Viewbox Width="24"
                                                 Height="24">
                                            <Canvas Width="24"
                                                    Height="24">
                                                <Path x:Name="glyphTopLine"
                                                      Fill="{StaticResource solidColorBrush-theme-foreground}"
                                                      Data="m 4,6 h 16 c 0.554,0 1,0.446 1,1 0,0.554 -0.446,1 -1,1 H 4 C 3.446,8 3,7.554 3,7 3,6.446 3.446,6 4,6 Z" />
                                                <Path x:Name="glyphMiddleLine"
                                                      Fill="{StaticResource solidColorBrush-theme-foreground}"
                                                      Data="m 4,11 h 16 c 0.554,0 1,0.446 1,1 0,0.554 -0.446,1 -1,1 H 4 C 3.446,13 3,12.554 3,12 3,11.446 3.446,11 4,11 Z" />
                                                <Path x:Name="glyphBottomLine"
                                                      Fill="{StaticResource solidColorBrush-theme-foreground}"
                                                      Data="m 4,16 h 16 c 0.554,0 1,0.446 1,1 0,0.554 -0.446,1 -1,1 H 4 C 3.446,18 3,17.554 3,17 3,16.446 3.446,16 4,16 Z" />
                                            </Canvas>
                                        </Viewbox>
                                    </MenuItem.Header>
                                    
                                    <MenuItem Header="item 1" IsCheckable="True" >
                                        <MenuItem Header="subitem 1"  />
                                        <MenuItem Header="subitem 2"  />
                                    </MenuItem>
                                    <MenuItem Header="item 2" >
                                        <MenuItem Header="subitem 1"  />
                                        <MenuItem Header="subitem 2"  />
                                    </MenuItem>
                                    <MenuItem Header="item 3" >
                                        <MenuItem Header="subitem 1"  />
                                        <MenuItem Header="subitem 2"  />
                                    </MenuItem>
                                    <MenuItem Header="item 4" >
                                        <MenuItem Header="subitem 1"  />
                                        <MenuItem Header="subitem 2"  />
                                    </MenuItem>
                                    <MenuItem Header="item 5" >
                                        <MenuItem Header="subitem 1"  />
                                        <MenuItem Header="subitem 2"  />
                                    </MenuItem>
                                </MenuItem>
                            </Menu>-->
                        <!--</Border>
                    </Popup>-->

                    <TextBlock Grid.Column="0"
                               Grid.ColumnSpan="7"
                               Panel.ZIndex="0"
                               Foreground="{StaticResource ThemeTextBrush}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Text="{Binding ElementName=WinMain,
                                              Path=Title}" />

                    <StackPanel Grid.Column="3"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                Panel.ZIndex="0"
                                Orientation="Horizontal"
                                Margin="24 0" />

                    <Button Grid.Column="4"
                            Panel.ZIndex="0"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            Visibility="Visible"
                            Style="{StaticResource TitleBarButtonMinimizeWindowStyle}"
                            Command="{Binding MinimizeWindowCommand}"/>
                    <Button Grid.Column="5"
                            Panel.ZIndex="0"
                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}},
                                                 Path=WindowState,
                                                 Converter={StaticResource ViewStateToVisibilityConverter},
                                                 ConverterParameter='BTN_MAX'}"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            Style="{StaticResource TitleBarButtonMaximizeWindowStyle}"
                            Command="{Binding MaximizeRestoreWindowCommand}" />
                    <Button Grid.Column="5"
                            Panel.ZIndex="0"
                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}},
                                                 Path=WindowState,
                                                 Converter={StaticResource ViewStateToVisibilityConverter},
                                                 ConverterParameter='BTN_RSTR'}"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            Style="{StaticResource TitleBarButtonRestoreWindowStyle}"
                            Command="{Binding MaximizeRestoreWindowCommand}" />
                    <Button Grid.Column="6"
                            Panel.ZIndex="0"
                            Visibility="Visible"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            Style="{StaticResource TitleBarButtonCloseAppStyle}"
                            Command="{Binding CloseWindowCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                </Grid>
            </Border>

            <!--////  QUICK ACCESS BAR  ////-->
            <Border Grid.Row="1"
                    Background="#333"
                    BorderBrush="#666"
                    BorderThickness="0 0 0 0"
                    Margin="0"
                    Padding="4 4"
                    Height="Auto">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal">
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                IsEnabled="{Binding ButtonLockDatabaseIsEnabled}"
                                Style="{StaticResource QuickAccessButtonLockDatabaseStyle}"
                                Command="{Binding LockDatabaseCommand}"/>
                        <Separator Grid.Row="0"
                                   Grid.Column="1"
                                   Width="1"
                                   Background="#777"
                                   Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                                   Margin="4,3"/>
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                IsEnabled="{Binding ButtonAddRecordIsEnabled}"
                                Style="{StaticResource QuickAccessButtonAddRecordStyle}"
                                Command="{Binding AddRecordCommand}"/>
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                Margin="2 0"
                                IsEnabled="{Binding ButtonEditRecordIsEnabled}"
                                Style="{StaticResource QuickAccessButtonEditRecordStyle}"
                                Command="{Binding EditRecordCommand}"/>
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                IsEnabled="{Binding ButtonDeleteRecordIsEnabled}"
                                Style="{StaticResource QuickAccessButtonDeleteRecordStyle}"
                                Command="{Binding DeleteRecordCommand}"/>
                        <Separator Grid.Row="0"
                                   Grid.Column="1"
                                   Width="1"
                                   Background="#777"
                                   Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                                   Margin="4,3" />
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                IsEnabled="{Binding ButtonUsernameToClipboardIsEnabled}"
                                Style="{StaticResource QuickAccessButtonUsernameToClipboardStyle}"
                                Command="{Binding CopyUsernameToClipboardCommand}"/>
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                Margin="2 0"
                                IsEnabled="{Binding ButtonPasswordToClipboardIsEnabled}"
                                Style="{StaticResource QuickAccessButtonPasswordToClipboardStyle}"
                                Command="{Binding CopyPasswordToClipboardCommand}"/>
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                IsEnabled="{Binding ButtonUrlToClipboardIsEnabled}"
                                Style="{StaticResource QuickAccessButtonUrlToClipboardStyle}"
                                Command="{Binding CopyUrlToClipboardCommand}"/>
                        <Separator Grid.Row="0"
                                   Grid.Column="1"
                                   Width="1"
                                   Background="#777"
                                   Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                                   Margin="4,3" />
                        <!--<Button Grid.Row="0"
                                Grid.Column="0"
                                Margin="0 0 1 0"
                                IsEnabled="{Binding ButtonPasswordGeneratorIsEnabled}"
                                Style="{StaticResource QuickAccessButtonGeneratePasswordStyle}"
                                Command="{Binding GeneratePasswordCommand}"/>-->
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                Margin="1 0 0 0"
                                IsEnabled="{Binding ButtonAppSettingsIsEnabled}"
                                Style="{StaticResource QuickAccessButtonAppSettingsStyle}"
                                Command="{Binding AppSettingsCommand}"/>
                        <!--<Separator Grid.Row="0"
                                   Grid.Column="1"
                                   Width="1"
                                   Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                                   Margin="4,3" />-->
                    </StackPanel>

                    <!--<Grid Grid.Column="2"
                          Height="24"
                          Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="24" />
                        </Grid.ColumnDefinitions>

                        <Border Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Panel.ZIndex="0"
                                BorderBrush="#666"
                                BorderThickness="1"
                                Background="#383838"
                                CornerRadius="2" />
                        <ToggleButton Grid.Column="0"
                                      Panel.ZIndex="1"
                                      IsEnabled="False"
                                      Width="24"
                                      Height="24"
                                      VerticalContentAlignment="Center"
                                      HorizontalContentAlignment="Center"
                                      Background="Transparent"
                                      Foreground="Gainsboro"
                                      BorderBrush="Transparent"
                                      BorderThickness="0" />
                        <TextBox Grid.Column="1"
                                 Panel.ZIndex="2"
                                 IsEnabled="False"
                                 BorderBrush="Transparent"
                                 BorderThickness="0"
                                 Background="Transparent"
                                 Foreground="Gainsboro"
                                 VerticalContentAlignment="Center"
                                 HorizontalContentAlignment="Left"
                                 CaretBrush="Gainsboro" />
                        <ToggleButton Grid.Column="2"
                                      Panel.ZIndex="2"
                                      IsEnabled="False"
                                      Width="24"
                                      Height="24"
                                      VerticalContentAlignment="Center"
                                      HorizontalContentAlignment="Center"
                                      Background="Transparent"
                                      Foreground="Gainsboro"
                                      BorderBrush="Transparent"
                                      BorderThickness="0" />
                    </Grid>-->

                    <StackPanel Grid.Column="1"
                                Orientation="Horizontal">
                        <TextBlock Text="Timer Elapsed Seconds:"
                                   Foreground="White"
                                   VerticalAlignment="Center"
                                   Margin="12 0" />
                        <TextBlock x:Name="elapsedSecondsTimer"
                                   Foreground="White"
                                   VerticalAlignment="Center"
                                   Text="{Binding SecondsSinceLastAction}"/>
                    </StackPanel>
                </Grid>
            </Border>

            <!--////  BODY CONTENTS  ////-->
            <Border Grid.Row="2"
                    Padding="5"
                    Background="Transparent"
                    BorderBrush="#666"
                    BorderThickness="0">
                <ContentControl x:Name="viewPresenter"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                Content="{Binding SelectedViewModel}" />
            </Border>

            <!--////  STATUS BAR  ////-->
            <Border Grid.Row="3"
                    Height="Auto"
                    Background="#333"
                    BorderBrush="#666"
                    BorderThickness="0 0 0 0"
                    Visibility="{Binding WindowStatusBarVisibility}">
                <Grid Height="24"
                      Margin="4 0"
                      Visibility="{Binding WindowStatusBarContentGridVisibility}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0"
                                Orientation="Horizontal">
                        <Label Foreground="Gainsboro"
                               Padding="0"
                               Margin="0 0 6 0"
                               VerticalContentAlignment="Center"
                               Content="Groups:" />
                        <TextBlock VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Foreground="Gainsboro"
                                   Text="{Binding TotalGroupsInDatabase,
                                                  StringFormat={}{0:000}}"/>
                    </StackPanel>
                    <Separator Grid.Column="1"
                               Margin="6 2"
                               Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                               Visibility="Collapsed" />
                    <StackPanel Grid.Column="2"
                                Orientation="Horizontal">
                        <Label Foreground="Gainsboro"
                               Padding="0"
                               Margin="0 0 6 0"
                               VerticalContentAlignment="Center"
                               Content="Items:" />
                        <TextBlock VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Foreground="Gainsboro"
                                   Text="{Binding TotalRecordsInDatabase,
                                                  StringFormat={}{0:000}}"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </Border>
</Window>
