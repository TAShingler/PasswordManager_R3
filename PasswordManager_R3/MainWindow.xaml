<Window x:Class="PasswordManager_R3.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PasswordManager_R3"
        xmlns:converters="clr-namespace:PasswordManager_R3.Converters"
        xmlns:vm="clr-namespace:PasswordManager_R3.ViewModels"
        xmlns:views="clr-namespace:PasswordManager_R3.Views"
        mc:Ignorable="d"
        Title="Password LockBox"
        MinHeight="600"
        Height="720"
        MinWidth="800"
        Width="960"
        FontSize="14"
        SnapsToDevicePixels="True"
        TextOptions.TextFormattingMode="Display"
        Background="{StaticResource solidColorBrush-static-background}"
        WindowState="{Binding WinState}"
        x:Name="WinMain"
        Loaded="WinMain_Loaded">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding WindowActivatedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding WindowDeactivatedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewMouseDown">
            <i:InvokeCommandAction Command="{Binding WindowPreviewMouseDownCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewKeyDown">
            <i:InvokeCommandAction Command="{Binding WindowPreviewKeyDownCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <!--PreviewMouseDown="WinMain_PreviewMouseDown"
        Activated="WinMain_Activated"
        Deactivated="WinMain_Deactivated">-->

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="24"
                      CornerRadius="0"
                      GlassFrameThickness="7 0 7 7"
                      NonClientFrameEdges="None"
                      ResizeBorderThickness="7"
                      UseAeroCaptionButtons="True" />
    </WindowChrome.WindowChrome>
    <!--<WindowChrome.ResizeGripDirection>
        <ResizeGripDirection>Left</ResizeGripDirection>
    </WindowChrome.ResizeGripDirection>-->

    <Window.DataContext>
        <vm:MainWindow_ViewModel />
    </Window.DataContext>

    <Window.Resources>
        <!--//  DATA TEMPLATES FOR VIEWS  //-->
        <DataTemplate DataType="{x:Type vm:LockScreen_ViewModel}">
            <views:LockScreen_View />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:Database_ViewModel}">
            <views:Database_View />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:AddEditRecord_ViewModel}">
            <views:AddEditRecord_View />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:AddEditGroup_ViewModel}">
            <views:AddEditGroup_View />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:AppSettings_ViewModel}">
            <views:AppSettings_View />
        </DataTemplate>

        <!--#region //  CONVERTERS  //-->
        <converters:ViewStateToVisibilityConverter x:Key="ViewStateToVisibilityConverter" />
        <converters:ViewStateToBorderThicknessConverter x:Key="ViewStateToBorderThicknessConverter" />
        <converters:BooleanToEnabledConverter x:Key="BooleanToEnabledConverter" />
        <converters:QuickAccessIconSizeToDoubleConverter x:Key="QuickAccessIconSizeToDoubleConverter" />
        <!--#endregion //  CONVERTERS  //-->

        <!--//  COLORS  //-->
        <Color x:Key="ThemeTextColor" A="255" R="230" G="230" B="230" />
        <Color x:Key="ThemeHighEmphasisTextColor" A="255" R="222" G="222" B="222" />
        <Color x:Key="ThemeMediumEmphasisTextColor" A="255" R="153" G="153" B="153" />
        <Color x:Key="ThemeDisabledTextColor" A="255" R="97" G="97" B="97" />
        <Color x:Key="ThemeBorderColor" A="255" R="77" G="77" B="77" />
        <Color x:Key="ThemeTitleBarLogoColor" A="255" R="0" G="191" B="255" />
        <Color x:Key="MouseOverGlyphColor" A="255" R="000" G="191" B="255" />
        <Color x:Key="PressedGlyphColor" A="255" R="030" G="144" B="255" />
        <Color x:Key="ActiveSelectedGlyphColor" A="255" R="255" G="103" B="051" />
        <Color x:Key="InactiveSelectedGlyphColor" A="255" R="255" G="160" B="128" />

        <!--//  SOLID COLOR BRUSHES  //-->
        <SolidColorBrush x:Key="ThemeTextBrush" Color="{StaticResource ThemeTextColor}" />
        <SolidColorBrush x:Key="ThemeHighEmphasisTextBrush" Color="{StaticResource ThemeHighEmphasisTextColor}" />
        <SolidColorBrush x:Key="ThemeMediumEmphasisTextBrush" Color="{StaticResource ThemeMediumEmphasisTextColor}" />
        <SolidColorBrush x:Key="ThemeDisabledTextBrush" Color="{StaticResource ThemeDisabledTextColor}" />
        <SolidColorBrush x:Key="ThemeBorderBrush" Color="{StaticResource ThemeBorderColor}" />
        <SolidColorBrush x:Key="ThemeTitleBarLogoBrush" Color="{StaticResource ThemeTitleBarLogoColor}" />
        <SolidColorBrush x:Key="MouseOverGlyphBrush" Color="{StaticResource MouseOverGlyphColor}" />
        <SolidColorBrush x:Key="PressedGlyphBrush" Color="{StaticResource PressedGlyphColor}" />
        <SolidColorBrush x:Key="ActiveSelectedGlyphBrush" Color="{StaticResource ActiveSelectedGlyphColor}" />
        <SolidColorBrush x:Key="InactiveSelectedGlyphBrush" Color="{StaticResource InactiveSelectedGlyphColor}" />

        <Color x:Key="ButtonAppMenuMouseOverBackgroundColor" A="80" R="173" G="216" B="230" />
        <Color x:Key="ButtonAppMenuMouseOverBorderColor" A="200" R="0" G="206" B="209" />

        <!--#region //  TITLE BAR MENU STYLES  //-->
        <SolidColorBrush x:Key="Menu.Static.Background" Color="#FF444444"/>
        <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999"/>
        <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FFDCDCDC"/>
        <SolidColorBrush x:Key="Menu.Static.Separator" Color="#FFD7D7D7"/>
        <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>
        <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
        <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
        <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
        <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
        <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>

        <Style TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
            <Setter Property="ClickMode" Value="Hover"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="templateRoot"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="Center"
                                              Margin="6"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer,
                                            TypeInTargetAssembly={x:Type FrameworkElement}}"
               BasedOn="{x:Null}"
               TargetType="{x:Type ScrollViewer}">
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Hidden"/>
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Column="0" Grid.Row="1">
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}"
                                                        Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}"
                                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                          Grid.Column="0"
                                          Focusable="false"
                                          Grid.Row="0"
                                          Style="{StaticResource MenuScrollButton}">
                                <RepeatButton.Visibility>
                                    <MultiBinding ConverterParameter="0"
                                                  Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                                  FallbackValue="Visibility.Collapsed">
                                        <Binding Path="ComputedVerticalScrollBarVisibility"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Data="{StaticResource UpArrow}"
                                      Fill="{StaticResource Menu.Static.Foreground}"/>
                            </RepeatButton>
                            <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}"
                                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                          Grid.Column="0"
                                          Focusable="false"
                                          Grid.Row="2"
                                          Style="{StaticResource MenuScrollButton}">
                                <RepeatButton.Visibility>
                                    <MultiBinding ConverterParameter="100"
                                                  Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                                  FallbackValue="Visibility.Collapsed">
                                        <Binding Path="ComputedVerticalScrollBarVisibility"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight"
                                                 RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Data="{StaticResource DownArrow}"
                                      Fill="{StaticResource Menu.Static.Foreground}"/>
                            </RepeatButton>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey,
                                                      TypeInTargetAssembly={x:Type MenuItem}}"
                         TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                                      ContentSource="Icon"
                                      HorizontalAlignment="Center"
                                      Height="16"
                                      Margin="3"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="Center"
                                      Width="16"/>
                    <Path x:Name="GlyphPanel"
                          Data="{StaticResource Checkmark}"
                          FlowDirection="LeftToRight"
                          Fill="{StaticResource Menu.Static.Foreground}"
                          Margin="3"
                          VerticalAlignment="Center"
                          Visibility="Collapsed"/>
                    <ContentPresenter x:Name="headerPresenter"
                                      TextBlock.Foreground="{TemplateBinding Foreground}"
                                      ContentSource="Header"
                                      Grid.Column="1"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon"
                         Value="{x:Null}">
                    <Setter Property="Visibility"
                            TargetName="Icon"
                            Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="true">
                    <Setter Property="Visibility"
                            TargetName="GlyphPanel"
                            Value="Visible"/>
                    <Setter Property="Visibility"
                            TargetName="Icon"
                            Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted"
                         Value="True">
                    <Setter Property="Background"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="TextElement.Foreground"
                            TargetName="templateRoot"
                            Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill"
                            TargetName="GlyphPanel"
                            Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted"
                                   Value="True"/>
                        <Condition Property="IsEnabled"
                                   Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey,
                                                      TypeInTargetAssembly={x:Type MenuItem}}"
                         TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <ContentPresenter x:Name="Icon"
                                      ContentSource="Icon"
                                      HorizontalAlignment="Center"
                                      Height="16"
                                      Margin="3"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="Center"
                                      Width="16"/>
                    <Path x:Name="GlyphPanel"
                          Data="{StaticResource Checkmark}"
                          FlowDirection="LeftToRight"
                          Fill="{TemplateBinding Foreground}"
                          Margin="3"
                          VerticalAlignment="Center"
                          Visibility="Collapsed"/>
                    <Border x:Name="headerContainer"
                            Grid.Column="1">
                        <ContentPresenter x:Name="headerPresenter"
                                          ContentSource="Header"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>

                    <Popup x:Name="PART_Popup"
                           AllowsTransparency="true"
                           Focusable="false"
                           IsOpen="{Binding IsSubmenuOpen,
                                            RelativeSource={RelativeSource TemplatedParent}}"
                           Placement="Bottom"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                           PlacementTarget="{Binding ElementName=templateRoot}">
                        <Border x:Name="SubMenuBorder"
                                Background="{StaticResource Menu.Static.Background}"
                                BorderBrush="{StaticResource Menu.Static.Border}"
                                BorderThickness="1"
                                Padding="2"
                                CornerRadius="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer"
                                          Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                                        TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left"
                                            Height="0"
                                            VerticalAlignment="Top"
                                            Width="0">
                                        <Rectangle x:Name="OpaqueRect"
                                                   Fill="{Binding Background,
                                                                  ElementName=SubMenuBorder}"
                                                   Height="{Binding ActualHeight,
                                                                    ElementName=SubMenuBorder}"
                                                   Width="{Binding ActualWidth,
                                                                   ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <!--<Rectangle Fill="{StaticResource Menu.Static.Separator}"
                                               HorizontalAlignment="Left"
                                               Margin="29,2,0,2"
                                               Width="1"/>-->
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    Grid.IsSharedSizeScope="true"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation"
                         Value="true">
                    <Setter Property="PopupAnimation"
                            TargetName="PART_Popup"
                            Value="None"/>
                </Trigger>
                <Trigger Property="Icon"
                         Value="{x:Null}">
                    <Setter Property="Visibility"
                            TargetName="Icon"
                            Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="true">
                    <Setter Property="Visibility"
                            TargetName="GlyphPanel"
                            Value="Visible"/>
                    <Setter Property="Visibility"
                            TargetName="Icon"
                            Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <!--<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>-->
                    <Setter TargetName="headerPresenter"
                            Property="TextBlock.Foreground"
                            Value="DodgerBlue" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                    <Setter Property="Canvas.Top"
                            TargetName="OpaqueRect"
                            Value="{Binding VerticalOffset,
                                            ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left"
                            TargetName="OpaqueRect"
                            Value="{Binding HorizontalOffset,
                                            ElementName=SubMenuScrollViewer}"/>
                </Trigger>
                <Trigger SourceName="headerContainer"
                         Property="IsMouseOver"
                         Value="True">
                    <Setter TargetName="headerPresenter"
                            Property="TextBlock.Foreground"
                            Value="DeepSkyBlue" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter TargetName="headerPresenter"
                            Property="TextBlock.Foreground"
                            Value="DodgerBlue" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey,
                                                      TypeInTargetAssembly={x:Type MenuItem}}"
                         TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Height="22"
                    SnapsToDevicePixels="true">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22"
                                          SharedSizeGroup="MenuItemIconColumnGroup"
                                          Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <!-- Spacer between glyph and text -->
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup"
                                          Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                                      ContentSource="Icon"
                                      HorizontalAlignment="Center"
                                      Height="16"
                                      Margin="3"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="Center"
                                      Width="16"/>
                    <Border x:Name="GlyphPanel"
                            Background="{StaticResource MenuItem.Selected.Background}"
                            BorderBrush="{StaticResource MenuItem.Selected.Border}"
                            BorderThickness="1"
                            ClipToBounds="False"
                            HorizontalAlignment="Center"
                            Height="22"
                            Margin="-1,0,0,0"
                            VerticalAlignment="Center"
                            Visibility="Hidden"
                            Width="22">
                        <Path x:Name="Glyph"
                              Data="{StaticResource Checkmark}"
                              FlowDirection="LeftToRight"
                              Fill="{StaticResource Menu.Static.Foreground}"
                              Height="11"
                              Width="10"/>
                    </Border>
                    <Border x:Name="headerContainer"
                            Grid.Column="2">
                        <ContentPresenter x:Name="headerPresenter"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          ContentSource="Header"
                                          HorizontalAlignment="Left"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <TextBlock x:Name="menuGestureText"
                               Grid.Column="4"
                               Margin="{TemplateBinding Padding}"
                               Opacity="0.7"
                               Text="{TemplateBinding InputGestureText}"
                               VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon"
                         Value="{x:Null}">
                    <Setter Property="Visibility"
                            TargetName="Icon"
                            Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Visibility"
                            TargetName="GlyphPanel"
                            Value="Visible"/>
                    <Setter Property="Visibility"
                            TargetName="Icon"
                            Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted"
                         Value="True">
                    <!--<Setter Property="Background"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Border}"/>-->
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="TextElement.Foreground"
                            TargetName="templateRoot"
                            Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill"
                            TargetName="Glyph"
                            Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger SourceName="headerContainer"
                         Property="IsMouseOver"
                         Value="True">
                    <Setter TargetName="headerPresenter"
                            Property="TextBlock.Foreground"
                            Value="DeepSkyBlue" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter TargetName="headerPresenter"
                            Property="TextBlock.Foreground"
                            Value="DodgerBlue" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted"
                                   Value="True"/>
                        <Condition Property="IsEnabled"
                                   Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush"
                            TargetName="templateRoot"
                            Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Height="22" SnapsToDevicePixels="true">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Border x:Name="GlyphPanel" Background="{StaticResource MenuItem.Highlight.Background}" BorderBrush="{StaticResource MenuItem.Highlight.Border}" BorderThickness="1" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
                        <Path x:Name="Glyph" Data="{DynamicResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Height="11" Width="9"/>
                    </Border>
                    <Border x:Name="headerContainer" Grid.Column="2">
                        <ContentPresenter x:Name="headerPresenter" TextBlock.Foreground="Gainsboro" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </Border>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                    <Path x:Name="RightArrow" Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{StaticResource Menu.Static.Foreground}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
                        <Border x:Name="SubMenuBorder" Background="{StaticResource Menu.Static.Background}" BorderBrush="{StaticResource Menu.Static.Border}" BorderThickness="1" Padding="2" CornerRadius="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <!--<Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>-->
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="RightArrow" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
                <Trigger SourceName="headerContainer"
                         Property="IsMouseOver"
                         Value="True">
                    <Setter TargetName="headerPresenter"
                            Property="TextBlock.Foreground"
                            Value="DeepSkyBlue" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter TargetName="headerPresenter"
                            Property="TextBlock.Foreground"
                            Value="DodgerBlue" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment"
                    Value="{Binding HorizontalContentAlignment,
                                    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment"
                    Value="{Binding VerticalContentAlignment,
                                    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background"
                    Value="Transparent"/>
            <Setter Property="BorderBrush"
                    Value="Transparent"/>
            <Setter Property="BorderThickness"
                    Value="1"/>
            <Setter Property="ScrollViewer.PanningMode"
                    Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled"
                    Value="False"/>
            <Setter Property="Template"
                    Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey,
                                                                  TypeInTargetAssembly={x:Type MenuItem}}}"/>
            <Style.Triggers>
                <Trigger Property="Role"
                         Value="TopLevelHeader">
                    <Setter Property="Background"
                            Value="Transparent"/>
                    <Setter Property="BorderBrush"
                            Value="Transparent"/>
                    <Setter Property="Foreground"
                            Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template"
                            Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey,
                                                                          TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding"
                            Value="6,0"/>
                </Trigger>
                <Trigger Property="Role"
                         Value="TopLevelItem">
                    <Setter Property="Background"
                            Value="{StaticResource Menu.Static.Background}"/>
                    <Setter Property="BorderBrush"
                            Value="{StaticResource Menu.Static.Border}"/>
                    <Setter Property="Foreground"
                            Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template"
                            Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey,
                                                                          TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding"
                            Value="6,0"/>
                </Trigger>
                <Trigger Property="Role"
                         Value="SubmenuHeader">
                    <Setter Property="Template"
                            Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey,
                                                                          TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>

                <!--<MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition  Property="IsMouseOver"
                                    Value="True"/>
                    <Condition Property="Role"
                               Value="SubmenuHeader" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Foreground"
                                Value="DeepSkyBlue" />
                        <Setter Property="BorderBrush"
                                Value="Transparent" />
                        <Setter Property="Background"
                                Value="Transparent" />
                    </MultiTrigger.Setters>
                </MultiTrigger>-->
            </Style.Triggers>
        </Style>
        <!--#endregion //  TITLE BAR MENU STYLES  //-->

        <!--#region //  TITLE BAR BUTTON STYLES  //-->
        <Style x:Key="TitleBarButtonMinimizeWindowStyle" TargetType="Button">
            <Setter Property="SnapsToDevicePixels" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisualStyle}" />-->
            <Setter Property="Width" Value="46" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Foreground" Value="{DynamicResource ThemeTextBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Boundary" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <!--<VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.12"  />
                                        <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    </VisualStateGroup.Transitions>-->
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="DarkGray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <!--<ContentPresenter RecognizesAccessKey="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <ContentPresenter.Content>-->
                            <Path Width="10" Height="10" ClipToBounds="True" Data="M 0,5.5 H 10" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" />
                            <!--</ContentPresenter.Content>
                            </ContentPresenter>-->
                        </Border>
                        <ControlTemplate.Triggers />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TitleBarButtonMaximizeWindowStyle" TargetType="Button">
            <Setter Property="SnapsToDevicePixels" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisualStyle}" />-->
            <Setter Property="Width" Value="46" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Foreground" Value="{DynamicResource ThemeTextBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Boundary" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <!--<VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.12"  />
                                        <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    </VisualStateGroup.Transitions>-->
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="DarkGray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <!--<ContentPresenter RecognizesAccessKey="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <ContentPresenter.Content>-->
                            <Rectangle Width="10" Height="10" ClipToBounds="True" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" />
                            <!--</ContentPresenter.Content>
                            </ContentPresenter>-->
                        </Border>
                        <ControlTemplate.Triggers />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TitleBarButtonRestoreWindowStyle" TargetType="Button">
            <Setter Property="SnapsToDevicePixels" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisualStyle}" />-->
            <Setter Property="Width" Value="46" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Foreground" Value="{DynamicResource ThemeTextBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Boundary" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <!--<VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.12"  />
                                        <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    </VisualStateGroup.Transitions>-->
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="DarkGray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <!--<ContentPresenter RecognizesAccessKey="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <ContentPresenter.Content>-->
                            <Path Width="10" Height="10" ClipToBounds="True" Data="M 0.5,2.5 V 9.5 H 7.5 V 2.5 H 0.5 M 2.5,2.5 2.5,0.5 9.5,0.5 9.5,7.5 7.5,7.5" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" StrokeStartLineCap="Square" StrokeEndLineCap="Square" />
                            <!--</ContentPresenter.Content>
                            </ContentPresenter>-->
                        </Border>
                        <ControlTemplate.Triggers />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TitleBarButtonCloseAppStyle" TargetType="Button">
            <Setter Property="SnapsToDevicePixels" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisualStyle}" />-->
            <Setter Property="Width" Value="46" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Foreground" Value="{DynamicResource ThemeTextBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Boundary" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <!--<VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.12"  />
                                        <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    </VisualStateGroup.Transitions>-->
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="Red" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Boundary">
                                                <EasingColorKeyFrame KeyTime="0" Value="DarkRed" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <!--<ContentPresenter RecognizesAccessKey="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <ContentPresenter.Content>-->
                            <Path Width="10" Height="10" ClipToBounds="True" Data="M 0,0 10,10 M 0,10 10,0" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" />
                            <!--</ContentPresenter.Content>
                            </ContentPresenter>-->
                        </Border>
                        <ControlTemplate.Triggers />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion //  TITLE BAR BUTTON STYLES  //-->

        <!--#region //  QUICK ACCESS BAR BUTTON STYLES  //-->
        <Style x:Key="QuickAccessButtonLockDatabaseStyle"
               TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center">
                                    <Canvas Width="24"
                                            Height="24">
                                        <!--<Path x:Name="LockedViewGlyph"
                                              Data="M12,17C10.89,17 10,16.1 10,15C10,13.89 10.89,13 12,13A2,2 0 0,1 14,15A2,2 0 0,1 12,17
                                                    M18,20V10H6V20H18
                                                    M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10C4,8.89 4.89,8 6,8H7V6A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18
                                                    M12,3A3,3 0 0,0 9,6V8H15V6A3,3 0 0,0 12,3Z" />-->
                                        <Path x:Name="LockedViewGlyph"
                                              Data="M 11.5 2 C 9.0206434 2 7 4.0206434 7 6.5 L 7 9 L 6 9 C 4.9006497 9 4 9.9006497 4 11 L 4 20 C 4 21.09935 4.9006497 22 6 22 L 17 22 C 18.09935 22 19 21.09935 19 20 L 19 11 C 19 9.9006497 18.09935 9 17 9 L 16 9 L 16 6.5 C 16 4.0206434 13.979357 2 11.5 2 z
                                                    M 11.5 3 C 13.438917 3 15 4.561083 15 6.5 L 15 9 L 8 9 L 8 6.5 C 8 4.561083 9.561083 3 11.5 3 z
                                                    M 6 10 L 17 10 C 17.562648 10 18 10.437352 18 11 L 18 20 C 18 20.562648 17.562648 21 17 21 L 6 21 C 5.4373519 21 5 20.562648 5 20 L 5 11 C 5 10.437352 5.4373519 10 6 10 z
                                                    M 11.5 13 C 10.125212 13 9 14.125212 9 15.5 C 9 16.874788 10.125212 18 11.5 18 C 12.874788 18 14 16.874788 14 15.5 C 14 14.125212 12.874788 13 11.5 13 z
                                                    M 11.5 14 C 12.334349 14 13 14.665651 13 15.5 C 13 16.334349 12.334349 17 11.5 17 C 10.665651 17 10 16.334349 10 15.5 C 10 14.665651 10.665651 14 11.5 14 z " />
                                    </Canvas>
                                </Viewbox>
                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Content="Lock Database"
                                       Visibility="{Binding ButtonLockDatabaseTextVisibility}"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="True">
                                <Setter TargetName="LockedViewGlyph"
                                        Property="Fill"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="LockedViewGlyph"
                                        Property="Fill"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter TargetName="LockedViewGlyph"
                                        Property="Fill"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed"
                                     Value="True">
                                <Setter TargetName="LockedViewGlyph"
                                        Property="Fill"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QuickAccessButtonAddRecordStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--<Setter Property="Width"
                    Value="{Binding RelativeSource={RelativeSource Self},Path=ActualHeight}" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}">
                                    <Canvas Width="24"
                                            Height="24">
                                        <!--<Path x:Name="AddRecordGlyph"
                                              Data="M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20
                                                    M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2
                                                    M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z" />-->
                                        <Path x:Name="AddRecordGlyph"
                                              Data="M 11.5 3 C 6.2592224 3 2 7.2592224 2 12.5 C 2 17.740778 6.2592224 22 11.5 22 C 16.740778 22 21 17.740778 21 12.5 C 21 7.2592224 16.740778 3 11.5 3 z
                                                    M 11.5 4 C 16.200338 4 20 7.799662 20 12.5 C 20 17.200338 16.200338 21 11.5 21 C 6.799662 21 3 17.200338 3 12.5 C 3 7.799662 6.799662 4 11.5 4 z
                                                    M 11 8 L 11 12 L 7 12 L 7 13 L 11 13 L 11 17 L 12 17 L 12 13 L 16 13 L 16 12 L 12 12 L 12 8 L 11 8 z " />
                                    </Canvas>
                                </Viewbox>

                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       Content="Add Entry"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Visibility="{Binding ButtonAddRecordTextVisibility}"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="AddRecordGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="AddRecordGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="AddRecordGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="AddRecordGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QuickAccessButtonEditRecordStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--<Setter Property="Width"
                    Value="{Binding RelativeSource={RelativeSource Self},Path=ActualHeight}" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}">
                                    <Canvas Width="24"
                                            Height="24">
                                        <!--<Path x:Name="EditRecordGlyph"
                                              Data="M7,14.94L13.06,8.88L15.12,10.94L9.06,17H7V14.94
                                                    M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20
                                                    M16.7,9.35L15.7,10.35L13.65,8.3L14.65,7.3C14.86,7.08 15.21,7.08 15.42,7.3L16.7,8.58C16.92,8.79 16.92,9.14 16.7,9.35
                                                    M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2" />-->
                                        <Path x:Name="EditRecordGlyph"
                                              Data="M 11.5 3 C 6.2592224 3 2 7.2592224 2 12.5 C 2 17.740778 6.2592224 22 11.5 22 C 16.740778 22 21 17.740778 21 12.5 C 21 7.2592224 16.740778 3 11.5 3 z
                                              M 11.5 4 C 16.200338 4 20 7.799662 20 12.5 C 20 17.200338 16.200338 21 11.5 21 C 6.799662 21 3 17.200338 3 12.5 C 3 7.799662 6.799662 4 11.5 4 z
                                              M 14.5 7.625 C 14.270834 7.625 14.100591 7.7351522 13.984375 7.828125 C 13.868159 7.921098 13.771484 8.0214845 13.646484 8.1464844 L 12.792969 9 L 15 11.207031 L 15.353516 10.853516 L 15.853516 10.353516 C 15.978516 10.228516 16.078902 10.131841 16.171875 10.015625 C 16.264848 9.899409 16.375 9.7291664 16.375 9.5 C 16.375 9.2708336 16.264848 9.100591 16.171875 8.984375 C 16.078902 8.868159 15.978515 8.7714843 15.853516 8.6464844 L 15.353516 8.1464844 C 15.228516 8.0214845 15.131841 7.9210978 15.015625 7.828125 C 14.899409 7.7351522 14.729166 7.625 14.5 7.625 z
                                              M 14.5 8.7128906 C 14.54604 8.7564906 14.57471 8.7817436 14.646484 8.8535156 L 15.146484 9.3535156 C 15.218254 9.4252876 15.243514 9.4539601 15.287109 9.5 C 15.243509 9.54604 15.218259 9.574712 15.146484 9.6464844 L 15 9.7929688 L 14.207031 9 L 14.353516 8.8535156 C 14.425288 8.7817434 14.45396 8.7564902 14.5 8.7128906 z
                                              M 12.5 9.2929688 L 6.5 15.292969 L 6.5 17.5 L 7 17.5 L 8.7070312 17.5 L 14.707031 11.5 L 12.5 9.2929688 z
                                              M 12.5 10.707031 L 13.292969 11.5 L 8.2929688 16.5 L 7.5 16.5 L 7.5 15.707031 L 12.5 10.707031 z" />
                                    </Canvas>
                                </Viewbox>

                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       Content="Edit Entry"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Visibility="{Binding ButtonEditRecordTextVisibility}"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="EditRecordGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="EditRecordGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="EditRecordGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="EditRecordGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QuickAccessButtonDeleteRecordStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--<Setter Property="Width"
                    Value="{Binding RelativeSource={RelativeSource Self},Path=ActualHeight}" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}">
                                    <Canvas Width="24"
                                            Height="24">
                                        <!--<Path x:Name="DeleteRecordGlyph"
                                              Data="M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2
                                              M12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4
                                              M16,10V17A1,1 0 0,1 15,18H9A1,1 0 0,1 8,17V10H16
                                              M13.5,6L14.5,7H17V9H7V7H9.5L10.5,6H13.5Z" />-->
                                        <Path x:Name="DeleteRecordGlyph"
                                              Data="M 11.5 3 C 6.2592224 3 2 7.2592224 2 12.5 C 2 17.740778 6.2592224 22 11.5 22 C 16.740778 22 21 17.740778 21 12.5 C 21 7.2592224 16.740778 3 11.5 3 z
                                                    M 11.5 4 C 16.200338 4 20 7.799662 20 12.5 C 20 17.200338 16.200338 21 11.5 21 C 6.799662 21 3 17.200338 3 12.5 C 3 7.799662 6.799662 4 11.5 4 z
                                                    M 9.7929688 6 L 8.7929688 7 L 7.5 7 L 6 7 L 6 10 L 6.5 10 L 7 10 L 7 17.5 C 7 17.922589 7.2049874 18.267487 7.46875 18.53125 C 7.7325126 18.795013 8.0774116 19 8.5 19 L 14.5 19 C 14.922588 19 15.267487 18.795013 15.53125 18.53125 C 15.795013 18.267487 16 17.922588 16 17.5 L 16 10 L 17 10 L 17 7 L 14.207031 7 L 13.207031 6 L 9.7929688 6 z
                                                    M 10.207031 7 L 12.792969 7 L 13.792969 8 L 16 8 L 16 9 L 7 9 L 7 8 L 7.5 8 L 9.2070312 8 L 10.207031 7 z
                                                    M 8 10 L 15 10 L 15 17.5 C 15 17.54882 14.94065 17.70388 14.822266 17.822266 C 14.70388 17.940651 14.548816 18 14.5 18 L 8.5 18 C 8.4511844 18 8.2961203 17.940651 8.1777344 17.822266 C 8.0593485 17.70388 8 17.548816 8 17.5 L 8 10 z
                                                    M 9 11 L 9 17 L 10 17 L 10 11 L 9 11 z
                                                    M 11 11 L 11 17 L 12 17 L 12 11 L 11 11 z
                                                    M 13 11 L 13 17 L 14 17 L 14 11 L 13 11 z" />
                                        
                                    </Canvas>
                                </Viewbox>

                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Content="Delete Entry"
                                       Visibility="{Binding ButtonDeleteRecordTextVisibility}"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="DeleteRecordGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="DeleteRecordGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="DeleteRecordGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="DeleteRecordGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style x:Key="QuickAccessButtonGeneratePasswordStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Canvas Grid.Row="0" Width="24" Height="24">
                                    <Path x:Name="GeneratePasswordGlyph" Data="M19 5V19H5V5H19M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3M12 10.5C11.2 10.5 10.5 11.2 10.5 12S11.2 13.5 12 13.5 13.5 12.8 13.5 12 12.8 10.5 12 10.5M7.5 6C6.7 6 6 6.7 6 7.5S6.7 9 7.5 9 9 8.3 9 7.5 8.3 6 7.5 6M16.5 15C15.7 15 15 15.7 15 16.5C15 17.3 15.7 18 16.5 18C17.3 18 18 17.3 18 16.5C18 15.7 17.3 15 16.5 15Z" />
                                </Canvas>
                                <Label Grid.Row="0" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="GeneratePasswordGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="GeneratePasswordGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="GeneratePasswordGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="GeneratePasswordGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <Style x:Key="QuickAccessButtonAppSettingsStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}">
                                    <Canvas Width="24"
                                            Height="24">
                                        <!--<Path x:Name="AppSettingsGlyph"
                                              Data="M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8
                                                    M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10
                                                    M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10
                                                    M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z" />-->
                                        <Path x:Name="AppSettingsGlyph"
                                              Data="m 19.59,15.5 -1.82,-1.3 c 0.3,-1.08 0.32,-2.25 0,-3.42 L 19.59,9.5 18.14,7 16.11,7.92 C 15.32,7.12 14.32,6.5 13.15,6.21 L 12.95,4 h -2.9 L 9.85,6.21 C 8.68,6.5 7.68,7.12 6.89,7.92 L 4.86,7 3.41,9.5 5.23,10.78 c -0.32,1.17 -0.3,2.34 0,3.42 L 3.41,15.5 4.86,18 6.89,17.07 c 0.79,0.79 1.79,1.39 2.96,1.7 l 0.2,2.23 h 2.9 l 0.2,-2.23 c 1.17,-0.31 2.17,-0.91 2.96,-1.7 L 18.14,18 19.59,15.5
                                                    M 13.5,3 C 13.77,3 14,3.2 14,3.46 l 0.18,2.04 c 0.76,0.28 1.44,0.69 2.05,1.18 L 18.08,5.81 C 18.31,5.69 18.6,5.77 18.74,6 l 2,3.5 c 0.14,0.21 0.06,0.5 -0.16,0.65 l -1.67,1.17 c 0.13,0.8 0.12,1.59 0,2.36 l 1.67,1.17 c 0.22,0.15 0.3,0.44 0.16,0.65 l -2,3.5 c -0.14,0.21 -0.43,0.29 -0.66,0.17 l -1.85,-0.86 c -0.61,0.49 -1.29,0.89 -2.05,1.19 l -0.18,2 c 0,0.29 -0.23,0.5 -0.5,0.5 h -4 C 9.22,22 9,21.78 9,21.5 l -0.18,-2 C 8.06,19.2 7.38,18.8 6.77,18.31 L 4.92,19.17 C 4.69,19.29 4.4,19.21 4.26,19 l -2,-3.5 C 2.12,15.29 2.2,15 2.42,14.85 l 1.67,-1.17 c -0.12,-0.77 -0.13,-1.56 0,-2.36 L 2.42,10.15 C 2.2,10 2.12,9.71 2.26,9.5 L 4.26,6 C 4.4,5.77 4.69,5.69 4.92,5.81 L 6.77,6.68 C 7.38,6.19 8.06,5.78 8.82,5.5 L 9,3.46 C 9,3.2 9.23,3 9.5,3 h 4
                                                    m -2,6 C 13.43,9 15,10.57 15,12.5 15,14.43 13.43,16 11.5,16 9.57,16 8,14.43 8,12.5 8,10.57 9.57,9 11.5,9
                                                    m 0,1 C 10.12,10 9,11.12 9,12.5 9,13.88 10.12,15 11.5,15 12.88,15 14,13.88 14,12.5 14,11.12 12.88,10 11.5,10 Z"/>
                                    </Canvas>
                                </Viewbox>

                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Content="Settings"
                                       Visibility="{Binding ButtonAppSettingsTextVisibility}"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QuickAccessButtonUsernameToClipboardStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}">
                                    <Canvas Width="24"
                                            Height="24">
                                        <!--<Path x:Name="AppSettingsGlyph"
                                              Data="M18 16H14V18H18V20L21 17L18 14V16
                                                    M11 4C8.8 4 7 5.8 7 8S8.8 12 11 12 15 10.2 15 8 13.2 4 11 4
                                                    M11 6C12.1 6 13 6.9 13 8S12.1 10 11 10 9 9.1 9 8 9.9 6 11 6
                                                    M11 13C8.3 13 3 14.3 3 17V20H12.5C12.2 19.4 12.1 18.8 12 18.1H4.9V17C4.9 16.4 8 14.9 11 14.9C11.5 14.9 12 15 12.5 15C12.8 14.4 13.1 13.8 13.6 13.3C12.6 13.1 11.7 13 11 13" />-->
                                        <!--<Path x:Name="AppSettingsGlyph"
                                              Data="M 10.5 5 C 8.5729276 5 7 6.5729276 7 8.5 C 7 10.427072 8.5729276 12 10.5 12 C 12.427072 12 14 10.427072 14 8.5 C 14 6.5729276 12.427072 5 10.5 5 z
                                                    M 10.5 6 C 11.886633 6 13 7.1133672 13 8.5 C 13 9.8866328 11.886633 11 10.5 11 C 9.1133672 11 8 9.8866328 8 8.5 C 8 7.1133672 9.1133672 6 10.5 6 z
                                                    M 10.5 14 C 9.1650526 14 7.3861284 14.252691 5.8828125 14.777344 C 5.1311545 15.03967 4.4483518 15.368042 3.9199219 15.800781 C 3.391492 16.233521 3 16.814109 3 17.5 L 3 20 L 12.613281 20 A 5.5 5.5 0 0 1 12.212891 19 L 4 19 L 4 17.5 C 4 17.185892 4.16532 16.891478 4.5527344 16.574219 C 4.9401487 16.256959 5.5318739 15.960329 6.2128906 15.722656 C 7.5749241 15.24731 9.2963589 15 10.5 15 C 11.083925 15 11.79008 15.059618 12.517578 15.173828 A 5.5 5.5 0 0 1 13.080078 14.251953 C 12.164923 14.084547 11.260109 14 10.5 14 z
                                                    M 18 15.292969 L 18 17 L 14 17 L 14 18 L 18 18 L 18 19.707031 L 20.207031 17.5 L 18 15.292969 z" />-->
                                        <Path x:Name="AppSettingsGlyph"
                                              Data="M 10.5 4 C 8.2967855 4 6.5 5.7967855 6.5 8 C 6.5 10.203214 8.2967855 12 10.5 12 C 12.703214 12 14.5 10.203214 14.5 8 C 14.5 5.7967855 12.703214 4 10.5 4 z
                                                    M 10.5 5 C 12.162775 5 13.5 6.3372251 13.5 8 C 13.5 9.6627749 12.162775 11 10.5 11 C 8.8372251 11 7.5 9.6627749 7.5 8 C 7.5 6.3372251 8.8372251 5 10.5 5 z
                                                    M 10.5 14 C 8.6785733 14 6.6370221 14.381129 5.0019531 15.035156 C 4.1844186 15.36217 3.4668742 15.755375 2.9257812 16.234375 C 2.3846882 16.713375 2 17.312501 2 18 L 2 21 L 2.5 21 L 12.013672 21 A 6.5 6.5 0 0 1 11.691406 20 L 3 20 L 3 18 C 3 17.6875 3.1778126 17.349124 3.5898438 16.984375 C 4.0018749 16.619626 4.6280829 16.262829 5.3730469 15.964844 C 6.8629748 15.368873 8.8214303 15 10.5 15 C 11.122137 15 11.782432 15.052358 12.443359 15.146484 A 6.5 6.5 0 0 1 13.097656 14.234375 C 12.225678 14.082938 11.339806 14 10.5 14 z
                                                    M 17.5 16 L 17.5 18 L 13.5 18 L 13.5 19 L 17.5 19 L 17.5 21 L 20.5 18.5 L 17.5 16 z " />
                                    </Canvas>
                                </Viewbox>

                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Content="Copy Username"
                                       Visibility="{Binding ButtonUsernameToclipboardTextVisibility}" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QuickAccessButtonPasswordToClipboardStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}">
                                    <Canvas Width="24"
                                            Height="24">
                                        <!--<Path x:Name="AppSettingsGlyph"
                                              Data="M11.7 6C11.1 4.2 9.4 3 7.5 3C5 3 3 5 3 7.5S5 12 7.5 12C9.5 12 11.1 10.8 11.7 9H15V12H18V9H21V6H11.7
                                                    M7.5 9C6.7 9 6 8.3 6 7.5S6.7 6 7.5 6 9 6.7 9 7.5 8.3 9 7.5 9
                                                    M13 21V19H8V17H13V15L16 18L13 21" />-->
                                        <Path x:Name="AppSettingsGlyph"
                                              Data="M 6.5 3 C 4.0206434 3 2 5.0206434 2 7.5 C 2 9.9793566 4.0206434 12 6.5 12 C 8.4537092 12 10.122364 10.745121 10.742188 9 L 15 9 L 15 12 L 18 12 L 18 9 L 21 9 L 21 6 L 10.742188 6 C 10.122364 4.254879 8.4537092 3 6.5 3 z
                                                    M 6.5 4 C 8.2687092 4 9.7192361 5.3001217 9.9609375 7 L 10.970703 7 L 11.5 7 L 20 7 L 20 8 L 17 8 L 17 11 L 16 11 L 16 8 L 11.5 8 L 10.970703 8 L 9.9609375 8 C 9.7192361 9.6998783 8.2687092 11 6.5 11 C 4.561083 11 3 9.438917 3 7.5 C 3 5.561083 4.561083 4 6.5 4 z
                                                    M 6.5 5 C 5.1252118 5 4 6.1252118 4 7.5 C 4 8.8747882 5.1252118 10 6.5 10 C 7.8747882 10 9 8.8747882 9 7.5 C 9 6.1252118 7.8747882 5 6.5 5 z
                                                    M 6.5 6 C 7.3343486 6 8 6.6656514 8 7.5 C 8 8.3343486 7.3343486 9 6.5 9 C 5.6656514 9 5 8.3343486 5 7.5 C 5 6.6656514 5.6656514 6 6.5 6 z
                                                    M 13 17 L 13 19 L 9 19 L 9 20 L 13 20 L 13 22 L 15.5 19.5 L 13 17 z" />
                                        
                                    </Canvas>
                                </Viewbox>

                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Content="Copy Password"
                                       Visibility="{Binding ButtonPasswordToClipboardTextVisibility}" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QuickAccessButtonUrlToClipboardStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Padding="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Viewbox Grid.Row="0"
                                         Height="{Binding QuickAccessIconSize,
                                                          Converter={StaticResource QuickAccessIconSizeToDoubleConverter}}"
                                         Width="{Binding RelativeSource={RelativeSource Self},
                                                         Path=Height}">
                                    <Canvas Width="24"
                                            Height="24">
                                        <!--<Path x:Name="AppSettingsGlyph"
                                              Data="M19 21V19H15V17H19V15L22 18L19 21
                                                    M12 18C12 15.8 13.2 13.9 15 12.8C14.9 12.3 14.5 12 14 12H8V10H10C10.6 10 11 9.6 11 9V7H13C14.1 7 15 6.1 15 5V4.6C17.9 5.8 20 8.6 20 12V12.3C20.7 12.5 21.3 12.9 21.9 13.4C22 13 22 12.5 22 12C22 6.5 17.5 2 12 2S2 6.5 2 12 6.5 22 12 22C12.5 22 13 22 13.4 21.9C12.5 20.8 12 19.5 12 18
                                                    M11 19.9C7 19.4 4 16.1 4 12C4 11.4 4.1 10.8 4.2 10.2L9 15V16C9 17.1 9.9 18 11 18V19.9Z" />-->
                                        <Path x:Name="AppSettingsGlyph"
                                              Data="M 11.5 3 C 6.2592224 3 2 7.2592224 2 12.5 C 2 17.740778 6.2592224 22 11.5 22 C 11.874732 22 12.243925 21.975948 12.607422 21.933594 A 6 6 0 0 1 11.5 18.5 A 6 6 0 0 1 14.480469 13.318359 A 1 1 0 0 0 13.5 12.5 L 7.5 12.5 L 7.5 10.5 L 9.5 10.5 A 1 1 0 0 0 10.5 9.5 L 10.5 7.5 L 12.5 7.5 A 2 2 0 0 0 14.5 5.5 L 14.5 4.5449219 C 17.716383 5.7555692 20 8.8561825 20 12.5 C 20 12.681417 19.991623 12.860506 19.980469 13.039062 A 6 6 0 0 1 20.9375 13.583984 C 20.978062 13.228107 21 12.866605 21 12.5 C 21 7.2592224 16.740778 3 11.5 3 z
                                                    M 3.2910156 10.291016 L 8.5 15.5 L 8.5 16.5 A 2 2 0 0 0 10.5 18.5 L 10.5 20.939453 C 6.2731293 20.444959 3 16.86139 3 12.5 C 3 11.735592 3.1024981 10.995312 3.2910156 10.291016 z
                                                    M 18 16 L 18 18 L 14 18 L 14 19 L 18 19 L 18 21 L 20.5 18.5 L 18 16 z " />
                                    </Canvas>
                                </Viewbox>

                                <Label x:Name="contentLabel"
                                       Grid.Row="1"
                                       Margin="0"
                                       Padding="0"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Content="Copy URL"
                                       Visibility="{Binding ButtonUrlToClipboardTextVisibility}"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeHighEmphasisTextBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource MouseOverGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource MouseOverGlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource ThemeDisabledTextBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource ThemeDisabledTextBrush}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="AppSettingsGlyph" Property="Fill" Value="{DynamicResource PressedGlyphBrush}" />
                                <Setter TargetName="contentLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource PressedGlyphBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion //  QUICK ACCESS BAR BUTTON STYLES  //-->
    </Window.Resources>

    <Border BorderThickness="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}},
                                      Path=WindowState,
                                      Converter={StaticResource ViewStateToBorderThicknessConverter}}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="0*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--////  TITLE BAR  ////-->
            <Border Grid.Row="0"
                    Background="#333"
                    BorderBrush="#666"
                    BorderThickness="0 0 0 0"
                    TextBlock.FontSize="12" Grid.ColumnSpan="2">
                <Grid Height="32">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="32" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Viewbox Grid.Column="0"
                             Panel.ZIndex="0"
                             Width="16"
                             Height="16">
                        <Canvas Width="24"
                                Height="24">
                            <Path Fill="{StaticResource solidColorBrush-theme-blue}"
                                  Data="m 14 9.5 c -1.101607 0 -2 0.898393 -2 2 0 1.101607 0.898393 2 2 2 1.101607 0 2 -0.898393 2 -2 0 -1.101607 -0.898393 -2 -2 -2 z
                                        M 2 2.5 c -1.108 0 -2 0.892 -2 2 v 14 c 0 1.108 0.892 2 2 2 h 1 c 0 0.554 0.446 1 1 1 h 2 c 0.554 0 1 -0.446 1 -1 h 9 c 0 0.554 0.446 1 1 1 h 2 c 0.554 0 1 -0.446 1 -1 h 2 c 1.108 0 2 -0.892 2 -2 v -14 c 0 -1.108 -0.892 -2 -2 -2 z
                                        m 12 4 c 2.75846 0 5 2.2415402 5 5 0 2.75846 -2.24154 5 -5 5 -2.75846 0 -5 -2.24154 -5 -5 0 -2.7584598 2.24154 -5 5 -5 z
                                        M 5 8 c 0.554 0 1 0.446 1 1 v 5 C 6 14.554 5.554 15 5 15 4.446 15 4 14.554 4 14 V 9 C 4 8.446 4.446 8 5 8 Z
                                        m 9 0 C 13.830428 8 13.663192 8.013692 13.5 8.037109 V 8.5429688 C 13.662783 8.5157454 13.829351 8.5 14 8.5 c 0.170649 0 0.337217 0.015745 0.5 0.042969 V 8.0371094 C 14.336808 8.013692 14.169572 8 14 8 Z
                                        m -2.095703 0.6972656 c -0.267957 0.200841 -0.50619 0.4390747 -0.707031 0.7070313 l 0.357422 0.3574219 c 0.19457 -0.2735723 0.433459 -0.5124606 0.707031 -0.7070313 z
                                        m 4.191406 0 -0.357422 0.3574219 c 0.273572 0.1945707 0.512461 0.433459 0.707031 0.7070313 L 16.802734 9.4042969 C 16.601893 9.1363403 16.36366 8.8981066 16.095703 8.6972656 Z
                                        M 10.537109 11 C 10.513692 11.163192 10.5 11.330429 10.5 11.5 c 0 0.169572 0.01369 0.336808 0.03711 0.5 h 0.50586 C 11.015745 11.837217 11 11.670649 11 11.5 11 11.329351 11.01575 11.162783 11.04297 11 Z
                                        m 6.419922 0 C 16.984255 11.162783 17 11.329351 17 11.5 c 0 0.170649 -0.01574 0.337217 -0.04297 0.5 h 0.50586 C 17.486308 11.836808 17.5 11.669572 17.5 11.5 17.5 11.330429 17.48631 11.163192 17.46289 11 Z
                                        m -5.402343 2.238281 -0.357422 0.357422 c 0.200841 0.267957 0.439074 0.50619 0.707031 0.707031 l 0.357422 -0.357422 c -0.273572 -0.19457 -0.512461 -0.433459 -0.707031 -0.707031 z
                                        m 4.890624 0 c -0.19457 0.273572 -0.433459 0.512461 -0.707031 0.707031 l 0.357422 0.357422 c 0.267957 -0.200841 0.50619 -0.439074 0.707031 -0.707031 z
                                        M 13.5 14.457031 v 0.50586 C 13.663192 14.986308 13.830428 15 14 15 c 0.169572 0 0.336808 -0.01369 0.5 -0.03711 V 14.45703 C 14.337217 14.484255 14.170649 14.5 14 14.5 c -0.170649 0 -0.337217 -0.01575 -0.5 -0.04297 z" />
                        </Canvas>
                    </Viewbox>

                    <Menu Grid.Column="1"
                          Panel.ZIndex="0"
                          WindowChrome.IsHitTestVisibleInChrome="True"
                          Background="Transparent"
                          Foreground="{StaticResource ThemeTextBrush}"
                          VerticalAlignment="Center">
                        <MenuItem Header="File">
                            <MenuItem Header="Item1" />
                        </MenuItem>
                        <MenuItem Header="Edit">
                            <MenuItem Header="Item1" />
                            <MenuItem Header="Item2" />
                            <MenuItem Header="Item3">
                                <MenuItem Header="subitem 1" />
                                <MenuItem Header="subitem 2" />
                                <MenuItem Header="subitem 3" />
                                <MenuItem Header="subitem 4" />
                                <MenuItem Header="subitem 5" />
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="Item4" />
                            <MenuItem Header="Item5" />
                            <MenuItem Header="Item6" />
                            <Separator />
                            <MenuItem Header="Item7" />
                        </MenuItem>
                        <MenuItem Header="About">
                            <MenuItem Header="Item1" />
                        </MenuItem>
                    </Menu>
                    <!--<ToggleButton x:Name="toggleButtonAppMenu"
                                  Grid.Column="1"
                                  Panel.ZIndex="0"
                                  WindowChrome.IsHitTestVisibleInChrome="True"
                                  Width="32"
                                  Height="32"
                                  Foreground="{StaticResource solidColorBrush-theme-foreground}"
                                  Background="Transparent"
                                  BorderBrush="Transparent"
                                  BorderThickness="0">
                        <Viewbox Width="24"
                                 Height="24">
                            <Canvas Width="24"
                                    Height="24">
                                <Path x:Name="glyphTopLine"
                                      Fill="{StaticResource solidColorBrush-theme-foreground}"
                                      Data="m 4,6 h 16 c 0.554,0 1,0.446 1,1 0,0.554 -0.446,1 -1,1 H 4 C 3.446,8 3,7.554 3,7 3,6.446 3.446,6 4,6 Z" />
                                <Path x:Name="glyphMiddleLine"
                                      Fill="{StaticResource solidColorBrush-theme-foreground}"
                                      Data="m 4,11 h 16 c 0.554,0 1,0.446 1,1 0,0.554 -0.446,1 -1,1 H 4 C 3.446,13 3,12.554 3,12 3,11.446 3.446,11 4,11 Z" />
                                <Path x:Name="glyphBottomLine"
                                      Fill="{StaticResource solidColorBrush-theme-foreground}"
                                      Data="m 4,16 h 16 c 0.554,0 1,0.446 1,1 0,0.554 -0.446,1 -1,1 H 4 C 3.446,18 3,17.554 3,17 3,16.446 3.446,16 4,16 Z" />
                                -->
                    <!--<Path x:Name="glyphTopLine"
                                              Stroke="{StaticResource solidColorBrush-theme-foreground}"
                                              StrokeThickness="2.5"
                                              StrokeStartLineCap="Round"
                                              StrokeEndLineCap="Round"
                                              Data="M 4,6 H 20" />
                                        <Path x:Name="glyphMiddleLine"
                                              Stroke="{StaticResource solidColorBrush-theme-foreground}"
                                              StrokeThickness="2.5"
                                              StrokeStartLineCap="Round"
                                              StrokeEndLineCap="Round"
                                              Data="M 4,12 H 20" />
                                        <Path x:Name="glyphBottomLine"
                                              Stroke="{StaticResource solidColorBrush-theme-foreground}"
                                              StrokeThickness="2.5"
                                              StrokeStartLineCap="Round"
                                              StrokeEndLineCap="Round"
                                              Data="M 4,18 H 20" />-->
                    <!--
                            </Canvas>
                        </Viewbox>
                    </ToggleButton>
                    <Popup IsOpen="{Binding ElementName=toggleButtonAppMenu,
                                            Path=IsChecked}"
                           StaysOpen="False"
                           PlacementTarget="{Binding ElementName=toggleButtonAppMenu}"
                           Placement="Bottom">
                        <Border>-->
                    <!--<Menu x:Name="menuApplicationMenu"
                                  Grid.Column="1"
                                  WindowChrome.IsHitTestVisibleInChrome="True"
                                  Width="32"
                                  Height="32"
                                  Foreground="{StaticResource solidColorBrush-theme-foreground}"
                                  Background="Transparent">
                                <Menu.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel Orientation="Vertical" />
                                    </ItemsPanelTemplate>
                                </Menu.ItemsPanel>
                                
                                <MenuItem x:Name="menuItemMain"
                                          Padding="3">
                                    <MenuItem.Header>
                                        <Viewbox Width="24"
                                                 Height="24">
                                            <Canvas Width="24"
                                                    Height="24">
                                                <Path x:Name="glyphTopLine"
                                                      Fill="{StaticResource solidColorBrush-theme-foreground}"
                                                      Data="m 4,6 h 16 c 0.554,0 1,0.446 1,1 0,0.554 -0.446,1 -1,1 H 4 C 3.446,8 3,7.554 3,7 3,6.446 3.446,6 4,6 Z" />
                                                <Path x:Name="glyphMiddleLine"
                                                      Fill="{StaticResource solidColorBrush-theme-foreground}"
                                                      Data="m 4,11 h 16 c 0.554,0 1,0.446 1,1 0,0.554 -0.446,1 -1,1 H 4 C 3.446,13 3,12.554 3,12 3,11.446 3.446,11 4,11 Z" />
                                                <Path x:Name="glyphBottomLine"
                                                      Fill="{StaticResource solidColorBrush-theme-foreground}"
                                                      Data="m 4,16 h 16 c 0.554,0 1,0.446 1,1 0,0.554 -0.446,1 -1,1 H 4 C 3.446,18 3,17.554 3,17 3,16.446 3.446,16 4,16 Z" />
                                            </Canvas>
                                        </Viewbox>
                                    </MenuItem.Header>
                                    
                                    <MenuItem Header="item 1" IsCheckable="True" >
                                        <MenuItem Header="subitem 1"  />
                                        <MenuItem Header="subitem 2"  />
                                    </MenuItem>
                                    <MenuItem Header="item 2" >
                                        <MenuItem Header="subitem 1"  />
                                        <MenuItem Header="subitem 2"  />
                                    </MenuItem>
                                    <MenuItem Header="item 3" >
                                        <MenuItem Header="subitem 1"  />
                                        <MenuItem Header="subitem 2"  />
                                    </MenuItem>
                                    <MenuItem Header="item 4" >
                                        <MenuItem Header="subitem 1"  />
                                        <MenuItem Header="subitem 2"  />
                                    </MenuItem>
                                    <MenuItem Header="item 5" >
                                        <MenuItem Header="subitem 1"  />
                                        <MenuItem Header="subitem 2"  />
                                    </MenuItem>
                                </MenuItem>
                            </Menu>-->
                    <!--</Border>
                    </Popup>-->

                    <TextBlock Grid.Column="0"
                               Grid.ColumnSpan="7"
                               Panel.ZIndex="0"
                               Foreground="{StaticResource ThemeTextBrush}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Text="{Binding ElementName=WinMain,
                                              Path=Title}" />

                    <StackPanel Grid.Column="3"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                Panel.ZIndex="0"
                                Orientation="Horizontal"
                                Margin="24 0" />

                    <Button Grid.Column="4"
                            Panel.ZIndex="0"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            Visibility="Visible"
                            Style="{StaticResource TitleBarButtonMinimizeWindowStyle}"
                            Command="{Binding MinimizeWindowCommand}"/>
                    <Button Grid.Column="5"
                            Panel.ZIndex="0"
                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}},
                                                 Path=WindowState,
                                                 Converter={StaticResource ViewStateToVisibilityConverter},
                                                 ConverterParameter='BTN_MAX'}"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            Style="{StaticResource TitleBarButtonMaximizeWindowStyle}"
                            Command="{Binding MaximizeRestoreWindowCommand}" />
                    <Button Grid.Column="5"
                            Panel.ZIndex="0"
                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}},
                                                 Path=WindowState,
                                                 Converter={StaticResource ViewStateToVisibilityConverter},
                                                 ConverterParameter='BTN_RSTR'}"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            Style="{StaticResource TitleBarButtonRestoreWindowStyle}"
                            Command="{Binding MaximizeRestoreWindowCommand}" />
                    <Button Grid.Column="6"
                            Panel.ZIndex="0"
                            Visibility="Visible"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            Style="{StaticResource TitleBarButtonCloseAppStyle}"
                            Command="{Binding CloseWindowCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                </Grid>
            </Border>

            <!--////  QUICK ACCESS BAR  ////-->
            <Border Grid.Row="1"
                    Background="#333"
                    BorderBrush="#666"
                    BorderThickness="0 0 0 0"
                    Padding="4 4"
                    Height="Auto" Grid.ColumnSpan="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal">
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                IsEnabled="{Binding ButtonLockDatabaseIsEnabled}"
                                Style="{StaticResource QuickAccessButtonLockDatabaseStyle}"
                                Command="{Binding LockDatabaseCommand}"/>
                        <Separator Grid.Row="0"
                                   Grid.Column="1"
                                   Width="1"
                                   Background="#777"
                                   Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                                   Margin="4,3"/>
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                IsEnabled="{Binding ButtonAddRecordIsEnabled}"
                                Style="{StaticResource QuickAccessButtonAddRecordStyle}"
                                Command="{Binding AddRecordCommand}"/>
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                Margin="2 0"
                                IsEnabled="{Binding ButtonEditRecordIsEnabled}"
                                Style="{StaticResource QuickAccessButtonEditRecordStyle}"
                                Command="{Binding EditRecordCommand}"/>
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                IsEnabled="{Binding ButtonDeleteRecordIsEnabled}"
                                Style="{StaticResource QuickAccessButtonDeleteRecordStyle}"
                                Command="{Binding DeleteRecordCommand}"/>
                        <Separator Grid.Row="0"
                                   Grid.Column="1"
                                   Width="1"
                                   Background="#777"
                                   Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                                   Margin="4,3" />
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                IsEnabled="{Binding ButtonUsernameToClipboardIsEnabled}"
                                Style="{StaticResource QuickAccessButtonUsernameToClipboardStyle}"
                                Command="{Binding CopyUsernameToClipboardCommand}"/>
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                Margin="2 0"
                                IsEnabled="{Binding ButtonPasswordToClipboardIsEnabled}"
                                Style="{StaticResource QuickAccessButtonPasswordToClipboardStyle}"
                                Command="{Binding CopyPasswordToClipboardCommand}"/>
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                IsEnabled="{Binding ButtonUrlToClipboardIsEnabled}"
                                Style="{StaticResource QuickAccessButtonUrlToClipboardStyle}"
                                Command="{Binding CopyUrlToClipboardCommand}"/>
                        <Separator Grid.Row="0"
                                   Grid.Column="1"
                                   Width="1"
                                   Background="#777"
                                   Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                                   Margin="4,3" />
                        <!--<Button Grid.Row="0"
                                Grid.Column="0"
                                Margin="0 0 1 0"
                                IsEnabled="{Binding ButtonPasswordGeneratorIsEnabled}"
                                Style="{StaticResource QuickAccessButtonGeneratePasswordStyle}"
                                Command="{Binding GeneratePasswordCommand}"/>-->
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                Margin="1 0 0 0"
                                IsEnabled="{Binding ButtonAppSettingsIsEnabled}"
                                Style="{StaticResource QuickAccessButtonAppSettingsStyle}"
                                Command="{Binding AppSettingsCommand}"/>
                        <!--<Separator Grid.Row="0"
                                   Grid.Column="1"
                                   Width="1"
                                   Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                                   Margin="4,3" />-->
                    </StackPanel>

                    <!--<Grid Grid.Column="2"
                          Height="24"
                          Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="24" />
                        </Grid.ColumnDefinitions>

                        <Border Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Panel.ZIndex="0"
                                BorderBrush="#666"
                                BorderThickness="1"
                                Background="#383838"
                                CornerRadius="2" />
                        <ToggleButton Grid.Column="0"
                                      Panel.ZIndex="1"
                                      IsEnabled="False"
                                      Width="24"
                                      Height="24"
                                      VerticalContentAlignment="Center"
                                      HorizontalContentAlignment="Center"
                                      Background="Transparent"
                                      Foreground="Gainsboro"
                                      BorderBrush="Transparent"
                                      BorderThickness="0" />
                        <TextBox Grid.Column="1"
                                 Panel.ZIndex="2"
                                 IsEnabled="False"
                                 BorderBrush="Transparent"
                                 BorderThickness="0"
                                 Background="Transparent"
                                 Foreground="Gainsboro"
                                 VerticalContentAlignment="Center"
                                 HorizontalContentAlignment="Left"
                                 CaretBrush="Gainsboro" />
                        <ToggleButton Grid.Column="2"
                                      Panel.ZIndex="2"
                                      IsEnabled="False"
                                      Width="24"
                                      Height="24"
                                      VerticalContentAlignment="Center"
                                      HorizontalContentAlignment="Center"
                                      Background="Transparent"
                                      Foreground="Gainsboro"
                                      BorderBrush="Transparent"
                                      BorderThickness="0" />
                    </Grid>-->

                    <StackPanel Grid.Column="1"
                                Orientation="Horizontal">
                        <TextBlock Text="Timer Elapsed Seconds:"
                                   Foreground="White"
                                   VerticalAlignment="Center"
                                   Margin="12 0" />
                        <TextBlock x:Name="elapsedSecondsTimer"
                                   Foreground="White"
                                   VerticalAlignment="Center"
                                   Text="{Binding SecondsSinceLastAction}"/>
                    </StackPanel>
                </Grid>
            </Border>

            <!--////  BODY CONTENTS  ////-->
            <Border Grid.Row="2"
                    Padding="5"
                    Background="Transparent"
                    BorderBrush="#666"
                    BorderThickness="0" Grid.ColumnSpan="2">
                <ContentControl x:Name="viewPresenter"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                Content="{Binding SelectedViewModel}" />
            </Border>

            <!--////  STATUS BAR  ////-->
            <Border Grid.Row="3"
                    Height="Auto"
                    Background="#333"
                    BorderBrush="#666"
                    BorderThickness="0 0 0 0"
                    Visibility="{Binding WindowStatusBarVisibility}" Grid.ColumnSpan="2">
                <Grid Height="24"
                      Margin="4 0"
                      Visibility="{Binding WindowStatusBarContentGridVisibility}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0"
                                Orientation="Horizontal">
                        <Viewbox Width="16"
                                 Height="16"
                                 Margin="0 0 2 0">
                            <Canvas Width="24"
                                    Height="24">
                                <!--<Path Fill="Gainsboro"
                                      Data="M6,5H9L12,8H19C20.66,8 22,9.34 22,11V17C22,18.66 20.66,20 19,20H6C4.34,20 3,18.66 3,17V8C3,6.34 4.34,5 6,5
                                            M6,6C4.9,6 4,6.9 4,8V17C4,18.1 4.9,19 6,19H19C20.1,19 21,18.1 21,17V11C21,9.9 20.1,9 19,9H11.59L8.59,6H6
                                            M6,22C3.24,22 1,19.76 1,17V9H2V17C2,19.21 3.79,21 6,21H18V22H6Z" />-->
                                <!--<Path Fill="Gainsboro"
                                      Data="M22,4H14L12,2H6A2,2 0 0,0 4,4V16A2,2 0 0,0 6,18H22A2,2 0 0,0 24,16V6A2,2 0 0,0 22,4
                                            M2,6H0V11H0V20A2,2 0 0,0 2,22H20V20H2V6Z" />-->
                                <Path Fill="Gainsboro"
                                      Data="M22,4A2,2 0 0,1 24,6V16A2,2 0 0,1 22,18H6A2,2 0 0,1 4,16V4A2,2 0 0,1 6,2H12L14,4H22
                                            M2,6V20H20V22H2A2,2 0 0,1 0,20V11H0V6H2
                                            M6,6V16H22V6H6Z" />
                            </Canvas>
                        </Viewbox>
                        <Label Foreground="Gainsboro"
                               Padding="0"
                               Margin="0 0 6 0"
                               VerticalContentAlignment="Center"
                               Content=":"/><!--"Groups:" />-->
                        <TextBlock VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Foreground="Gainsboro"
                                   Text="{Binding TotalGroupsInDatabase,
                                                  StringFormat={}{0:000}}"/>
                    </StackPanel>
                    <Separator Grid.Column="1"
                               Margin="6 2"
                               Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                               Visibility="Collapsed" />
                    <StackPanel Grid.Column="2"
                                Orientation="Horizontal">
                        <Viewbox Width="16"
                                 Height="16"
                                 Margin="0 0 0 0">
                            <Canvas Width="24"
                                    Height="24">
                                <Path Fill="Gainsboro"
                                      Data="M12.67 13.67C12.2 14.13 11.63 14.5 11 14.73V23H8V21H5V18H8V14.72C6.26 14.1 5 12.46 5 10.5C5 8 7 6 9.5 6C9.54 6 9.57 6 9.6 6C9.13 6.95 8.92 8 9.03 9.08C8.44 9.28 8 9.84 8 10.5C8 11.33 8.67 12 9.5 12C9.73 12 9.95 11.94 10.15 11.85C10.79 12.69 11.67 13.32 12.67 13.67
                                            M20.73 19.44L17.97 20.6L17.19 18.76L14.43 19.93L13.26 17.16L16.03 16L14.76 13C12.91 13.08 11.11 12.05 10.35 10.25C9.39 7.96 10.47 5.32 12.76 4.35C13 4.25 13.26 4.18 13.5 4.12C12.84 2.87 11.5 2 10 2C7.79 2 6 3.79 6 6C6 6.08 6 6.16 6 6.24C5.7 6.5 5.4 6.82 5.15 7.15C5.06 6.78 5 6.4 5 6C5 3.24 7.24 1 10 1S15 3.24 15 6C15 7.42 14.4 8.67 13.45 9.57C13.87 10 14.5 10.13 15.08 9.88C15.85 9.56 16.2 8.68 15.88 7.92C15.85 7.83 15.8 7.74 15.74 7.66C15.9 7.13 16 6.58 16 6C16 5.37 15.9 4.76 15.72 4.19C17 4.55 18.1 5.44 18.65 6.76C19.41 8.56 18.89 10.57 17.5 11.81L20.73 19.44
                                            M13 8.6C13.37 8.19 13.65 7.71 13.82 7.18C13.28 7.45 12.97 8 13 8.6Z" />
                                <!--<Path Fill="Gainsboro"
                                      Data="M12.66 13.67C12.32 14 11.93 14.29 11.5 14.5V21L9.5 23L7.5 21L9.5 19.29L8 18L9.5 16.71L7.5 15V14.5C6 13.77 5 12.26 5 10.5C5 8 7 6 9.5 6C9.54 6 9.58 6 9.61 6C9.59 6.07 9.54 6.12 9.5 6.18C9.23 6.79 9.08 7.43 9.03 8.08C8.43 8.28 8 8.84 8 9.5C8 10.33 8.67 11 9.5 11C9.53 11 9.57 11 9.6 11C10.24 12.25 11.34 13.2 12.66 13.67
                                            M16 6C16 5.37 15.9 4.75 15.72 4.18C17.06 4.56 18.21 5.55 18.73 6.96C19.33 8.62 18.89 10.39 17.75 11.59L20 17.68L18.78 20.25L16.22 19.05L17.5 16.76L15.66 16.06L16.63 14.34L14.16 13.41L14 12.95C12.36 12.77 10.88 11.7 10.27 10.04C9.42 7.71 10.63 5.12 12.96 4.27C13.14 4.21 13.33 4.17 13.5 4.13C12.84 2.87 11.53 2 10 2C7.79 2 6 3.79 6 6C6 6.09 6 6.17 6.03 6.26C5.7 6.53 5.4 6.82 5.15 7.15C5.06 6.78 5 6.4 5 6C5 3.24 7.24 1 10 1S15 3.24 15 6C15 7.16 14.6 8.21 13.94 9.06C16.08 8.88 16 6 16 6
                                            M12.81 8.1C12.87 8.27 12.96 8.41 13.06 8.54C13.62 7.88 13.97 7.04 14 6.11C13.89 6.13 13.8 6.15 13.7 6.18C12.92 6.47 12.5 7.33 12.81 8.1Z" />-->
                            </Canvas>
                        </Viewbox>
                        <Label Foreground="Gainsboro"
                               Padding="0"
                               Margin="0 0 6 0"
                               VerticalContentAlignment="Center"
                               Content=":" /><!--"Items:" />-->
                        <TextBlock VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Foreground="Gainsboro"
                                   Text="{Binding TotalRecordsInDatabase,
                                                  StringFormat={}{0:000}}"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </Border>
</Window>
